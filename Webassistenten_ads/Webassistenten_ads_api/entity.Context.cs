//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Webassistenten_ads_api
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class BoligEntities : DbContext
    {
        public BoligEntities()
            : base("name=BoligEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Annonse> Annonses { get; set; }
        public DbSet<AnnonseHarBestilling> AnnonseHarBestillings { get; set; }
        public DbSet<AnnonseHarUtgivelse> AnnonseHarUtgivelses { get; set; }
        public DbSet<AnnonseModul> AnnonseModuls { get; set; }
        public DbSet<AnnonseModulStandard> AnnonseModulStandards { get; set; }
        public DbSet<Avdeling> Avdelings { get; set; }
        public DbSet<BestillingHarBilde> BestillingHarBildes { get; set; }
        public DbSet<Bilde> Bildes { get; set; }
        public DbSet<BildeLogg> BildeLoggs { get; set; }
        public DbSet<Bildetype> Bildetypes { get; set; }
        public DbSet<BoligNyheter> BoligNyheters { get; set; }
        public DbSet<Boligtype> Boligtypes { get; set; }
        public DbSet<BoligtypeMap> BoligtypeMaps { get; set; }
        public DbSet<BoligtypeSok> BoligtypeSoks { get; set; }
        public DbSet<Bruker> Brukers { get; set; }
        public DbSet<Brukerlogg> Brukerloggs { get; set; }
        public DbSet<dtproperty> dtproperties { get; set; }
        public DbSet<Ekstrasider> Ekstrasiders { get; set; }
        public DbSet<Endringslogg> Endringsloggs { get; set; }
        public DbSet<Firma> Firmas { get; set; }
        public DbSet<FirmaBruker> FirmaBrukers { get; set; }
        public DbSet<FirmaBrukerHarProduktOppdater> FirmaBrukerHarProduktOppdaters { get; set; }
        public DbSet<FirmaBrukerProduksjon> FirmaBrukerProduksjons { get; set; }
        public DbSet<FirmaHarProdukt> FirmaHarProdukts { get; set; }
        public DbSet<Foto> Fotoes { get; set; }
        public DbSet<Fotograf> Fotografs { get; set; }
        public DbSet<Fotooppdrag> Fotooppdrags { get; set; }
        public DbSet<FotooppdragHarTjenestetype> FotooppdragHarTjenestetypes { get; set; }
        public DbSet<FotoOppdragType> FotoOppdragTypes { get; set; }
        public DbSet<FotoSone> FotoSones { get; set; }
        public DbSet<FotoStatu> FotoStatus { get; set; }
        public DbSet<FotoType> FotoTypes { get; set; }
        public DbSet<Gjestebok> Gjesteboks { get; set; }
        public DbSet<ImportEpost> ImportEposts { get; set; }
        public DbSet<InHouse_Bruker> InHouse_Bruker { get; set; }
        public DbSet<Inndeling> Inndelings { get; set; }
        public DbSet<Kommune> Kommunes { get; set; }
        public DbSet<Lang> Langs { get; set; }
        public DbSet<Leverandor> Leverandors { get; set; }
        public DbSet<LeverandorHarPartner> LeverandorHarPartners { get; set; }
        public DbSet<Lock> Locks { get; set; }
        public DbSet<Meglersystem> Meglersystems { get; set; }
        public DbSet<Modul> Moduls { get; set; }
        public DbSet<ModulRessur> ModulRessurs { get; set; }
        public DbSet<ModulStandard> ModulStandards { get; set; }
        public DbSet<Oppdrag> Oppdrags { get; set; }
        public DbSet<OppdragHarTjenestetype> OppdragHarTjenestetypes { get; set; }
        public DbSet<OppdragStatu> OppdragStatus { get; set; }
        public DbSet<OppdragType> OppdragTypes { get; set; }
        public DbSet<Pano> Panoes { get; set; }
        public DbSet<Panorama> Panoramas { get; set; }
        public DbSet<Partner> Partners { get; set; }
        public DbSet<PartnerHarBoligtype> PartnerHarBoligtypes { get; set; }
        public DbSet<PartnerHarFotoOppdragType> PartnerHarFotoOppdragTypes { get; set; }
        public DbSet<PartnerHarInndeling> PartnerHarInndelings { get; set; }
        public DbSet<PartnerHarOppdragType> PartnerHarOppdragTypes { get; set; }
        public DbSet<PartnerHarProdukt> PartnerHarProdukts { get; set; }
        public DbSet<PartnerHarTjenesteType> PartnerHarTjenesteTypes { get; set; }
        public DbSet<Postnr> Postnrs { get; set; }
        public DbSet<Produkt> Produkts { get; set; }
        public DbSet<ProduktHarAnnonse> ProduktHarAnnonses { get; set; }
        public DbSet<ProduktHarModul> ProduktHarModuls { get; set; }
        public DbSet<ProduktStandard> ProduktStandards { get; set; }
        public DbSet<ProduktUtgivelse> ProduktUtgivelses { get; set; }
        public DbSet<Prospekt> Prospekts { get; set; }
        public DbSet<ProspektHarBestilling> ProspektHarBestillings { get; set; }
        public DbSet<ProspektHarUtgivelse> ProspektHarUtgivelses { get; set; }
        public DbSet<Rolle> Rolles { get; set; }
        public DbSet<StatiskTekst> StatiskTeksts { get; set; }
        public DbSet<Statistikk> Statistikks { get; set; }
        public DbSet<Statkart> Statkarts { get; set; }
        public DbSet<Status> Status { get; set; }
        public DbSet<Sted> Steds { get; set; }
        public DbSet<sysdiagram> sysdiagrams { get; set; }
        public DbSet<System> Systems { get; set; }
        public DbSet<Tegning> Tegnings { get; set; }
        public DbSet<Tilleggstjeneste> Tilleggstjenestes { get; set; }
        public DbSet<Utgivelse> Utgivelses { get; set; }
        public DbSet<XmlRule> XmlRules { get; set; }
        public DbSet<XmlTag> XmlTags { get; set; }
        public DbSet<langBoligtype> langBoligtypes { get; set; }
        public DbSet<vw_MeglersystemID> vw_MeglersystemID { get; set; }
        public DbSet<vw_PartnerHarLeverandor_Settings> vw_PartnerHarLeverandor_Settings { get; set; }
        public DbSet<vwAvdeling> vwAvdelings { get; set; }
        public DbSet<vwBestillingHarBilde_Test> vwBestillingHarBilde_Test { get; set; }
        public DbSet<vwBildeLogg> vwBildeLoggs { get; set; }
        public DbSet<vwBrukerBildefil> vwBrukerBildefils { get; set; }
        public DbSet<vwBrukere> vwBrukeres { get; set; }
        public DbSet<vwBrukere_Bildefil> vwBrukere_Bildefil { get; set; }
        public DbSet<vwBrukere_i_Gruppe> vwBrukere_i_Gruppe { get; set; }
        public DbSet<vwBrukere2_PartnerID> vwBrukere2_PartnerID { get; set; }
        public DbSet<vwFirmaBruker> vwFirmaBrukers { get; set; }
        public DbSet<vwFirmaBrukerHarProdukt> vwFirmaBrukerHarProdukts { get; set; }
        public DbSet<vwFirmaHarProdukt> vwFirmaHarProdukts { get; set; }
        public DbSet<vwFoto> vwFotoes { get; set; }
        public DbSet<vwFotooppdrag> vwFotooppdrags { get; set; }
        public DbSet<vwFotooppdragDetaljer> vwFotooppdragDetaljers { get; set; }
        public DbSet<vwFotoSone> vwFotoSones { get; set; }
        public DbSet<vwImportEpost> vwImportEposts { get; set; }
        public DbSet<vwLaasDebug> vwLaasDebugs { get; set; }
        public DbSet<vwListe_ProduktModuler> vwListe_ProduktModuler { get; set; }
        public DbSet<vwModulerVisKomb> vwModulerVisKombs { get; set; }
        public DbSet<vwModulRessur> vwModulRessurs { get; set; }
        public DbSet<vwModulStandard> vwModulStandards { get; set; }
        public DbSet<vwNotarFoto> vwNotarFotoes { get; set; }
        public DbSet<vwNotarFoto2> vwNotarFoto2 { get; set; }
        public DbSet<vwPartner_EditParam> vwPartner_EditParam { get; set; }
        public DbSet<vwPartnerHarBoligtype> vwPartnerHarBoligtypes { get; set; }
        public DbSet<vwPartnerHarFotooppdragType> vwPartnerHarFotooppdragTypes { get; set; }
        public DbSet<vwPartnerHarInndeling> vwPartnerHarInndelings { get; set; }
        public DbSet<vwPartnerHarOppdragType> vwPartnerHarOppdragTypes { get; set; }
        public DbSet<vwPartnerHarProdukt> vwPartnerHarProdukts { get; set; }
        public DbSet<vwPartnerHarProdukt_Org> vwPartnerHarProdukt_Org { get; set; }
        public DbSet<vwPartnerHarProdukt_Org2> vwPartnerHarProdukt_Org2 { get; set; }
        public DbSet<vwPartnerHarProdukt_SorteringTrykk> vwPartnerHarProdukt_SorteringTrykk { get; set; }
        public DbSet<vwPartnerHarProduktProduktID> vwPartnerHarProduktProduktIDs { get; set; }
        public DbSet<vwPartnerHarTjenesteType> vwPartnerHarTjenesteTypes { get; set; }
        public DbSet<vwProdukt> vwProdukts { get; set; }
        public DbSet<vwProduktHarModul> vwProduktHarModuls { get; set; }
        public DbSet<vwProduktHarModul_Org> vwProduktHarModul_Org { get; set; }
        public DbSet<vwProduktMedEpostKundeansvarlig> vwProduktMedEpostKundeansvarligs { get; set; }
        public DbSet<vwProduktUtgivelse> vwProduktUtgivelses { get; set; }
        public DbSet<vwProduktVi> vwProduktVis { get; set; }
        public DbSet<vwProspekterHarBestilling> vwProspekterHarBestillings { get; set; }
        public DbSet<vwProspektHarBestilling> vwProspektHarBestillings { get; set; }
        public DbSet<vwProspektVi> vwProspektVis { get; set; }
        public DbSet<vwSted> vwSteds { get; set; }
    
        public virtual int dt_addtosourcecontrol(string vchSourceSafeINI, string vchProjectName, string vchComment, string vchLoginName, string vchPassword)
        {
            var vchSourceSafeINIParameter = vchSourceSafeINI != null ?
                new ObjectParameter("vchSourceSafeINI", vchSourceSafeINI) :
                new ObjectParameter("vchSourceSafeINI", typeof(string));
    
            var vchProjectNameParameter = vchProjectName != null ?
                new ObjectParameter("vchProjectName", vchProjectName) :
                new ObjectParameter("vchProjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_addtosourcecontrol", vchSourceSafeINIParameter, vchProjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_addtosourcecontrol_u(string vchSourceSafeINI, string vchProjectName, string vchComment, string vchLoginName, string vchPassword)
        {
            var vchSourceSafeINIParameter = vchSourceSafeINI != null ?
                new ObjectParameter("vchSourceSafeINI", vchSourceSafeINI) :
                new ObjectParameter("vchSourceSafeINI", typeof(string));
    
            var vchProjectNameParameter = vchProjectName != null ?
                new ObjectParameter("vchProjectName", vchProjectName) :
                new ObjectParameter("vchProjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_addtosourcecontrol_u", vchSourceSafeINIParameter, vchProjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_adduserobject()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_adduserobject");
        }
    
        public virtual int dt_adduserobject_vcs(string vchProperty)
        {
            var vchPropertyParameter = vchProperty != null ?
                new ObjectParameter("vchProperty", vchProperty) :
                new ObjectParameter("vchProperty", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_adduserobject_vcs", vchPropertyParameter);
        }
    
        public virtual int dt_checkinobject(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag, string txStream1, string txStream2, string txStream3)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            var txStream1Parameter = txStream1 != null ?
                new ObjectParameter("txStream1", txStream1) :
                new ObjectParameter("txStream1", typeof(string));
    
            var txStream2Parameter = txStream2 != null ?
                new ObjectParameter("txStream2", txStream2) :
                new ObjectParameter("txStream2", typeof(string));
    
            var txStream3Parameter = txStream3 != null ?
                new ObjectParameter("txStream3", txStream3) :
                new ObjectParameter("txStream3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkinobject", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter, txStream1Parameter, txStream2Parameter, txStream3Parameter);
        }
    
        public virtual int dt_checkinobject_u(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag, string txStream1, string txStream2, string txStream3)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            var txStream1Parameter = txStream1 != null ?
                new ObjectParameter("txStream1", txStream1) :
                new ObjectParameter("txStream1", typeof(string));
    
            var txStream2Parameter = txStream2 != null ?
                new ObjectParameter("txStream2", txStream2) :
                new ObjectParameter("txStream2", typeof(string));
    
            var txStream3Parameter = txStream3 != null ?
                new ObjectParameter("txStream3", txStream3) :
                new ObjectParameter("txStream3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkinobject_u", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter, txStream1Parameter, txStream2Parameter, txStream3Parameter);
        }
    
        public virtual int dt_checkoutobject(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkoutobject", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter);
        }
    
        public virtual int dt_checkoutobject_u(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkoutobject_u", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter);
        }
    
        public virtual int dt_displayoaerror(Nullable<int> iObject, Nullable<int> iresult)
        {
            var iObjectParameter = iObject.HasValue ?
                new ObjectParameter("iObject", iObject) :
                new ObjectParameter("iObject", typeof(int));
    
            var iresultParameter = iresult.HasValue ?
                new ObjectParameter("iresult", iresult) :
                new ObjectParameter("iresult", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_displayoaerror", iObjectParameter, iresultParameter);
        }
    
        public virtual int dt_displayoaerror_u(Nullable<int> iObject, Nullable<int> iresult)
        {
            var iObjectParameter = iObject.HasValue ?
                new ObjectParameter("iObject", iObject) :
                new ObjectParameter("iObject", typeof(int));
    
            var iresultParameter = iresult.HasValue ?
                new ObjectParameter("iresult", iresult) :
                new ObjectParameter("iresult", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_displayoaerror_u", iObjectParameter, iresultParameter);
        }
    
        public virtual int dt_droppropertiesbyid(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_droppropertiesbyid", idParameter, propertyParameter);
        }
    
        public virtual int dt_dropuserobjectbyid(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_dropuserobjectbyid", idParameter);
        }
    
        public virtual int dt_generateansiname(ObjectParameter name)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_generateansiname", name);
        }
    
        public virtual ObjectResult<Nullable<int>> dt_getobjwithprop(string property, string value)
        {
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_getobjwithprop", propertyParameter, valueParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> dt_getobjwithprop_u(string property, string uvalue)
        {
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var uvalueParameter = uvalue != null ?
                new ObjectParameter("uvalue", uvalue) :
                new ObjectParameter("uvalue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_getobjwithprop_u", propertyParameter, uvalueParameter);
        }
    
        public virtual ObjectResult<dt_getpropertiesbyid_Result> dt_getpropertiesbyid(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dt_getpropertiesbyid_Result>("dt_getpropertiesbyid", idParameter, propertyParameter);
        }
    
        public virtual ObjectResult<dt_getpropertiesbyid_u_Result> dt_getpropertiesbyid_u(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dt_getpropertiesbyid_u_Result>("dt_getpropertiesbyid_u", idParameter, propertyParameter);
        }
    
        public virtual int dt_getpropertiesbyid_vcs(Nullable<int> id, string property, ObjectParameter value)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_getpropertiesbyid_vcs", idParameter, propertyParameter, value);
        }
    
        public virtual int dt_getpropertiesbyid_vcs_u(Nullable<int> id, string property, ObjectParameter value)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_getpropertiesbyid_vcs_u", idParameter, propertyParameter, value);
        }
    
        public virtual int dt_isundersourcecontrol(string vchLoginName, string vchPassword, Nullable<int> iWhoToo)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iWhoTooParameter = iWhoToo.HasValue ?
                new ObjectParameter("iWhoToo", iWhoToo) :
                new ObjectParameter("iWhoToo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_isundersourcecontrol", vchLoginNameParameter, vchPasswordParameter, iWhoTooParameter);
        }
    
        public virtual int dt_isundersourcecontrol_u(string vchLoginName, string vchPassword, Nullable<int> iWhoToo)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iWhoTooParameter = iWhoToo.HasValue ?
                new ObjectParameter("iWhoToo", iWhoToo) :
                new ObjectParameter("iWhoToo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_isundersourcecontrol_u", vchLoginNameParameter, vchPasswordParameter, iWhoTooParameter);
        }
    
        public virtual int dt_removefromsourcecontrol()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_removefromsourcecontrol");
        }
    
        public virtual int dt_setpropertybyid(Nullable<int> id, string property, string value, byte[] lvalue)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var lvalueParameter = lvalue != null ?
                new ObjectParameter("lvalue", lvalue) :
                new ObjectParameter("lvalue", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_setpropertybyid", idParameter, propertyParameter, valueParameter, lvalueParameter);
        }
    
        public virtual int dt_setpropertybyid_u(Nullable<int> id, string property, string uvalue, byte[] lvalue)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var uvalueParameter = uvalue != null ?
                new ObjectParameter("uvalue", uvalue) :
                new ObjectParameter("uvalue", typeof(string));
    
            var lvalueParameter = lvalue != null ?
                new ObjectParameter("lvalue", lvalue) :
                new ObjectParameter("lvalue", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_setpropertybyid_u", idParameter, propertyParameter, uvalueParameter, lvalueParameter);
        }
    
        public virtual int dt_validateloginparams(string vchLoginName, string vchPassword)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_validateloginparams", vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_validateloginparams_u(string vchLoginName, string vchPassword)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_validateloginparams_u", vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_vcsenabled()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_vcsenabled");
        }
    
        public virtual ObjectResult<Nullable<int>> dt_verstamp006()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_verstamp006");
        }
    
        public virtual ObjectResult<Nullable<int>> dt_verstamp007()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_verstamp007");
        }
    
        public virtual int dt_whocheckedout(string chObjectType, string vchObjectName, string vchLoginName, string vchPassword)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_whocheckedout", chObjectTypeParameter, vchObjectNameParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_whocheckedout_u(string chObjectType, string vchObjectName, string vchLoginName, string vchPassword)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_whocheckedout_u", chObjectTypeParameter, vchObjectNameParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_AutBruker(string username, string password, ObjectParameter ret)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AutBruker", usernameParameter, passwordParameter, ret);
        }
    
        public virtual int sp_AutFirmaBruker(string username, string password, ObjectParameter ret)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AutFirmaBruker", usernameParameter, passwordParameter, ret);
        }
    
        public virtual int sp_AutFotograf(string username, string password, ObjectParameter ret)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AutFotograf", usernameParameter, passwordParameter, ret);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<sp_DIPHentBrukerFraEpost_Result> sp_DIPHentBrukerFraEpost(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DIPHentBrukerFraEpost_Result>("sp_DIPHentBrukerFraEpost", usernameParameter);
        }
    
        public virtual int sp_DIPOppdaterBilde(Nullable<long> prospektID, string bildenavn, string bildetekst, Nullable<byte> sortering)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var bildenavnParameter = bildenavn != null ?
                new ObjectParameter("Bildenavn", bildenavn) :
                new ObjectParameter("Bildenavn", typeof(string));
    
            var bildetekstParameter = bildetekst != null ?
                new ObjectParameter("Bildetekst", bildetekst) :
                new ObjectParameter("Bildetekst", typeof(string));
    
            var sorteringParameter = sortering.HasValue ?
                new ObjectParameter("Sortering", sortering) :
                new ObjectParameter("Sortering", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DIPOppdaterBilde", prospektIDParameter, bildenavnParameter, bildetekstParameter, sorteringParameter);
        }
    
        public virtual int sp_DIPOppdaterProspekt(ObjectParameter prospektID, ObjectParameter finnesAllerede, Nullable<int> skrivOverEksisterende, Nullable<int> statusID, Nullable<int> brukerID, Nullable<int> partnerID, string oppdragsnr, Nullable<int> boligtypeID, Nullable<long> pris, Nullable<int> kjopsomkostninger, Nullable<long> prisTil, Nullable<byte> prisType, Nullable<int> bOA, Nullable<int> bTA, Nullable<int> bRA, Nullable<byte> etasje, Nullable<int> fellesutgifter, Nullable<int> husleie, Nullable<int> fellesgjeld, string byggeaar, Nullable<int> tomteareal, string tomtetype, string omraade, string overskrift, string overskrift2, string adresse, string visning, Nullable<System.DateTime> visningFra, Nullable<System.DateTime> visningTil, string annonsetekst, Nullable<bool> ukens, string borettslag, string adkomst, string beliggenhet1, string bebyggelse, string standard, string innhold, string oppvarming, string kommune, string gnr, string bnr, string fnr, string snr, string lnr, Nullable<int> rom, Nullable<int> soverom, Nullable<long> pROM, string tomteinfo, string vurdering, string parkering, string finnKode, string nyKode, string megler, string meglerTittel, string meglerEmail, string meglerTlfMobil, string meglerTlf, string megler2, string meglerEmail2, string meglerTlfMobil2, string meglerTlf2, string postnrPoststed, string postnr, string poststed)
        {
            var skrivOverEksisterendeParameter = skrivOverEksisterende.HasValue ?
                new ObjectParameter("SkrivOverEksisterende", skrivOverEksisterende) :
                new ObjectParameter("SkrivOverEksisterende", typeof(int));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var brukerIDParameter = brukerID.HasValue ?
                new ObjectParameter("BrukerID", brukerID) :
                new ObjectParameter("BrukerID", typeof(int));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(int));
    
            var oppdragsnrParameter = oppdragsnr != null ?
                new ObjectParameter("Oppdragsnr", oppdragsnr) :
                new ObjectParameter("Oppdragsnr", typeof(string));
    
            var boligtypeIDParameter = boligtypeID.HasValue ?
                new ObjectParameter("BoligtypeID", boligtypeID) :
                new ObjectParameter("BoligtypeID", typeof(int));
    
            var prisParameter = pris.HasValue ?
                new ObjectParameter("Pris", pris) :
                new ObjectParameter("Pris", typeof(long));
    
            var kjopsomkostningerParameter = kjopsomkostninger.HasValue ?
                new ObjectParameter("Kjopsomkostninger", kjopsomkostninger) :
                new ObjectParameter("Kjopsomkostninger", typeof(int));
    
            var prisTilParameter = prisTil.HasValue ?
                new ObjectParameter("PrisTil", prisTil) :
                new ObjectParameter("PrisTil", typeof(long));
    
            var prisTypeParameter = prisType.HasValue ?
                new ObjectParameter("PrisType", prisType) :
                new ObjectParameter("PrisType", typeof(byte));
    
            var bOAParameter = bOA.HasValue ?
                new ObjectParameter("BOA", bOA) :
                new ObjectParameter("BOA", typeof(int));
    
            var bTAParameter = bTA.HasValue ?
                new ObjectParameter("BTA", bTA) :
                new ObjectParameter("BTA", typeof(int));
    
            var bRAParameter = bRA.HasValue ?
                new ObjectParameter("BRA", bRA) :
                new ObjectParameter("BRA", typeof(int));
    
            var etasjeParameter = etasje.HasValue ?
                new ObjectParameter("Etasje", etasje) :
                new ObjectParameter("Etasje", typeof(byte));
    
            var fellesutgifterParameter = fellesutgifter.HasValue ?
                new ObjectParameter("Fellesutgifter", fellesutgifter) :
                new ObjectParameter("Fellesutgifter", typeof(int));
    
            var husleieParameter = husleie.HasValue ?
                new ObjectParameter("Husleie", husleie) :
                new ObjectParameter("Husleie", typeof(int));
    
            var fellesgjeldParameter = fellesgjeld.HasValue ?
                new ObjectParameter("Fellesgjeld", fellesgjeld) :
                new ObjectParameter("Fellesgjeld", typeof(int));
    
            var byggeaarParameter = byggeaar != null ?
                new ObjectParameter("Byggeaar", byggeaar) :
                new ObjectParameter("Byggeaar", typeof(string));
    
            var tomtearealParameter = tomteareal.HasValue ?
                new ObjectParameter("Tomteareal", tomteareal) :
                new ObjectParameter("Tomteareal", typeof(int));
    
            var tomtetypeParameter = tomtetype != null ?
                new ObjectParameter("Tomtetype", tomtetype) :
                new ObjectParameter("Tomtetype", typeof(string));
    
            var omraadeParameter = omraade != null ?
                new ObjectParameter("Omraade", omraade) :
                new ObjectParameter("Omraade", typeof(string));
    
            var overskriftParameter = overskrift != null ?
                new ObjectParameter("Overskrift", overskrift) :
                new ObjectParameter("Overskrift", typeof(string));
    
            var overskrift2Parameter = overskrift2 != null ?
                new ObjectParameter("Overskrift2", overskrift2) :
                new ObjectParameter("Overskrift2", typeof(string));
    
            var adresseParameter = adresse != null ?
                new ObjectParameter("Adresse", adresse) :
                new ObjectParameter("Adresse", typeof(string));
    
            var visningParameter = visning != null ?
                new ObjectParameter("Visning", visning) :
                new ObjectParameter("Visning", typeof(string));
    
            var visningFraParameter = visningFra.HasValue ?
                new ObjectParameter("VisningFra", visningFra) :
                new ObjectParameter("VisningFra", typeof(System.DateTime));
    
            var visningTilParameter = visningTil.HasValue ?
                new ObjectParameter("VisningTil", visningTil) :
                new ObjectParameter("VisningTil", typeof(System.DateTime));
    
            var annonsetekstParameter = annonsetekst != null ?
                new ObjectParameter("Annonsetekst", annonsetekst) :
                new ObjectParameter("Annonsetekst", typeof(string));
    
            var ukensParameter = ukens.HasValue ?
                new ObjectParameter("Ukens", ukens) :
                new ObjectParameter("Ukens", typeof(bool));
    
            var borettslagParameter = borettslag != null ?
                new ObjectParameter("Borettslag", borettslag) :
                new ObjectParameter("Borettslag", typeof(string));
    
            var adkomstParameter = adkomst != null ?
                new ObjectParameter("Adkomst", adkomst) :
                new ObjectParameter("Adkomst", typeof(string));
    
            var beliggenhet1Parameter = beliggenhet1 != null ?
                new ObjectParameter("Beliggenhet1", beliggenhet1) :
                new ObjectParameter("Beliggenhet1", typeof(string));
    
            var bebyggelseParameter = bebyggelse != null ?
                new ObjectParameter("Bebyggelse", bebyggelse) :
                new ObjectParameter("Bebyggelse", typeof(string));
    
            var standardParameter = standard != null ?
                new ObjectParameter("Standard", standard) :
                new ObjectParameter("Standard", typeof(string));
    
            var innholdParameter = innhold != null ?
                new ObjectParameter("Innhold", innhold) :
                new ObjectParameter("Innhold", typeof(string));
    
            var oppvarmingParameter = oppvarming != null ?
                new ObjectParameter("Oppvarming", oppvarming) :
                new ObjectParameter("Oppvarming", typeof(string));
    
            var kommuneParameter = kommune != null ?
                new ObjectParameter("Kommune", kommune) :
                new ObjectParameter("Kommune", typeof(string));
    
            var gnrParameter = gnr != null ?
                new ObjectParameter("Gnr", gnr) :
                new ObjectParameter("Gnr", typeof(string));
    
            var bnrParameter = bnr != null ?
                new ObjectParameter("Bnr", bnr) :
                new ObjectParameter("Bnr", typeof(string));
    
            var fnrParameter = fnr != null ?
                new ObjectParameter("Fnr", fnr) :
                new ObjectParameter("Fnr", typeof(string));
    
            var snrParameter = snr != null ?
                new ObjectParameter("Snr", snr) :
                new ObjectParameter("Snr", typeof(string));
    
            var lnrParameter = lnr != null ?
                new ObjectParameter("Lnr", lnr) :
                new ObjectParameter("Lnr", typeof(string));
    
            var romParameter = rom.HasValue ?
                new ObjectParameter("Rom", rom) :
                new ObjectParameter("Rom", typeof(int));
    
            var soveromParameter = soverom.HasValue ?
                new ObjectParameter("Soverom", soverom) :
                new ObjectParameter("Soverom", typeof(int));
    
            var pROMParameter = pROM.HasValue ?
                new ObjectParameter("PROM", pROM) :
                new ObjectParameter("PROM", typeof(long));
    
            var tomteinfoParameter = tomteinfo != null ?
                new ObjectParameter("Tomteinfo", tomteinfo) :
                new ObjectParameter("Tomteinfo", typeof(string));
    
            var vurderingParameter = vurdering != null ?
                new ObjectParameter("Vurdering", vurdering) :
                new ObjectParameter("Vurdering", typeof(string));
    
            var parkeringParameter = parkering != null ?
                new ObjectParameter("Parkering", parkering) :
                new ObjectParameter("Parkering", typeof(string));
    
            var finnKodeParameter = finnKode != null ?
                new ObjectParameter("FinnKode", finnKode) :
                new ObjectParameter("FinnKode", typeof(string));
    
            var nyKodeParameter = nyKode != null ?
                new ObjectParameter("NyKode", nyKode) :
                new ObjectParameter("NyKode", typeof(string));
    
            var meglerParameter = megler != null ?
                new ObjectParameter("Megler", megler) :
                new ObjectParameter("Megler", typeof(string));
    
            var meglerTittelParameter = meglerTittel != null ?
                new ObjectParameter("MeglerTittel", meglerTittel) :
                new ObjectParameter("MeglerTittel", typeof(string));
    
            var meglerEmailParameter = meglerEmail != null ?
                new ObjectParameter("MeglerEmail", meglerEmail) :
                new ObjectParameter("MeglerEmail", typeof(string));
    
            var meglerTlfMobilParameter = meglerTlfMobil != null ?
                new ObjectParameter("MeglerTlfMobil", meglerTlfMobil) :
                new ObjectParameter("MeglerTlfMobil", typeof(string));
    
            var meglerTlfParameter = meglerTlf != null ?
                new ObjectParameter("MeglerTlf", meglerTlf) :
                new ObjectParameter("MeglerTlf", typeof(string));
    
            var megler2Parameter = megler2 != null ?
                new ObjectParameter("Megler2", megler2) :
                new ObjectParameter("Megler2", typeof(string));
    
            var meglerEmail2Parameter = meglerEmail2 != null ?
                new ObjectParameter("MeglerEmail2", meglerEmail2) :
                new ObjectParameter("MeglerEmail2", typeof(string));
    
            var meglerTlfMobil2Parameter = meglerTlfMobil2 != null ?
                new ObjectParameter("MeglerTlfMobil2", meglerTlfMobil2) :
                new ObjectParameter("MeglerTlfMobil2", typeof(string));
    
            var meglerTlf2Parameter = meglerTlf2 != null ?
                new ObjectParameter("MeglerTlf2", meglerTlf2) :
                new ObjectParameter("MeglerTlf2", typeof(string));
    
            var postnrPoststedParameter = postnrPoststed != null ?
                new ObjectParameter("PostnrPoststed", postnrPoststed) :
                new ObjectParameter("PostnrPoststed", typeof(string));
    
            var postnrParameter = postnr != null ?
                new ObjectParameter("Postnr", postnr) :
                new ObjectParameter("Postnr", typeof(string));
    
            var poststedParameter = poststed != null ?
                new ObjectParameter("Poststed", poststed) :
                new ObjectParameter("Poststed", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DIPOppdaterProspekt", prospektID, finnesAllerede, skrivOverEksisterendeParameter, statusIDParameter, brukerIDParameter, partnerIDParameter, oppdragsnrParameter, boligtypeIDParameter, prisParameter, kjopsomkostningerParameter, prisTilParameter, prisTypeParameter, bOAParameter, bTAParameter, bRAParameter, etasjeParameter, fellesutgifterParameter, husleieParameter, fellesgjeldParameter, byggeaarParameter, tomtearealParameter, tomtetypeParameter, omraadeParameter, overskriftParameter, overskrift2Parameter, adresseParameter, visningParameter, visningFraParameter, visningTilParameter, annonsetekstParameter, ukensParameter, borettslagParameter, adkomstParameter, beliggenhet1Parameter, bebyggelseParameter, standardParameter, innholdParameter, oppvarmingParameter, kommuneParameter, gnrParameter, bnrParameter, fnrParameter, snrParameter, lnrParameter, romParameter, soveromParameter, pROMParameter, tomteinfoParameter, vurderingParameter, parkeringParameter, finnKodeParameter, nyKodeParameter, meglerParameter, meglerTittelParameter, meglerEmailParameter, meglerTlfMobilParameter, meglerTlfParameter, megler2Parameter, meglerEmail2Parameter, meglerTlfMobil2Parameter, meglerTlf2Parameter, postnrPoststedParameter, postnrParameter, poststedParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_FINNTRANS_HentFotooppdragPartner_Result> sp_FINNTRANS_HentFotooppdragPartner(Nullable<long> fotooppdragID)
        {
            var fotooppdragIDParameter = fotooppdragID.HasValue ?
                new ObjectParameter("FotooppdragID", fotooppdragID) :
                new ObjectParameter("FotooppdragID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_FINNTRANS_HentFotooppdragPartner_Result>("sp_FINNTRANS_HentFotooppdragPartner", fotooppdragIDParameter);
        }
    
        public virtual int sp_FINNTRANS_OppdaterFoto(Nullable<long> fotooppdragID, string bildenavn, string bildetekst)
        {
            var fotooppdragIDParameter = fotooppdragID.HasValue ?
                new ObjectParameter("FotooppdragID", fotooppdragID) :
                new ObjectParameter("FotooppdragID", typeof(long));
    
            var bildenavnParameter = bildenavn != null ?
                new ObjectParameter("Bildenavn", bildenavn) :
                new ObjectParameter("Bildenavn", typeof(string));
    
            var bildetekstParameter = bildetekst != null ?
                new ObjectParameter("Bildetekst", bildetekst) :
                new ObjectParameter("Bildetekst", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_FINNTRANS_OppdaterFoto", fotooppdragIDParameter, bildenavnParameter, bildetekstParameter);
        }
    
        public virtual int sp_FINNTRANS_OppdaterPano(Nullable<long> fotooppdragID, Nullable<byte> pakkeTypeID, string bildenavn, string bildetekst)
        {
            var fotooppdragIDParameter = fotooppdragID.HasValue ?
                new ObjectParameter("FotooppdragID", fotooppdragID) :
                new ObjectParameter("FotooppdragID", typeof(long));
    
            var pakkeTypeIDParameter = pakkeTypeID.HasValue ?
                new ObjectParameter("PakkeTypeID", pakkeTypeID) :
                new ObjectParameter("PakkeTypeID", typeof(byte));
    
            var bildenavnParameter = bildenavn != null ?
                new ObjectParameter("Bildenavn", bildenavn) :
                new ObjectParameter("Bildenavn", typeof(string));
    
            var bildetekstParameter = bildetekst != null ?
                new ObjectParameter("Bildetekst", bildetekst) :
                new ObjectParameter("Bildetekst", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_FINNTRANS_OppdaterPano", fotooppdragIDParameter, pakkeTypeIDParameter, bildenavnParameter, bildetekstParameter);
        }
    
        public virtual int sp_FlyttBilde(Nullable<long> prospektID, Nullable<int> dir, Nullable<byte> sortering)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var dirParameter = dir.HasValue ?
                new ObjectParameter("Dir", dir) :
                new ObjectParameter("Dir", typeof(int));
    
            var sorteringParameter = sortering.HasValue ?
                new ObjectParameter("Sortering", sortering) :
                new ObjectParameter("Sortering", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_FlyttBilde", prospektIDParameter, dirParameter, sorteringParameter);
        }
    
        public virtual int sp_FlyttBilde_Old(Nullable<long> prospektID, Nullable<int> dir, Nullable<byte> sortering)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var dirParameter = dir.HasValue ?
                new ObjectParameter("Dir", dir) :
                new ObjectParameter("Dir", typeof(int));
    
            var sorteringParameter = sortering.HasValue ?
                new ObjectParameter("Sortering", sortering) :
                new ObjectParameter("Sortering", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_FlyttBilde_Old", prospektIDParameter, dirParameter, sorteringParameter);
        }
    
        public virtual int sp_FlyttFoto(Nullable<long> fotooppdragID, Nullable<int> dir, Nullable<byte> sortering)
        {
            var fotooppdragIDParameter = fotooppdragID.HasValue ?
                new ObjectParameter("FotooppdragID", fotooppdragID) :
                new ObjectParameter("FotooppdragID", typeof(long));
    
            var dirParameter = dir.HasValue ?
                new ObjectParameter("Dir", dir) :
                new ObjectParameter("Dir", typeof(int));
    
            var sorteringParameter = sortering.HasValue ?
                new ObjectParameter("Sortering", sortering) :
                new ObjectParameter("Sortering", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_FlyttFoto", fotooppdragIDParameter, dirParameter, sorteringParameter);
        }
    
        public virtual int sp_FlyttPano(Nullable<long> fotooppdragID, Nullable<int> dir, Nullable<byte> sortering)
        {
            var fotooppdragIDParameter = fotooppdragID.HasValue ?
                new ObjectParameter("FotooppdragID", fotooppdragID) :
                new ObjectParameter("FotooppdragID", typeof(long));
    
            var dirParameter = dir.HasValue ?
                new ObjectParameter("Dir", dir) :
                new ObjectParameter("Dir", typeof(int));
    
            var sorteringParameter = sortering.HasValue ?
                new ObjectParameter("Sortering", sortering) :
                new ObjectParameter("Sortering", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_FlyttPano", fotooppdragIDParameter, dirParameter, sorteringParameter);
        }
    
        public virtual int sp_FlyttPanorama(Nullable<long> prospektID, Nullable<int> dir, Nullable<byte> sortering)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var dirParameter = dir.HasValue ?
                new ObjectParameter("Dir", dir) :
                new ObjectParameter("Dir", typeof(int));
    
            var sorteringParameter = sortering.HasValue ?
                new ObjectParameter("Sortering", sortering) :
                new ObjectParameter("Sortering", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_FlyttPanorama", prospektIDParameter, dirParameter, sorteringParameter);
        }
    
        public virtual int sp_FritekstSok(Nullable<int> currentPage, Nullable<int> pageSize, string search, Nullable<int> sortorder, Nullable<byte> partnerID, Nullable<byte> status, ObjectParameter totalRecords)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("Sortorder", sortorder) :
                new ObjectParameter("Sortorder", typeof(int));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_FritekstSok", currentPageParameter, pageSizeParameter, searchParameter, sortorderParameter, partnerIDParameter, statusParameter, totalRecords);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_HentAnnonse_Result> sp_HentAnnonse(Nullable<long> annonseID)
        {
            var annonseIDParameter = annonseID.HasValue ?
                new ObjectParameter("AnnonseID", annonseID) :
                new ObjectParameter("AnnonseID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentAnnonse_Result>("sp_HentAnnonse", annonseIDParameter);
        }
    
        public virtual int sp_HentAnnonseBestillingListeFraTil(Nullable<int> currentPage, Nullable<int> pageSize, Nullable<byte> partnerID, Nullable<int> produktID, Nullable<byte> kategori, Nullable<System.DateTime> datoBestFra, Nullable<System.DateTime> datoBestTil, ObjectParameter totalRecords)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(int));
    
            var kategoriParameter = kategori.HasValue ?
                new ObjectParameter("Kategori", kategori) :
                new ObjectParameter("Kategori", typeof(byte));
    
            var datoBestFraParameter = datoBestFra.HasValue ?
                new ObjectParameter("DatoBestFra", datoBestFra) :
                new ObjectParameter("DatoBestFra", typeof(System.DateTime));
    
            var datoBestTilParameter = datoBestTil.HasValue ?
                new ObjectParameter("DatoBestTil", datoBestTil) :
                new ObjectParameter("DatoBestTil", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentAnnonseBestillingListeFraTil", currentPageParameter, pageSizeParameter, partnerIDParameter, produktIDParameter, kategoriParameter, datoBestFraParameter, datoBestTilParameter, totalRecords);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentAnnonseBestillingListeFraTilAntall(Nullable<byte> partnerID, Nullable<int> produktID, Nullable<byte> kategori, Nullable<System.DateTime> datoBestFra, Nullable<System.DateTime> datoBestTil)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(int));
    
            var kategoriParameter = kategori.HasValue ?
                new ObjectParameter("Kategori", kategori) :
                new ObjectParameter("Kategori", typeof(byte));
    
            var datoBestFraParameter = datoBestFra.HasValue ?
                new ObjectParameter("DatoBestFra", datoBestFra) :
                new ObjectParameter("DatoBestFra", typeof(System.DateTime));
    
            var datoBestTilParameter = datoBestTil.HasValue ?
                new ObjectParameter("DatoBestTil", datoBestTil) :
                new ObjectParameter("DatoBestTil", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentAnnonseBestillingListeFraTilAntall", partnerIDParameter, produktIDParameter, kategoriParameter, datoBestFraParameter, datoBestTilParameter);
        }
    
        public virtual ObjectResult<sp_HentAnnonseHarUtgivelse_Result> sp_HentAnnonseHarUtgivelse(Nullable<long> annonseID, Nullable<byte> alle)
        {
            var annonseIDParameter = annonseID.HasValue ?
                new ObjectParameter("AnnonseID", annonseID) :
                new ObjectParameter("AnnonseID", typeof(long));
    
            var alleParameter = alle.HasValue ?
                new ObjectParameter("Alle", alle) :
                new ObjectParameter("Alle", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentAnnonseHarUtgivelse_Result>("sp_HentAnnonseHarUtgivelse", annonseIDParameter, alleParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentAnnonseHarUtgivelseDato(Nullable<long> annonseID, Nullable<System.DateTime> muligDato)
        {
            var annonseIDParameter = annonseID.HasValue ?
                new ObjectParameter("AnnonseID", annonseID) :
                new ObjectParameter("AnnonseID", typeof(long));
    
            var muligDatoParameter = muligDato.HasValue ?
                new ObjectParameter("MuligDato", muligDato) :
                new ObjectParameter("MuligDato", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentAnnonseHarUtgivelseDato", annonseIDParameter, muligDatoParameter);
        }
    
        public virtual ObjectResult<sp_HentAnnonseModulInfo_Result> sp_HentAnnonseModulInfo(Nullable<long> annonseID)
        {
            var annonseIDParameter = annonseID.HasValue ?
                new ObjectParameter("AnnonseID", annonseID) :
                new ObjectParameter("AnnonseID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentAnnonseModulInfo_Result>("sp_HentAnnonseModulInfo", annonseIDParameter);
        }
    
        public virtual int sp_HentAnnonseUtgivelseLayout(Nullable<byte> partnerID, Nullable<System.DateTime> utgivelsesdato)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var utgivelsesdatoParameter = utgivelsesdato.HasValue ?
                new ObjectParameter("Utgivelsesdato", utgivelsesdato) :
                new ObjectParameter("Utgivelsesdato", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentAnnonseUtgivelseLayout", partnerIDParameter, utgivelsesdatoParameter);
        }
    
        public virtual int sp_HentAnnonseUtgivelseListe(Nullable<int> currentPage, Nullable<int> pageSize, Nullable<byte> partnerID, Nullable<System.DateTime> utgivelsesdato, ObjectParameter totalRecords)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var utgivelsesdatoParameter = utgivelsesdato.HasValue ?
                new ObjectParameter("Utgivelsesdato", utgivelsesdato) :
                new ObjectParameter("Utgivelsesdato", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentAnnonseUtgivelseListe", currentPageParameter, pageSizeParameter, partnerIDParameter, utgivelsesdatoParameter, totalRecords);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentAntallAnnonserDenneUtgivelseDato(Nullable<System.DateTime> utgivelsesdato, Nullable<byte> partnerID, Nullable<int> modulID)
        {
            var utgivelsesdatoParameter = utgivelsesdato.HasValue ?
                new ObjectParameter("Utgivelsesdato", utgivelsesdato) :
                new ObjectParameter("Utgivelsesdato", typeof(System.DateTime));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var modulIDParameter = modulID.HasValue ?
                new ObjectParameter("ModulID", modulID) :
                new ObjectParameter("ModulID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentAntallAnnonserDenneUtgivelseDato", utgivelsesdatoParameter, partnerIDParameter, modulIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentAntallAnnonseUtgivelseListe(Nullable<System.DateTime> utgivelsesdato, Nullable<byte> partnerID)
        {
            var utgivelsesdatoParameter = utgivelsesdato.HasValue ?
                new ObjectParameter("Utgivelsesdato", utgivelsesdato) :
                new ObjectParameter("Utgivelsesdato", typeof(System.DateTime));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentAntallAnnonseUtgivelseListe", utgivelsesdatoParameter, partnerIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentAntallBestillingHarBilde(Nullable<long> prospektID, Nullable<System.DateTime> datoBest, Nullable<int> produktID)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentAntallBestillingHarBilde", prospektIDParameter, datoBestParameter, produktIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentAntallBestillingHarBildeBildeID(Nullable<long> bildeID)
        {
            var bildeIDParameter = bildeID.HasValue ?
                new ObjectParameter("BildeID", bildeID) :
                new ObjectParameter("BildeID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentAntallBestillingHarBildeBildeID", bildeIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentAntallBilder(Nullable<long> prospektID)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentAntallBilder", prospektIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentAntallEkstrasiderDenneUtgivelseDato(Nullable<System.DateTime> utgivelsesdato, Nullable<byte> partnerID)
        {
            var utgivelsesdatoParameter = utgivelsesdato.HasValue ?
                new ObjectParameter("Utgivelsesdato", utgivelsesdato) :
                new ObjectParameter("Utgivelsesdato", typeof(System.DateTime));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentAntallEkstrasiderDenneUtgivelseDato", utgivelsesdatoParameter, partnerIDParameter);
        }
    
        public virtual ObjectResult<sp_HentAntallFotooppdragFakturaListe_Result> sp_HentAntallFotooppdragFakturaListe(Nullable<byte> fotoStatusID, Nullable<byte> fotoOppdragTypeID, Nullable<System.DateTime> datoFra, Nullable<System.DateTime> datoTil)
        {
            var fotoStatusIDParameter = fotoStatusID.HasValue ?
                new ObjectParameter("FotoStatusID", fotoStatusID) :
                new ObjectParameter("FotoStatusID", typeof(byte));
    
            var fotoOppdragTypeIDParameter = fotoOppdragTypeID.HasValue ?
                new ObjectParameter("FotoOppdragTypeID", fotoOppdragTypeID) :
                new ObjectParameter("FotoOppdragTypeID", typeof(byte));
    
            var datoFraParameter = datoFra.HasValue ?
                new ObjectParameter("DatoFra", datoFra) :
                new ObjectParameter("DatoFra", typeof(System.DateTime));
    
            var datoTilParameter = datoTil.HasValue ?
                new ObjectParameter("DatoTil", datoTil) :
                new ObjectParameter("DatoTil", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentAntallFotooppdragFakturaListe_Result>("sp_HentAntallFotooppdragFakturaListe", fotoStatusIDParameter, fotoOppdragTypeIDParameter, datoFraParameter, datoTilParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentAntallFotooppdragListe(Nullable<byte> partnerID, Nullable<byte> leverandorID, Nullable<int> brukerID, Nullable<byte> fotoTypeID, Nullable<byte> fotoStatusID)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var leverandorIDParameter = leverandorID.HasValue ?
                new ObjectParameter("LeverandorID", leverandorID) :
                new ObjectParameter("LeverandorID", typeof(byte));
    
            var brukerIDParameter = brukerID.HasValue ?
                new ObjectParameter("BrukerID", brukerID) :
                new ObjectParameter("BrukerID", typeof(int));
    
            var fotoTypeIDParameter = fotoTypeID.HasValue ?
                new ObjectParameter("FotoTypeID", fotoTypeID) :
                new ObjectParameter("FotoTypeID", typeof(byte));
    
            var fotoStatusIDParameter = fotoStatusID.HasValue ?
                new ObjectParameter("FotoStatusID", fotoStatusID) :
                new ObjectParameter("FotoStatusID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentAntallFotooppdragListe", partnerIDParameter, leverandorIDParameter, brukerIDParameter, fotoTypeIDParameter, fotoStatusIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentAntallFotooppdragListeSok(Nullable<byte> partnerID, Nullable<byte> leverandorID, string search)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var leverandorIDParameter = leverandorID.HasValue ?
                new ObjectParameter("LeverandorID", leverandorID) :
                new ObjectParameter("LeverandorID", typeof(byte));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentAntallFotooppdragListeSok", partnerIDParameter, leverandorIDParameter, searchParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentAntallFotooppdragPartnerStatus(Nullable<byte> partnerID, Nullable<byte> fotoStatusID)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var fotoStatusIDParameter = fotoStatusID.HasValue ?
                new ObjectParameter("FotoStatusID", fotoStatusID) :
                new ObjectParameter("FotoStatusID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentAntallFotooppdragPartnerStatus", partnerIDParameter, fotoStatusIDParameter);
        }
    
        public virtual ObjectResult<sp_HentAntallFotooppdragStatusListe_Result> sp_HentAntallFotooppdragStatusListe(Nullable<byte> fotoStatusID, Nullable<byte> leverandorID)
        {
            var fotoStatusIDParameter = fotoStatusID.HasValue ?
                new ObjectParameter("FotoStatusID", fotoStatusID) :
                new ObjectParameter("FotoStatusID", typeof(byte));
    
            var leverandorIDParameter = leverandorID.HasValue ?
                new ObjectParameter("LeverandorID", leverandorID) :
                new ObjectParameter("LeverandorID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentAntallFotooppdragStatusListe_Result>("sp_HentAntallFotooppdragStatusListe", fotoStatusIDParameter, leverandorIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentAntallOppdragListe(Nullable<byte> partnerID, Nullable<byte> leverandorID, Nullable<int> brukerID, Nullable<byte> oppdragStatusID)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var leverandorIDParameter = leverandorID.HasValue ?
                new ObjectParameter("LeverandorID", leverandorID) :
                new ObjectParameter("LeverandorID", typeof(byte));
    
            var brukerIDParameter = brukerID.HasValue ?
                new ObjectParameter("BrukerID", brukerID) :
                new ObjectParameter("BrukerID", typeof(int));
    
            var oppdragStatusIDParameter = oppdragStatusID.HasValue ?
                new ObjectParameter("OppdragStatusID", oppdragStatusID) :
                new ObjectParameter("OppdragStatusID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentAntallOppdragListe", partnerIDParameter, leverandorIDParameter, brukerIDParameter, oppdragStatusIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentAntallPanorama(Nullable<long> prospektID)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentAntallPanorama", prospektIDParameter);
        }
    
        public virtual int sp_HentAntallProspektBestillingDato(Nullable<System.DateTime> bestDato, Nullable<byte> produktID, Nullable<byte> partnerID)
        {
            var bestDatoParameter = bestDato.HasValue ?
                new ObjectParameter("BestDato", bestDato) :
                new ObjectParameter("BestDato", typeof(System.DateTime));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentAntallProspektBestillingDato", bestDatoParameter, produktIDParameter, partnerIDParameter);
        }
    
        public virtual int sp_HentAntallProspekterDenneUtgivelseDato(Nullable<System.DateTime> utgivelsesdato, Nullable<byte> partnerID, Nullable<byte> modulID)
        {
            var utgivelsesdatoParameter = utgivelsesdato.HasValue ?
                new ObjectParameter("Utgivelsesdato", utgivelsesdato) :
                new ObjectParameter("Utgivelsesdato", typeof(System.DateTime));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var modulIDParameter = modulID.HasValue ?
                new ObjectParameter("ModulID", modulID) :
                new ObjectParameter("ModulID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentAntallProspekterDenneUtgivelseDato", utgivelsesdatoParameter, partnerIDParameter, modulIDParameter);
        }
    
        public virtual int sp_HentAntallProspekterDenneUtgivelseDatoProdukt(Nullable<System.DateTime> utgivelsesdato, Nullable<byte> partnerID)
        {
            var utgivelsesdatoParameter = utgivelsesdato.HasValue ?
                new ObjectParameter("Utgivelsesdato", utgivelsesdato) :
                new ObjectParameter("Utgivelsesdato", typeof(System.DateTime));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentAntallProspekterDenneUtgivelseDatoProdukt", utgivelsesdatoParameter, partnerIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentAntallProspektListe(Nullable<byte> partnerID, Nullable<byte> status)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentAntallProspektListe", partnerIDParameter, statusParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentAntallProspektListeMegler(Nullable<byte> partnerID, Nullable<int> brukerID, Nullable<byte> status)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var brukerIDParameter = brukerID.HasValue ?
                new ObjectParameter("BrukerID", brukerID) :
                new ObjectParameter("BrukerID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentAntallProspektListeMegler", partnerIDParameter, brukerIDParameter, statusParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentAntallProspektListeSok(Nullable<byte> partnerID, string search)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentAntallProspektListeSok", partnerIDParameter, searchParameter);
        }
    
        public virtual int sp_HentAntallProspektUtgivelseListe(Nullable<System.DateTime> utgivelsesdato, Nullable<byte> partnerID, Nullable<byte> modulID, Nullable<byte> brukerID)
        {
            var utgivelsesdatoParameter = utgivelsesdato.HasValue ?
                new ObjectParameter("Utgivelsesdato", utgivelsesdato) :
                new ObjectParameter("Utgivelsesdato", typeof(System.DateTime));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var modulIDParameter = modulID.HasValue ?
                new ObjectParameter("ModulID", modulID) :
                new ObjectParameter("ModulID", typeof(byte));
    
            var brukerIDParameter = brukerID.HasValue ?
                new ObjectParameter("BrukerID", brukerID) :
                new ObjectParameter("BrukerID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentAntallProspektUtgivelseListe", utgivelsesdatoParameter, partnerIDParameter, modulIDParameter, brukerIDParameter);
        }
    
        public virtual ObjectResult<sp_HentAvdelinger_Result> sp_HentAvdelinger(Nullable<long> partnerID)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentAvdelinger_Result>("sp_HentAvdelinger", partnerIDParameter);
        }
    
        public virtual ObjectResult<sp_HentBildeBeggeID_Result> sp_HentBildeBeggeID(Nullable<long> prospektID, Nullable<long> bildeID)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var bildeIDParameter = bildeID.HasValue ?
                new ObjectParameter("BildeID", bildeID) :
                new ObjectParameter("BildeID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentBildeBeggeID_Result>("sp_HentBildeBeggeID", prospektIDParameter, bildeIDParameter);
        }
    
        public virtual ObjectResult<sp_HentBildeBildeID_Result> sp_HentBildeBildeID(Nullable<long> bildeID)
        {
            var bildeIDParameter = bildeID.HasValue ?
                new ObjectParameter("BildeID", bildeID) :
                new ObjectParameter("BildeID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentBildeBildeID_Result>("sp_HentBildeBildeID", bildeIDParameter);
        }
    
        public virtual int sp_HentBildeProspektID(Nullable<long> prospektID, Nullable<byte> sortering)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var sorteringParameter = sortering.HasValue ?
                new ObjectParameter("Sortering", sortering) :
                new ObjectParameter("Sortering", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentBildeProspektID", prospektIDParameter, sorteringParameter);
        }
    
        public virtual ObjectResult<sp_HentBildeProspektID_OLD_Result> sp_HentBildeProspektID_OLD(Nullable<long> prospektID, Nullable<byte> sortering)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var sorteringParameter = sortering.HasValue ?
                new ObjectParameter("Sortering", sortering) :
                new ObjectParameter("Sortering", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentBildeProspektID_OLD_Result>("sp_HentBildeProspektID_OLD", prospektIDParameter, sorteringParameter);
        }
    
        public virtual ObjectResult<sp_HentBilder_Result> sp_HentBilder(Nullable<long> prospektID)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentBilder_Result>("sp_HentBilder", prospektIDParameter);
        }
    
        public virtual ObjectResult<sp_HentBilderCopy_Result> sp_HentBilderCopy(Nullable<long> prospektID, Nullable<System.DateTime> datoBest, Nullable<byte> produktID, Nullable<bool> alle)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var alleParameter = alle.HasValue ?
                new ObjectParameter("Alle", alle) :
                new ObjectParameter("Alle", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentBilderCopy_Result>("sp_HentBilderCopy", prospektIDParameter, datoBestParameter, produktIDParameter, alleParameter);
        }
    
        public virtual ObjectResult<sp_HentBilderVis_Result> sp_HentBilderVis(Nullable<long> prospektID)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentBilderVis_Result>("sp_HentBilderVis", prospektIDParameter);
        }
    
        public virtual ObjectResult<sp_HentBoligNyheter_Result> sp_HentBoligNyheter()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentBoligNyheter_Result>("sp_HentBoligNyheter");
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentBoligtypeID(string boligtypenavnMap)
        {
            var boligtypenavnMapParameter = boligtypenavnMap != null ?
                new ObjectParameter("BoligtypenavnMap", boligtypenavnMap) :
                new ObjectParameter("BoligtypenavnMap", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentBoligtypeID", boligtypenavnMapParameter);
        }
    
        public virtual ObjectResult<sp_HentBoligtyper_Result> sp_HentBoligtyper(Nullable<byte> partnerID, Nullable<long> brukerID)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var brukerIDParameter = brukerID.HasValue ?
                new ObjectParameter("BrukerID", brukerID) :
                new ObjectParameter("BrukerID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentBoligtyper_Result>("sp_HentBoligtyper", partnerIDParameter, brukerIDParameter);
        }
    
        public virtual ObjectResult<sp_HentBoligtypeSok_Result> sp_HentBoligtypeSok()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentBoligtypeSok_Result>("sp_HentBoligtypeSok");
        }
    
        public virtual ObjectResult<sp_HentBruker_Result> sp_HentBruker(Nullable<int> brukerID)
        {
            var brukerIDParameter = brukerID.HasValue ?
                new ObjectParameter("BrukerID", brukerID) :
                new ObjectParameter("BrukerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentBruker_Result>("sp_HentBruker", brukerIDParameter);
        }
    
        public virtual ObjectResult<sp_HentBrukereFraMegler_Result> sp_HentBrukereFraMegler(Nullable<byte> partnerID, Nullable<bool> aktiv)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var aktivParameter = aktiv.HasValue ?
                new ObjectParameter("Aktiv", aktiv) :
                new ObjectParameter("Aktiv", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentBrukereFraMegler_Result>("sp_HentBrukereFraMegler", partnerIDParameter, aktivParameter);
        }
    
        public virtual ObjectResult<sp_HentBrukerFraEpost_Result> sp_HentBrukerFraEpost(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentBrukerFraEpost_Result>("sp_HentBrukerFraEpost", usernameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentBrukerIBrukAntall(Nullable<int> brukerID)
        {
            var brukerIDParameter = brukerID.HasValue ?
                new ObjectParameter("BrukerID", brukerID) :
                new ObjectParameter("BrukerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentBrukerIBrukAntall", brukerIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentBrukerID(string epost)
        {
            var epostParameter = epost != null ?
                new ObjectParameter("epost", epost) :
                new ObjectParameter("epost", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentBrukerID", epostParameter);
        }
    
        public virtual ObjectResult<string> sp_HentBrukerKatalog(string epost)
        {
            var epostParameter = epost != null ?
                new ObjectParameter("epost", epost) :
                new ObjectParameter("epost", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_HentBrukerKatalog", epostParameter);
        }
    
        public virtual ObjectResult<sp_HentBrukerlisteBytt_Result> sp_HentBrukerlisteBytt(string epost)
        {
            var epostParameter = epost != null ?
                new ObjectParameter("Epost", epost) :
                new ObjectParameter("Epost", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentBrukerlisteBytt_Result>("sp_HentBrukerlisteBytt", epostParameter);
        }
    
        public virtual int sp_HentDnBSystemverdier(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentDnBSystemverdier", iDParameter);
        }
    
        public virtual ObjectResult<sp_HentEndringslogg_Result> sp_HentEndringslogg(Nullable<long> prospektID)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentEndringslogg_Result>("sp_HentEndringslogg", prospektIDParameter);
        }
    
        public virtual ObjectResult<sp_HentFirmaBrukerHarProdukt_Result> sp_HentFirmaBrukerHarProdukt(Nullable<byte> firmaBrukerID)
        {
            var firmaBrukerIDParameter = firmaBrukerID.HasValue ?
                new ObjectParameter("FirmaBrukerID", firmaBrukerID) :
                new ObjectParameter("FirmaBrukerID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentFirmaBrukerHarProdukt_Result>("sp_HentFirmaBrukerHarProdukt", firmaBrukerIDParameter);
        }
    
        public virtual ObjectResult<sp_HentFirmaHarProdukt_Result> sp_HentFirmaHarProdukt(Nullable<int> produktID)
        {
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentFirmaHarProdukt_Result>("sp_HentFirmaHarProdukt", produktIDParameter);
        }
    
        public virtual ObjectResult<sp_HentFoto_Result> sp_HentFoto(Nullable<long> fotooppdragID)
        {
            var fotooppdragIDParameter = fotooppdragID.HasValue ?
                new ObjectParameter("FotooppdragID", fotooppdragID) :
                new ObjectParameter("FotooppdragID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentFoto_Result>("sp_HentFoto", fotooppdragIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentFotoAntall(Nullable<long> fotooppdragID)
        {
            var fotooppdragIDParameter = fotooppdragID.HasValue ?
                new ObjectParameter("FotooppdragID", fotooppdragID) :
                new ObjectParameter("FotooppdragID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentFotoAntall", fotooppdragIDParameter);
        }
    
        public virtual ObjectResult<sp_HentFotoEldre_Result> sp_HentFotoEldre(Nullable<int> days)
        {
            var daysParameter = days.HasValue ?
                new ObjectParameter("Days", days) :
                new ObjectParameter("Days", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentFotoEldre_Result>("sp_HentFotoEldre", daysParameter);
        }
    
        public virtual ObjectResult<sp_HentFotoFotoID_Result> sp_HentFotoFotoID(Nullable<long> fotoID)
        {
            var fotoIDParameter = fotoID.HasValue ?
                new ObjectParameter("FotoID", fotoID) :
                new ObjectParameter("FotoID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentFotoFotoID_Result>("sp_HentFotoFotoID", fotoIDParameter);
        }
    
        public virtual int sp_HentFotoFotooppdragID(Nullable<long> fotooppdragID, Nullable<byte> sortering)
        {
            var fotooppdragIDParameter = fotooppdragID.HasValue ?
                new ObjectParameter("FotooppdragID", fotooppdragID) :
                new ObjectParameter("FotooppdragID", typeof(long));
    
            var sorteringParameter = sortering.HasValue ?
                new ObjectParameter("Sortering", sortering) :
                new ObjectParameter("Sortering", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentFotoFotooppdragID", fotooppdragIDParameter, sorteringParameter);
        }
    
        public virtual ObjectResult<sp_HentFotograf_Result> sp_HentFotograf(Nullable<int> fotografID)
        {
            var fotografIDParameter = fotografID.HasValue ?
                new ObjectParameter("FotografID", fotografID) :
                new ObjectParameter("FotografID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentFotograf_Result>("sp_HentFotograf", fotografIDParameter);
        }
    
        public virtual ObjectResult<sp_HentFotografer_Result> sp_HentFotografer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentFotografer_Result>("sp_HentFotografer");
        }
    
        public virtual ObjectResult<sp_HentFotograferAktive_Result> sp_HentFotograferAktive(Nullable<byte> leverandorID)
        {
            var leverandorIDParameter = leverandorID.HasValue ?
                new ObjectParameter("LeverandorID", leverandorID) :
                new ObjectParameter("LeverandorID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentFotograferAktive_Result>("sp_HentFotograferAktive", leverandorIDParameter);
        }
    
        public virtual ObjectResult<sp_HentFotograferHosLeverandor_Result> sp_HentFotograferHosLeverandor(Nullable<byte> leverandorID)
        {
            var leverandorIDParameter = leverandorID.HasValue ?
                new ObjectParameter("LeverandorID", leverandorID) :
                new ObjectParameter("LeverandorID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentFotograferHosLeverandor_Result>("sp_HentFotograferHosLeverandor", leverandorIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentFotografIBrukAntall(Nullable<int> fotografID)
        {
            var fotografIDParameter = fotografID.HasValue ?
                new ObjectParameter("FotografID", fotografID) :
                new ObjectParameter("FotografID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentFotografIBrukAntall", fotografIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentFotografID(string epost)
        {
            var epostParameter = epost != null ?
                new ObjectParameter("epost", epost) :
                new ObjectParameter("epost", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentFotografID", epostParameter);
        }
    
        public virtual ObjectResult<sp_HentFotoListe_Result> sp_HentFotoListe(Nullable<byte> partnerID, string epost)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var epostParameter = epost != null ?
                new ObjectParameter("Epost", epost) :
                new ObjectParameter("Epost", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentFotoListe_Result>("sp_HentFotoListe", partnerIDParameter, epostParameter);
        }
    
        public virtual ObjectResult<sp_HentFotooppdrag_Result> sp_HentFotooppdrag(Nullable<long> fotooppdragID)
        {
            var fotooppdragIDParameter = fotooppdragID.HasValue ?
                new ObjectParameter("FotooppdragID", fotooppdragID) :
                new ObjectParameter("FotooppdragID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentFotooppdrag_Result>("sp_HentFotooppdrag", fotooppdragIDParameter);
        }
    
        public virtual ObjectResult<sp_HentFotooppdragDetaljer_Result> sp_HentFotooppdragDetaljer(Nullable<long> fotooppdragID)
        {
            var fotooppdragIDParameter = fotooppdragID.HasValue ?
                new ObjectParameter("FotooppdragID", fotooppdragID) :
                new ObjectParameter("FotooppdragID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentFotooppdragDetaljer_Result>("sp_HentFotooppdragDetaljer", fotooppdragIDParameter);
        }
    
        public virtual ObjectResult<sp_HentFotooppdragFakturaListe_Result> sp_HentFotooppdragFakturaListe(Nullable<byte> partnerID, Nullable<byte> fotoStatusID, Nullable<System.DateTime> datoFra, Nullable<System.DateTime> datoTil)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var fotoStatusIDParameter = fotoStatusID.HasValue ?
                new ObjectParameter("FotoStatusID", fotoStatusID) :
                new ObjectParameter("FotoStatusID", typeof(byte));
    
            var datoFraParameter = datoFra.HasValue ?
                new ObjectParameter("DatoFra", datoFra) :
                new ObjectParameter("DatoFra", typeof(System.DateTime));
    
            var datoTilParameter = datoTil.HasValue ?
                new ObjectParameter("DatoTil", datoTil) :
                new ObjectParameter("DatoTil", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentFotooppdragFakturaListe_Result>("sp_HentFotooppdragFakturaListe", partnerIDParameter, fotoStatusIDParameter, datoFraParameter, datoTilParameter);
        }
    
        public virtual ObjectResult<sp_HentFotooppdragFakturaListeVC_Result> sp_HentFotooppdragFakturaListeVC(Nullable<byte> partnerID, Nullable<byte> fotoStatusID, Nullable<System.DateTime> datoFra, Nullable<System.DateTime> datoTil)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var fotoStatusIDParameter = fotoStatusID.HasValue ?
                new ObjectParameter("FotoStatusID", fotoStatusID) :
                new ObjectParameter("FotoStatusID", typeof(byte));
    
            var datoFraParameter = datoFra.HasValue ?
                new ObjectParameter("DatoFra", datoFra) :
                new ObjectParameter("DatoFra", typeof(System.DateTime));
    
            var datoTilParameter = datoTil.HasValue ?
                new ObjectParameter("DatoTil", datoTil) :
                new ObjectParameter("DatoTil", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentFotooppdragFakturaListeVC_Result>("sp_HentFotooppdragFakturaListeVC", partnerIDParameter, fotoStatusIDParameter, datoFraParameter, datoTilParameter);
        }
    
        public virtual ObjectResult<sp_HentFotooppdragHarTjenesteType_Result> sp_HentFotooppdragHarTjenesteType(Nullable<int> fotooppdragID)
        {
            var fotooppdragIDParameter = fotooppdragID.HasValue ?
                new ObjectParameter("FotooppdragID", fotooppdragID) :
                new ObjectParameter("FotooppdragID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentFotooppdragHarTjenesteType_Result>("sp_HentFotooppdragHarTjenesteType", fotooppdragIDParameter);
        }
    
        public virtual int sp_HentFotooppdragListe(Nullable<int> currentPage, Nullable<int> pageSize, Nullable<byte> partnerID, Nullable<byte> leverandorID, Nullable<int> brukerID, Nullable<byte> fotoTypeID, Nullable<byte> fotoStatusID, ObjectParameter totalRecords)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var leverandorIDParameter = leverandorID.HasValue ?
                new ObjectParameter("LeverandorID", leverandorID) :
                new ObjectParameter("LeverandorID", typeof(byte));
    
            var brukerIDParameter = brukerID.HasValue ?
                new ObjectParameter("BrukerID", brukerID) :
                new ObjectParameter("BrukerID", typeof(int));
    
            var fotoTypeIDParameter = fotoTypeID.HasValue ?
                new ObjectParameter("FotoTypeID", fotoTypeID) :
                new ObjectParameter("FotoTypeID", typeof(byte));
    
            var fotoStatusIDParameter = fotoStatusID.HasValue ?
                new ObjectParameter("FotoStatusID", fotoStatusID) :
                new ObjectParameter("FotoStatusID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentFotooppdragListe", currentPageParameter, pageSizeParameter, partnerIDParameter, leverandorIDParameter, brukerIDParameter, fotoTypeIDParameter, fotoStatusIDParameter, totalRecords);
        }
    
        public virtual int sp_HentFotooppdragListeSok(Nullable<int> currentPage, Nullable<int> pageSize, string search, Nullable<byte> partnerID, Nullable<byte> leverandorID, ObjectParameter totalRecords)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var leverandorIDParameter = leverandorID.HasValue ?
                new ObjectParameter("LeverandorID", leverandorID) :
                new ObjectParameter("LeverandorID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentFotooppdragListeSok", currentPageParameter, pageSizeParameter, searchParameter, partnerIDParameter, leverandorIDParameter, totalRecords);
        }
    
        public virtual ObjectResult<sp_HentFotooppdragPartner_Result> sp_HentFotooppdragPartner(Nullable<long> fotooppdragID)
        {
            var fotooppdragIDParameter = fotooppdragID.HasValue ?
                new ObjectParameter("FotooppdragID", fotooppdragID) :
                new ObjectParameter("FotooppdragID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentFotooppdragPartner_Result>("sp_HentFotooppdragPartner", fotooppdragIDParameter);
        }
    
        public virtual ObjectResult<sp_HentFotooppdragRapport_Result> sp_HentFotooppdragRapport(Nullable<System.DateTime> datoFra, Nullable<System.DateTime> datoTil, Nullable<byte> leverandorID, Nullable<byte> fotografID)
        {
            var datoFraParameter = datoFra.HasValue ?
                new ObjectParameter("DatoFra", datoFra) :
                new ObjectParameter("DatoFra", typeof(System.DateTime));
    
            var datoTilParameter = datoTil.HasValue ?
                new ObjectParameter("DatoTil", datoTil) :
                new ObjectParameter("DatoTil", typeof(System.DateTime));
    
            var leverandorIDParameter = leverandorID.HasValue ?
                new ObjectParameter("LeverandorID", leverandorID) :
                new ObjectParameter("LeverandorID", typeof(byte));
    
            var fotografIDParameter = fotografID.HasValue ?
                new ObjectParameter("FotografID", fotografID) :
                new ObjectParameter("FotografID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentFotooppdragRapport_Result>("sp_HentFotooppdragRapport", datoFraParameter, datoTilParameter, leverandorIDParameter, fotografIDParameter);
        }
    
        public virtual ObjectResult<sp_HentFotoOppdragType_Result> sp_HentFotoOppdragType(Nullable<byte> partnerID)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentFotoOppdragType_Result>("sp_HentFotoOppdragType", partnerIDParameter);
        }
    
        public virtual ObjectResult<sp_HentFotoOppdragTypeAlle_Result> sp_HentFotoOppdragTypeAlle(Nullable<byte> partnerID)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentFotoOppdragTypeAlle_Result>("sp_HentFotoOppdragTypeAlle", partnerIDParameter);
        }
    
        public virtual ObjectResult<sp_HentFotooppdragVis_Result> sp_HentFotooppdragVis(Nullable<long> fotooppdragID)
        {
            var fotooppdragIDParameter = fotooppdragID.HasValue ?
                new ObjectParameter("FotooppdragID", fotooppdragID) :
                new ObjectParameter("FotooppdragID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentFotooppdragVis_Result>("sp_HentFotooppdragVis", fotooppdragIDParameter);
        }
    
        public virtual ObjectResult<sp_HentFotoSone_Result> sp_HentFotoSone(Nullable<byte> stedID)
        {
            var stedIDParameter = stedID.HasValue ?
                new ObjectParameter("StedID", stedID) :
                new ObjectParameter("StedID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentFotoSone_Result>("sp_HentFotoSone", stedIDParameter);
        }
    
        public virtual ObjectResult<sp_HentFotoStatus_Result> sp_HentFotoStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentFotoStatus_Result>("sp_HentFotoStatus");
        }
    
        public virtual ObjectResult<sp_HentFotoType_Result> sp_HentFotoType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentFotoType_Result>("sp_HentFotoType");
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentFristDenneDato(Nullable<byte> produktID, Nullable<System.DateTime> datoUtgivelse)
        {
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var datoUtgivelseParameter = datoUtgivelse.HasValue ?
                new ObjectParameter("DatoUtgivelse", datoUtgivelse) :
                new ObjectParameter("DatoUtgivelse", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentFristDenneDato", produktIDParameter, datoUtgivelseParameter);
        }
    
        public virtual ObjectResult<sp_HentGjestebokListe_Result> sp_HentGjestebokListe()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentGjestebokListe_Result>("sp_HentGjestebokListe");
        }
    
        public virtual ObjectResult<sp_HentGjestebokListeAlle_Result> sp_HentGjestebokListeAlle()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentGjestebokListeAlle_Result>("sp_HentGjestebokListeAlle");
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_HentGyldigProduktUtgivelse(Nullable<byte> produktID, Nullable<System.DateTime> datoBestMulig)
        {
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var datoBestMuligParameter = datoBestMulig.HasValue ?
                new ObjectParameter("DatoBestMulig", datoBestMulig) :
                new ObjectParameter("DatoBestMulig", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_HentGyldigProduktUtgivelse", produktIDParameter, datoBestMuligParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_HentGyldigUtgivelse(Nullable<System.DateTime> muligDato)
        {
            var muligDatoParameter = muligDato.HasValue ?
                new ObjectParameter("MuligDato", muligDato) :
                new ObjectParameter("MuligDato", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_HentGyldigUtgivelse", muligDatoParameter);
        }
    
        public virtual ObjectResult<sp_HentInndeling_Result> sp_HentInndeling(Nullable<byte> partnerID)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentInndeling_Result>("sp_HentInndeling", partnerIDParameter);
        }
    
        public virtual ObjectResult<sp_HentInndelingSok_Result> sp_HentInndelingSok()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentInndelingSok_Result>("sp_HentInndelingSok");
        }
    
        public virtual ObjectResult<sp_HentInndelingSpes_Result> sp_HentInndelingSpes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentInndelingSpes_Result>("sp_HentInndelingSpes");
        }
    
        public virtual ObjectResult<sp_HentKommuner_Result> sp_HentKommuner()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentKommuner_Result>("sp_HentKommuner");
        }
    
        public virtual ObjectResult<string> sp_HentKundeID(Nullable<byte> partnerID)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_HentKundeID", partnerIDParameter);
        }
    
        public virtual ObjectResult<sp_HentLanguage_Result> sp_HentLanguage()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentLanguage_Result>("sp_HentLanguage");
        }
    
        public virtual ObjectResult<sp_HentLeverandor_Result> sp_HentLeverandor(Nullable<long> partnerID)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentLeverandor_Result>("sp_HentLeverandor", partnerIDParameter);
        }
    
        public virtual ObjectResult<sp_HentLeverandorAlle_Result> sp_HentLeverandorAlle()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentLeverandorAlle_Result>("sp_HentLeverandorAlle");
        }
    
        public virtual ObjectResult<sp_HentLeverandorHarPartnere_Result> sp_HentLeverandorHarPartnere(Nullable<byte> leverandorID)
        {
            var leverandorIDParameter = leverandorID.HasValue ?
                new ObjectParameter("LeverandorID", leverandorID) :
                new ObjectParameter("LeverandorID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentLeverandorHarPartnere_Result>("sp_HentLeverandorHarPartnere", leverandorIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentLeverandorID(string epost)
        {
            var epostParameter = epost != null ?
                new ObjectParameter("Epost", epost) :
                new ObjectParameter("Epost", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentLeverandorID", epostParameter);
        }
    
        public virtual ObjectResult<sp_HentListeOversikt_Result> sp_HentListeOversikt(Nullable<System.DateTime> datoBest, Nullable<byte> produktID, Nullable<byte> partnerID, Nullable<int> brukerID, Nullable<byte> avdelingID)
        {
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var brukerIDParameter = brukerID.HasValue ?
                new ObjectParameter("BrukerID", brukerID) :
                new ObjectParameter("BrukerID", typeof(int));
    
            var avdelingIDParameter = avdelingID.HasValue ?
                new ObjectParameter("AvdelingID", avdelingID) :
                new ObjectParameter("AvdelingID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentListeOversikt_Result>("sp_HentListeOversikt", datoBestParameter, produktIDParameter, partnerIDParameter, brukerIDParameter, avdelingIDParameter);
        }
    
        public virtual ObjectResult<sp_HentListeOversiktAlle_Result> sp_HentListeOversiktAlle(Nullable<byte> status, Nullable<byte> partnerID, Nullable<int> brukerID, Nullable<byte> avdelingID)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var brukerIDParameter = brukerID.HasValue ?
                new ObjectParameter("BrukerID", brukerID) :
                new ObjectParameter("BrukerID", typeof(int));
    
            var avdelingIDParameter = avdelingID.HasValue ?
                new ObjectParameter("AvdelingID", avdelingID) :
                new ObjectParameter("AvdelingID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentListeOversiktAlle_Result>("sp_HentListeOversiktAlle", statusParameter, partnerIDParameter, brukerIDParameter, avdelingIDParameter);
        }
    
        public virtual ObjectResult<sp_HentLock_Result> sp_HentLock(Nullable<byte> partnerID)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentLock_Result>("sp_HentLock", partnerIDParameter);
        }
    
        public virtual ObjectResult<sp_HentLockAlle_Result> sp_HentLockAlle(Nullable<byte> partnerID)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentLockAlle_Result>("sp_HentLockAlle", partnerIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentLockPartner(Nullable<byte> partnerID)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentLockPartner", partnerIDParameter);
        }
    
        public virtual ObjectResult<sp_HentMeglersystem_Result> sp_HentMeglersystem()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentMeglersystem_Result>("sp_HentMeglersystem");
        }
    
        public virtual ObjectResult<sp_HentMeglerSystemInfo_Result> sp_HentMeglerSystemInfo(Nullable<byte> partnerID)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentMeglerSystemInfo_Result>("sp_HentMeglerSystemInfo", partnerIDParameter);
        }
    
        public virtual ObjectResult<sp_HentModuler_Result> sp_HentModuler(Nullable<byte> partnerID, Nullable<byte> produktID)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentModuler_Result>("sp_HentModuler", partnerIDParameter, produktIDParameter);
        }
    
        public virtual ObjectResult<sp_HentModulerAlle_Result> sp_HentModulerAlle()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentModulerAlle_Result>("sp_HentModulerAlle");
        }
    
        public virtual int sp_HentModulerBestillingDato(Nullable<System.DateTime> datoBest, Nullable<byte> produktID, Nullable<byte> partnerID, Nullable<byte> inndelingID)
        {
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var inndelingIDParameter = inndelingID.HasValue ?
                new ObjectParameter("InndelingID", inndelingID) :
                new ObjectParameter("InndelingID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentModulerBestillingDato", datoBestParameter, produktIDParameter, partnerIDParameter, inndelingIDParameter);
        }
    
        public virtual ObjectResult<sp_HentModulerForFirma_Result> sp_HentModulerForFirma(Nullable<int> firmaID)
        {
            var firmaIDParameter = firmaID.HasValue ?
                new ObjectParameter("FirmaID", firmaID) :
                new ObjectParameter("FirmaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentModulerForFirma_Result>("sp_HentModulerForFirma", firmaIDParameter);
        }
    
        public virtual ObjectResult<sp_HentOppdrag_Result> sp_HentOppdrag(Nullable<long> oppdragID)
        {
            var oppdragIDParameter = oppdragID.HasValue ?
                new ObjectParameter("OppdragID", oppdragID) :
                new ObjectParameter("OppdragID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentOppdrag_Result>("sp_HentOppdrag", oppdragIDParameter);
        }
    
        public virtual ObjectResult<sp_HentOppdragHarTjenesteType_Result> sp_HentOppdragHarTjenesteType(Nullable<int> oppdragID)
        {
            var oppdragIDParameter = oppdragID.HasValue ?
                new ObjectParameter("OppdragID", oppdragID) :
                new ObjectParameter("OppdragID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentOppdragHarTjenesteType_Result>("sp_HentOppdragHarTjenesteType", oppdragIDParameter);
        }
    
        public virtual int sp_HentOppdragListe(Nullable<int> currentPage, Nullable<int> pageSize, Nullable<byte> partnerID, Nullable<byte> leverandorID, Nullable<int> brukerID, Nullable<byte> oppdragStatusID, ObjectParameter totalRecords)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var leverandorIDParameter = leverandorID.HasValue ?
                new ObjectParameter("LeverandorID", leverandorID) :
                new ObjectParameter("LeverandorID", typeof(byte));
    
            var brukerIDParameter = brukerID.HasValue ?
                new ObjectParameter("BrukerID", brukerID) :
                new ObjectParameter("BrukerID", typeof(int));
    
            var oppdragStatusIDParameter = oppdragStatusID.HasValue ?
                new ObjectParameter("OppdragStatusID", oppdragStatusID) :
                new ObjectParameter("OppdragStatusID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentOppdragListe", currentPageParameter, pageSizeParameter, partnerIDParameter, leverandorIDParameter, brukerIDParameter, oppdragStatusIDParameter, totalRecords);
        }
    
        public virtual ObjectResult<sp_HentOppdragStatus_Result> sp_HentOppdragStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentOppdragStatus_Result>("sp_HentOppdragStatus");
        }
    
        public virtual ObjectResult<sp_HentOppdragType_Result> sp_HentOppdragType(Nullable<byte> partnerID)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentOppdragType_Result>("sp_HentOppdragType", partnerIDParameter);
        }
    
        public virtual ObjectResult<sp_HentOppdragTypeAlle_Result> sp_HentOppdragTypeAlle(Nullable<byte> partnerID)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentOppdragTypeAlle_Result>("sp_HentOppdragTypeAlle", partnerIDParameter);
        }
    
        public virtual ObjectResult<sp_HentOppdragVis_Result> sp_HentOppdragVis(Nullable<long> oppdragID)
        {
            var oppdragIDParameter = oppdragID.HasValue ?
                new ObjectParameter("OppdragID", oppdragID) :
                new ObjectParameter("OppdragID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentOppdragVis_Result>("sp_HentOppdragVis", oppdragIDParameter);
        }
    
        public virtual ObjectResult<sp_HentPano_Result> sp_HentPano(Nullable<long> fotooppdragID, Nullable<byte> pakkeTypeID)
        {
            var fotooppdragIDParameter = fotooppdragID.HasValue ?
                new ObjectParameter("FotooppdragID", fotooppdragID) :
                new ObjectParameter("FotooppdragID", typeof(long));
    
            var pakkeTypeIDParameter = pakkeTypeID.HasValue ?
                new ObjectParameter("PakkeTypeID", pakkeTypeID) :
                new ObjectParameter("PakkeTypeID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentPano_Result>("sp_HentPano", fotooppdragIDParameter, pakkeTypeIDParameter);
        }
    
        public virtual int sp_HentPanoFotooppdragID(Nullable<long> fotooppdragID, Nullable<byte> sortering)
        {
            var fotooppdragIDParameter = fotooppdragID.HasValue ?
                new ObjectParameter("FotooppdragID", fotooppdragID) :
                new ObjectParameter("FotooppdragID", typeof(long));
    
            var sorteringParameter = sortering.HasValue ?
                new ObjectParameter("Sortering", sortering) :
                new ObjectParameter("Sortering", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentPanoFotooppdragID", fotooppdragIDParameter, sorteringParameter);
        }
    
        public virtual ObjectResult<sp_HentPanoramaer_Result> sp_HentPanoramaer(Nullable<long> prospektID)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentPanoramaer_Result>("sp_HentPanoramaer", prospektIDParameter);
        }
    
        public virtual ObjectResult<sp_HentPanoramaPanoramaID_Result> sp_HentPanoramaPanoramaID(Nullable<long> panoramaID)
        {
            var panoramaIDParameter = panoramaID.HasValue ?
                new ObjectParameter("PanoramaID", panoramaID) :
                new ObjectParameter("PanoramaID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentPanoramaPanoramaID_Result>("sp_HentPanoramaPanoramaID", panoramaIDParameter);
        }
    
        public virtual int sp_HentPanoramaProspektID(Nullable<long> prospektID, Nullable<byte> sortering)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var sorteringParameter = sortering.HasValue ?
                new ObjectParameter("Sortering", sortering) :
                new ObjectParameter("Sortering", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentPanoramaProspektID", prospektIDParameter, sorteringParameter);
        }
    
        public virtual int sp_HentParaplyannonsePartnerID(Nullable<byte> produktID, ObjectParameter partnerID)
        {
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentParaplyannonsePartnerID", produktIDParameter, partnerID);
        }
    
        public virtual ObjectResult<sp_HentPartner_Result> sp_HentPartner(Nullable<byte> partnerID)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentPartner_Result>("sp_HentPartner", partnerIDParameter);
        }
    
        public virtual ObjectResult<sp_HentPartnere_Result> sp_HentPartnere(Nullable<byte> partnerID)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentPartnere_Result>("sp_HentPartnere", partnerIDParameter);
        }
    
        public virtual ObjectResult<sp_HentPartnereProdukt_Result> sp_HentPartnereProdukt(Nullable<byte> produktID, Nullable<byte> partnerID)
        {
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentPartnereProdukt_Result>("sp_HentPartnereProdukt", produktIDParameter, partnerIDParameter);
        }
    
        public virtual int sp_HentPartnereProduktSortering(Nullable<byte> produktID)
        {
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentPartnereProduktSortering", produktIDParameter);
        }
    
        public virtual ObjectResult<sp_HentPartnerProdukter_Result> sp_HentPartnerProdukter(Nullable<byte> partnerID)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentPartnerProdukter_Result>("sp_HentPartnerProdukter", partnerIDParameter);
        }
    
        public virtual ObjectResult<sp_HentPartnerProdukterOmbrekking_Result> sp_HentPartnerProdukterOmbrekking(Nullable<byte> partnerID)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentPartnerProdukterOmbrekking_Result>("sp_HentPartnerProdukterOmbrekking", partnerIDParameter);
        }
    
        public virtual ObjectResult<sp_HentProdukt_Result> sp_HentProdukt(Nullable<byte> produktID)
        {
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentProdukt_Result>("sp_HentProdukt", produktIDParameter);
        }
    
        public virtual ObjectResult<sp_HentProdukter_Result> sp_HentProdukter()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentProdukter_Result>("sp_HentProdukter");
        }
    
        public virtual ObjectResult<sp_HentProduktHarAnnonse_Result> sp_HentProduktHarAnnonse(Nullable<int> annonseID)
        {
            var annonseIDParameter = annonseID.HasValue ?
                new ObjectParameter("AnnonseID", annonseID) :
                new ObjectParameter("AnnonseID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentProduktHarAnnonse_Result>("sp_HentProduktHarAnnonse", annonseIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentProduktLock(Nullable<byte> produktID)
        {
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentProduktLock", produktIDParameter);
        }
    
        public virtual ObjectResult<sp_HentProduktLockDato_Result> sp_HentProduktLockDato(Nullable<byte> produktID)
        {
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentProduktLockDato_Result>("sp_HentProduktLockDato", produktIDParameter);
        }
    
        public virtual ObjectResult<sp_HentProduktPartnere_Result> sp_HentProduktPartnere(Nullable<byte> produktID)
        {
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentProduktPartnere_Result>("sp_HentProduktPartnere", produktIDParameter);
        }
    
        public virtual int sp_HentProduktStandard(Nullable<byte> partnerID, ObjectParameter produktID)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentProduktStandard", partnerIDParameter, produktID);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentProduktUtgivelseDato(Nullable<byte> produktID, Nullable<System.DateTime> utgivelsesdato)
        {
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var utgivelsesdatoParameter = utgivelsesdato.HasValue ?
                new ObjectParameter("Utgivelsesdato", utgivelsesdato) :
                new ObjectParameter("Utgivelsesdato", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentProduktUtgivelseDato", produktIDParameter, utgivelsesdatoParameter);
        }
    
        public virtual ObjectResult<string> sp_HentProduktUtgivelseForrige(Nullable<byte> produktID, Nullable<System.DateTime> datoUtgivelseForsteMulige)
        {
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var datoUtgivelseForsteMuligeParameter = datoUtgivelseForsteMulige.HasValue ?
                new ObjectParameter("DatoUtgivelseForsteMulige", datoUtgivelseForsteMulige) :
                new ObjectParameter("DatoUtgivelseForsteMulige", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_HentProduktUtgivelseForrige", produktIDParameter, datoUtgivelseForsteMuligeParameter);
        }
    
        public virtual ObjectResult<string> sp_HentProduktUtgivelseForsteMulige(Nullable<byte> produktID, Nullable<System.DateTime> datoUtgivelseForsteMulige)
        {
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var datoUtgivelseForsteMuligeParameter = datoUtgivelseForsteMulige.HasValue ?
                new ObjectParameter("DatoUtgivelseForsteMulige", datoUtgivelseForsteMulige) :
                new ObjectParameter("DatoUtgivelseForsteMulige", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_HentProduktUtgivelseForsteMulige", produktIDParameter, datoUtgivelseForsteMuligeParameter);
        }
    
        public virtual int sp_HentProduktUtgivelseHovedordrenr(Nullable<byte> produktID, Nullable<System.DateTime> utgivelsesdato, ObjectParameter hovedordrenr)
        {
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var utgivelsesdatoParameter = utgivelsesdato.HasValue ?
                new ObjectParameter("Utgivelsesdato", utgivelsesdato) :
                new ObjectParameter("Utgivelsesdato", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentProduktUtgivelseHovedordrenr", produktIDParameter, utgivelsesdatoParameter, hovedordrenr);
        }
    
        public virtual ObjectResult<sp_HentProduktUtgivelseListe_Result> sp_HentProduktUtgivelseListe(Nullable<byte> produktID, Nullable<System.DateTime> utgivelsesdato)
        {
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var utgivelsesdatoParameter = utgivelsesdato.HasValue ?
                new ObjectParameter("Utgivelsesdato", utgivelsesdato) :
                new ObjectParameter("Utgivelsesdato", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentProduktUtgivelseListe_Result>("sp_HentProduktUtgivelseListe", produktIDParameter, utgivelsesdatoParameter);
        }
    
        public virtual ObjectResult<sp_HentProduktUtgivelseLockDato_Result> sp_HentProduktUtgivelseLockDato(Nullable<byte> produktID, Nullable<System.DateTime> datoUtgivelse, Nullable<byte> ekstratimer)
        {
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var datoUtgivelseParameter = datoUtgivelse.HasValue ?
                new ObjectParameter("DatoUtgivelse", datoUtgivelse) :
                new ObjectParameter("DatoUtgivelse", typeof(System.DateTime));
    
            var ekstratimerParameter = ekstratimer.HasValue ?
                new ObjectParameter("Ekstratimer", ekstratimer) :
                new ObjectParameter("Ekstratimer", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentProduktUtgivelseLockDato_Result>("sp_HentProduktUtgivelseLockDato", produktIDParameter, datoUtgivelseParameter, ekstratimerParameter);
        }
    
        public virtual ObjectResult<sp_HentProspekt_Result> sp_HentProspekt(Nullable<long> prospektID)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentProspekt_Result>("sp_HentProspekt", prospektIDParameter);
        }
    
        public virtual ObjectResult<sp_HentProspektBestillingLayout_Result> sp_HentProspektBestillingLayout(Nullable<byte> partnerID, Nullable<byte> produktID, Nullable<System.DateTime> datoBest)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentProspektBestillingLayout_Result>("sp_HentProspektBestillingLayout", partnerIDParameter, produktIDParameter, datoBestParameter);
        }
    
        public virtual int sp_HentProspektBestillingListe(Nullable<int> currentPage, Nullable<int> pageSize, Nullable<byte> partnerID, Nullable<int> modulID, Nullable<int> brukerID, Nullable<byte> produktID, Nullable<System.DateTime> datoBest, ObjectParameter totalRecords)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var modulIDParameter = modulID.HasValue ?
                new ObjectParameter("ModulID", modulID) :
                new ObjectParameter("ModulID", typeof(int));
    
            var brukerIDParameter = brukerID.HasValue ?
                new ObjectParameter("BrukerID", brukerID) :
                new ObjectParameter("BrukerID", typeof(int));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentProspektBestillingListe", currentPageParameter, pageSizeParameter, partnerIDParameter, modulIDParameter, brukerIDParameter, produktIDParameter, datoBestParameter, totalRecords);
        }
    
        public virtual int sp_HentProspektBestillingListe2(Nullable<int> currentPage, Nullable<int> pageSize, Nullable<byte> partnerID, Nullable<int> modulID, Nullable<int> brukerID, Nullable<byte> produktID, Nullable<System.DateTime> datoBest, ObjectParameter totalRecords)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var modulIDParameter = modulID.HasValue ?
                new ObjectParameter("ModulID", modulID) :
                new ObjectParameter("ModulID", typeof(int));
    
            var brukerIDParameter = brukerID.HasValue ?
                new ObjectParameter("BrukerID", brukerID) :
                new ObjectParameter("BrukerID", typeof(int));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentProspektBestillingListe2", currentPageParameter, pageSizeParameter, partnerIDParameter, modulIDParameter, brukerIDParameter, produktIDParameter, datoBestParameter, totalRecords);
        }
    
        public virtual int sp_HentProspektBestillingListeAlle(Nullable<int> currentPage, Nullable<int> pageSize, Nullable<byte> partnerID, Nullable<int> modulID, Nullable<int> brukerID, Nullable<byte> produktID, Nullable<System.DateTime> datoBest, ObjectParameter totalRecords)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var modulIDParameter = modulID.HasValue ?
                new ObjectParameter("ModulID", modulID) :
                new ObjectParameter("ModulID", typeof(int));
    
            var brukerIDParameter = brukerID.HasValue ?
                new ObjectParameter("BrukerID", brukerID) :
                new ObjectParameter("BrukerID", typeof(int));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentProspektBestillingListeAlle", currentPageParameter, pageSizeParameter, partnerIDParameter, modulIDParameter, brukerIDParameter, produktIDParameter, datoBestParameter, totalRecords);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentProspektBestillingListeAlleAntall(Nullable<System.DateTime> datoBest, Nullable<byte> partnerID, Nullable<byte> produktID, Nullable<int> modulID, Nullable<int> brukerID)
        {
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var modulIDParameter = modulID.HasValue ?
                new ObjectParameter("ModulID", modulID) :
                new ObjectParameter("ModulID", typeof(int));
    
            var brukerIDParameter = brukerID.HasValue ?
                new ObjectParameter("BrukerID", brukerID) :
                new ObjectParameter("BrukerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentProspektBestillingListeAlleAntall", datoBestParameter, partnerIDParameter, produktIDParameter, modulIDParameter, brukerIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentProspektBestillingListeAntall(Nullable<System.DateTime> datoBest, Nullable<byte> partnerID, Nullable<byte> produktID, Nullable<int> modulID, Nullable<int> brukerID)
        {
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var modulIDParameter = modulID.HasValue ?
                new ObjectParameter("ModulID", modulID) :
                new ObjectParameter("ModulID", typeof(int));
    
            var brukerIDParameter = brukerID.HasValue ?
                new ObjectParameter("BrukerID", brukerID) :
                new ObjectParameter("BrukerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentProspektBestillingListeAntall", datoBestParameter, partnerIDParameter, produktIDParameter, modulIDParameter, brukerIDParameter);
        }
    
        public virtual ObjectResult<sp_HentProspektBestillingListeNyhet_Result> sp_HentProspektBestillingListeNyhet(Nullable<byte> partnerID, Nullable<byte> produktID, Nullable<System.DateTime> datoBest)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentProspektBestillingListeNyhet_Result>("sp_HentProspektBestillingListeNyhet", partnerIDParameter, produktIDParameter, datoBestParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentProspektBestillingListeNyhetAntall(Nullable<byte> partnerID, Nullable<byte> produktID, Nullable<System.DateTime> datoBest)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentProspektBestillingListeNyhetAntall", partnerIDParameter, produktIDParameter, datoBestParameter);
        }
    
        public virtual ObjectResult<sp_HentProspektBestillingListeOrdre_Result> sp_HentProspektBestillingListeOrdre(Nullable<byte> produktID, Nullable<byte> partnerID, Nullable<int> modulID, Nullable<System.DateTime> datoBest)
        {
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var modulIDParameter = modulID.HasValue ?
                new ObjectParameter("ModulID", modulID) :
                new ObjectParameter("ModulID", typeof(int));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentProspektBestillingListeOrdre_Result>("sp_HentProspektBestillingListeOrdre", produktIDParameter, partnerIDParameter, modulIDParameter, datoBestParameter);
        }
    
        public virtual int sp_HentProspektBestillingListeSortering(Nullable<int> currentPage, Nullable<int> pageSize, Nullable<byte> partnerID, Nullable<int> modulID, Nullable<int> brukerID, Nullable<byte> produktID, Nullable<System.DateTime> datoBest, Nullable<byte> sortering, ObjectParameter totalRecords)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var modulIDParameter = modulID.HasValue ?
                new ObjectParameter("ModulID", modulID) :
                new ObjectParameter("ModulID", typeof(int));
    
            var brukerIDParameter = brukerID.HasValue ?
                new ObjectParameter("BrukerID", brukerID) :
                new ObjectParameter("BrukerID", typeof(int));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            var sorteringParameter = sortering.HasValue ?
                new ObjectParameter("Sortering", sortering) :
                new ObjectParameter("Sortering", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentProspektBestillingListeSortering", currentPageParameter, pageSizeParameter, partnerIDParameter, modulIDParameter, brukerIDParameter, produktIDParameter, datoBestParameter, sorteringParameter, totalRecords);
        }
    
        public virtual int sp_HentProspektBestillingOrdrenr(Nullable<long> prospektID, Nullable<byte> produktID, Nullable<System.DateTime> datoBest, ObjectParameter ordrenr)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentProspektBestillingOrdrenr", prospektIDParameter, produktIDParameter, datoBestParameter, ordrenr);
        }
    
        public virtual ObjectResult<sp_HentProspektDetaljerOrdre_Result> sp_HentProspektDetaljerOrdre(Nullable<long> prospektID)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentProspektDetaljerOrdre_Result>("sp_HentProspektDetaljerOrdre", prospektIDParameter);
        }
    
        public virtual int sp_HentProspekterDenneUtgivelseDato(Nullable<System.DateTime> utgivelsesdato, Nullable<byte> partnerID, Nullable<byte> modulID)
        {
            var utgivelsesdatoParameter = utgivelsesdato.HasValue ?
                new ObjectParameter("Utgivelsesdato", utgivelsesdato) :
                new ObjectParameter("Utgivelsesdato", typeof(System.DateTime));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var modulIDParameter = modulID.HasValue ?
                new ObjectParameter("ModulID", modulID) :
                new ObjectParameter("ModulID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentProspekterDenneUtgivelseDato", utgivelsesdatoParameter, partnerIDParameter, modulIDParameter);
        }
    
        public virtual ObjectResult<sp_HentProspekterListe_Result> sp_HentProspekterListe(Nullable<byte> partnerID, string epost)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var epostParameter = epost != null ?
                new ObjectParameter("Epost", epost) :
                new ObjectParameter("Epost", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentProspekterListe_Result>("sp_HentProspekterListe", partnerIDParameter, epostParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentProspektHarAntallBestillingerIgjen(Nullable<byte> partnerID, Nullable<byte> produktID, Nullable<long> prospektID, ObjectParameter antallBookingerIgjen)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentProspektHarAntallBestillingerIgjen", partnerIDParameter, produktIDParameter, prospektIDParameter, antallBookingerIgjen);
        }
    
        public virtual ObjectResult<sp_HentProspektHarBestilling_Result> sp_HentProspektHarBestilling(Nullable<long> prospektID, Nullable<byte> produktID, Nullable<byte> alle)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var alleParameter = alle.HasValue ?
                new ObjectParameter("Alle", alle) :
                new ObjectParameter("Alle", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentProspektHarBestilling_Result>("sp_HentProspektHarBestilling", prospektIDParameter, produktIDParameter, alleParameter);
        }
    
        public virtual int sp_HentProspektHarBestillingAntall(Nullable<int> produktID, Nullable<long> prospektID, ObjectParameter antall)
        {
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(int));
    
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentProspektHarBestillingAntall", produktIDParameter, prospektIDParameter, antall);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentProspektHarBestillingAntalldager(Nullable<byte> partnerID, Nullable<byte> produktID, Nullable<long> prospektID, Nullable<System.DateTime> datoBest, Nullable<byte> faktor, ObjectParameter antallDager)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            var faktorParameter = faktor.HasValue ?
                new ObjectParameter("Faktor", faktor) :
                new ObjectParameter("Faktor", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentProspektHarBestillingAntalldager", partnerIDParameter, produktIDParameter, prospektIDParameter, datoBestParameter, faktorParameter, antallDager);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentProspektHarBestillingDato(Nullable<long> prospektID, Nullable<System.DateTime> datoBestMulig, Nullable<byte> produktID)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var datoBestMuligParameter = datoBestMulig.HasValue ?
                new ObjectParameter("DatoBestMulig", datoBestMulig) :
                new ObjectParameter("DatoBestMulig", typeof(System.DateTime));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentProspektHarBestillingDato", prospektIDParameter, datoBestMuligParameter, produktIDParameter);
        }
    
        public virtual ObjectResult<sp_HentProspektHarBestillingDatoListe_Result> sp_HentProspektHarBestillingDatoListe(Nullable<byte> produktID, Nullable<System.DateTime> datoBest)
        {
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentProspektHarBestillingDatoListe_Result>("sp_HentProspektHarBestillingDatoListe", produktIDParameter, datoBestParameter);
        }
    
        public virtual ObjectResult<sp_HentProspektHarBestillingDetaljer_Result> sp_HentProspektHarBestillingDetaljer(Nullable<long> prospektID, Nullable<byte> produktID, Nullable<System.DateTime> datoBest)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentProspektHarBestillingDetaljer_Result>("sp_HentProspektHarBestillingDetaljer", prospektIDParameter, produktIDParameter, datoBestParameter);
        }
    
        public virtual ObjectResult<sp_HentProspektHarBestillingLock_Result> sp_HentProspektHarBestillingLock(Nullable<long> prospektID, Nullable<int> produktID, Nullable<byte> ekstratime)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(int));
    
            var ekstratimeParameter = ekstratime.HasValue ?
                new ObjectParameter("Ekstratime", ekstratime) :
                new ObjectParameter("Ekstratime", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentProspektHarBestillingLock_Result>("sp_HentProspektHarBestillingLock", prospektIDParameter, produktIDParameter, ekstratimeParameter);
        }
    
        public virtual ObjectResult<sp_HentProspektHarBestillingLockBF_Result> sp_HentProspektHarBestillingLockBF(Nullable<long> prospektID, Nullable<byte> produktID, Nullable<byte> ekstratime)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var ekstratimeParameter = ekstratime.HasValue ?
                new ObjectParameter("Ekstratime", ekstratime) :
                new ObjectParameter("Ekstratime", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentProspektHarBestillingLockBF_Result>("sp_HentProspektHarBestillingLockBF", prospektIDParameter, produktIDParameter, ekstratimeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentProspektHarBestillingLockSletting(Nullable<byte> produktID, Nullable<System.DateTime> datoBest, Nullable<byte> ekstratimer)
        {
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            var ekstratimerParameter = ekstratimer.HasValue ?
                new ObjectParameter("Ekstratimer", ekstratimer) :
                new ObjectParameter("Ekstratimer", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentProspektHarBestillingLockSletting", produktIDParameter, datoBestParameter, ekstratimerParameter);
        }
    
        public virtual ObjectResult<sp_HentProspektHarUtgivelse_Result> sp_HentProspektHarUtgivelse(Nullable<long> prospektID, Nullable<byte> alle)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var alleParameter = alle.HasValue ?
                new ObjectParameter("Alle", alle) :
                new ObjectParameter("Alle", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentProspektHarUtgivelse_Result>("sp_HentProspektHarUtgivelse", prospektIDParameter, alleParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentProspektHarUtgivelseDato(Nullable<long> prospektID, Nullable<System.DateTime> muligDato)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var muligDatoParameter = muligDato.HasValue ?
                new ObjectParameter("MuligDato", muligDato) :
                new ObjectParameter("MuligDato", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentProspektHarUtgivelseDato", prospektIDParameter, muligDatoParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> sp_HentProspektID(string oppdragsnr, Nullable<byte> partnerID)
        {
            var oppdragsnrParameter = oppdragsnr != null ?
                new ObjectParameter("Oppdragsnr", oppdragsnr) :
                new ObjectParameter("Oppdragsnr", typeof(string));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("sp_HentProspektID", oppdragsnrParameter, partnerIDParameter);
        }
    
        public virtual ObjectResult<sp_HentProspektIkkeBestillingListe_Result> sp_HentProspektIkkeBestillingListe(Nullable<int> partnerID, Nullable<int> produktID, Nullable<int> inndelingID, Nullable<System.DateTime> datoBest)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(int));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(int));
    
            var inndelingIDParameter = inndelingID.HasValue ?
                new ObjectParameter("InndelingID", inndelingID) :
                new ObjectParameter("InndelingID", typeof(int));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentProspektIkkeBestillingListe_Result>("sp_HentProspektIkkeBestillingListe", partnerIDParameter, produktIDParameter, inndelingIDParameter, datoBestParameter);
        }
    
        public virtual int sp_HentProspektListe(Nullable<int> currentPage, Nullable<int> pageSize, Nullable<int> sortorder, Nullable<byte> partnerID, Nullable<byte> status, ObjectParameter totalRecords)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("Sortorder", sortorder) :
                new ObjectParameter("Sortorder", typeof(int));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentProspektListe", currentPageParameter, pageSizeParameter, sortorderParameter, partnerIDParameter, statusParameter, totalRecords);
        }
    
        public virtual int sp_HentProspektListeMegler(Nullable<int> currentPage, Nullable<int> pageSize, Nullable<int> sortorder, Nullable<byte> partnerID, Nullable<int> brukerID, Nullable<byte> status, ObjectParameter totalRecords)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("Sortorder", sortorder) :
                new ObjectParameter("Sortorder", typeof(int));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var brukerIDParameter = brukerID.HasValue ?
                new ObjectParameter("BrukerID", brukerID) :
                new ObjectParameter("BrukerID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentProspektListeMegler", currentPageParameter, pageSizeParameter, sortorderParameter, partnerIDParameter, brukerIDParameter, statusParameter, totalRecords);
        }
    
        public virtual int sp_HentProspektListeSok(Nullable<int> currentPage, Nullable<int> pageSize, string search, Nullable<byte> partnerID, ObjectParameter totalRecords)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentProspektListeSok", currentPageParameter, pageSizeParameter, searchParameter, partnerIDParameter, totalRecords);
        }
    
        public virtual int sp_HentProspektMangler(Nullable<byte> partnerID, Nullable<System.DateTime> datoBest)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentProspektMangler", partnerIDParameter, datoBestParameter);
        }
    
        public virtual ObjectResult<sp_HentProspektModulInfo_Result> sp_HentProspektModulInfo(Nullable<long> prospektID, Nullable<byte> produktID, Nullable<System.DateTime> datoBest)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentProspektModulInfo_Result>("sp_HentProspektModulInfo", prospektIDParameter, produktIDParameter, datoBestParameter);
        }
    
        public virtual int sp_HentProspektUtgivelseLayout(Nullable<byte> partnerID, Nullable<System.DateTime> utgivelsesdato)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var utgivelsesdatoParameter = utgivelsesdato.HasValue ?
                new ObjectParameter("Utgivelsesdato", utgivelsesdato) :
                new ObjectParameter("Utgivelsesdato", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentProspektUtgivelseLayout", partnerIDParameter, utgivelsesdatoParameter);
        }
    
        public virtual int sp_HentProspektUtgivelseListe(Nullable<int> currentPage, Nullable<int> pageSize, Nullable<byte> partnerID, Nullable<int> modulID, Nullable<int> brukerID, Nullable<System.DateTime> utgivelsesdato, ObjectParameter totalRecords)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var modulIDParameter = modulID.HasValue ?
                new ObjectParameter("ModulID", modulID) :
                new ObjectParameter("ModulID", typeof(int));
    
            var brukerIDParameter = brukerID.HasValue ?
                new ObjectParameter("BrukerID", brukerID) :
                new ObjectParameter("BrukerID", typeof(int));
    
            var utgivelsesdatoParameter = utgivelsesdato.HasValue ?
                new ObjectParameter("Utgivelsesdato", utgivelsesdato) :
                new ObjectParameter("Utgivelsesdato", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentProspektUtgivelseListe", currentPageParameter, pageSizeParameter, partnerIDParameter, modulIDParameter, brukerIDParameter, utgivelsesdatoParameter, totalRecords);
        }
    
        public virtual int sp_HentProspektUtgivelseListe2(Nullable<int> currentPage, Nullable<int> pageSize, Nullable<byte> partnerID, Nullable<int> modulID, Nullable<int> brukerID, Nullable<System.DateTime> utgivelsesdato, ObjectParameter totalRecords)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var modulIDParameter = modulID.HasValue ?
                new ObjectParameter("ModulID", modulID) :
                new ObjectParameter("ModulID", typeof(int));
    
            var brukerIDParameter = brukerID.HasValue ?
                new ObjectParameter("BrukerID", brukerID) :
                new ObjectParameter("BrukerID", typeof(int));
    
            var utgivelsesdatoParameter = utgivelsesdato.HasValue ?
                new ObjectParameter("Utgivelsesdato", utgivelsesdato) :
                new ObjectParameter("Utgivelsesdato", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentProspektUtgivelseListe2", currentPageParameter, pageSizeParameter, partnerIDParameter, modulIDParameter, brukerIDParameter, utgivelsesdatoParameter, totalRecords);
        }
    
        public virtual int sp_HentProspektUtgivelseListeOrdre(Nullable<byte> partnerID, Nullable<byte> modulID, Nullable<System.DateTime> utgivelsesdato)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var modulIDParameter = modulID.HasValue ?
                new ObjectParameter("ModulID", modulID) :
                new ObjectParameter("ModulID", typeof(byte));
    
            var utgivelsesdatoParameter = utgivelsesdato.HasValue ?
                new ObjectParameter("Utgivelsesdato", utgivelsesdato) :
                new ObjectParameter("Utgivelsesdato", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentProspektUtgivelseListeOrdre", partnerIDParameter, modulIDParameter, utgivelsesdatoParameter);
        }
    
        public virtual int sp_HentProspektUtgivelseListeSide(Nullable<byte> partnerID, Nullable<byte> modulID, Nullable<System.DateTime> utgivelsesdato)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var modulIDParameter = modulID.HasValue ?
                new ObjectParameter("ModulID", modulID) :
                new ObjectParameter("ModulID", typeof(byte));
    
            var utgivelsesdatoParameter = utgivelsesdato.HasValue ?
                new ObjectParameter("Utgivelsesdato", utgivelsesdato) :
                new ObjectParameter("Utgivelsesdato", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentProspektUtgivelseListeSide", partnerIDParameter, modulIDParameter, utgivelsesdatoParameter);
        }
    
        public virtual int sp_HentProspektUtgivelseListeSideAntall(Nullable<byte> partnerID, Nullable<byte> modulID, Nullable<System.DateTime> utgivelsesdato)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var modulIDParameter = modulID.HasValue ?
                new ObjectParameter("ModulID", modulID) :
                new ObjectParameter("ModulID", typeof(byte));
    
            var utgivelsesdatoParameter = utgivelsesdato.HasValue ?
                new ObjectParameter("Utgivelsesdato", utgivelsesdato) :
                new ObjectParameter("Utgivelsesdato", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentProspektUtgivelseListeSideAntall", partnerIDParameter, modulIDParameter, utgivelsesdatoParameter);
        }
    
        public virtual ObjectResult<sp_HentProspektVis_Result> sp_HentProspektVis(Nullable<long> prospektID)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentProspektVis_Result>("sp_HentProspektVis", prospektIDParameter);
        }
    
        public virtual int sp_HentRapport3BestillingListeFraTil(Nullable<int> currentPage, Nullable<int> pageSize, Nullable<byte> partnerID, Nullable<int> produktID, Nullable<int> avdelingID, Nullable<System.DateTime> datoBestFra, Nullable<System.DateTime> datoBestTil, ObjectParameter totalRecords)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(int));
    
            var avdelingIDParameter = avdelingID.HasValue ?
                new ObjectParameter("AvdelingID", avdelingID) :
                new ObjectParameter("AvdelingID", typeof(int));
    
            var datoBestFraParameter = datoBestFra.HasValue ?
                new ObjectParameter("DatoBestFra", datoBestFra) :
                new ObjectParameter("DatoBestFra", typeof(System.DateTime));
    
            var datoBestTilParameter = datoBestTil.HasValue ?
                new ObjectParameter("DatoBestTil", datoBestTil) :
                new ObjectParameter("DatoBestTil", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentRapport3BestillingListeFraTil", currentPageParameter, pageSizeParameter, partnerIDParameter, produktIDParameter, avdelingIDParameter, datoBestFraParameter, datoBestTilParameter, totalRecords);
        }
    
        public virtual int sp_HentRapport3BestillingListeFraTilAntall(Nullable<byte> partnerID, Nullable<int> produktID, Nullable<int> avdelingID, Nullable<System.DateTime> datoBestFra, Nullable<System.DateTime> datoBestTil)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(int));
    
            var avdelingIDParameter = avdelingID.HasValue ?
                new ObjectParameter("AvdelingID", avdelingID) :
                new ObjectParameter("AvdelingID", typeof(int));
    
            var datoBestFraParameter = datoBestFra.HasValue ?
                new ObjectParameter("DatoBestFra", datoBestFra) :
                new ObjectParameter("DatoBestFra", typeof(System.DateTime));
    
            var datoBestTilParameter = datoBestTil.HasValue ?
                new ObjectParameter("DatoBestTil", datoBestTil) :
                new ObjectParameter("DatoBestTil", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentRapport3BestillingListeFraTilAntall", partnerIDParameter, produktIDParameter, avdelingIDParameter, datoBestFraParameter, datoBestTilParameter);
        }
    
        public virtual int sp_HentRapport3XBestillingListeFraTil(Nullable<int> currentPage, Nullable<int> pageSize, Nullable<byte> partnerID, Nullable<int> produktID, Nullable<int> avdelingID, Nullable<System.DateTime> datoBestFra, Nullable<System.DateTime> datoBestTil, ObjectParameter totalRecords)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(int));
    
            var avdelingIDParameter = avdelingID.HasValue ?
                new ObjectParameter("AvdelingID", avdelingID) :
                new ObjectParameter("AvdelingID", typeof(int));
    
            var datoBestFraParameter = datoBestFra.HasValue ?
                new ObjectParameter("DatoBestFra", datoBestFra) :
                new ObjectParameter("DatoBestFra", typeof(System.DateTime));
    
            var datoBestTilParameter = datoBestTil.HasValue ?
                new ObjectParameter("DatoBestTil", datoBestTil) :
                new ObjectParameter("DatoBestTil", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentRapport3XBestillingListeFraTil", currentPageParameter, pageSizeParameter, partnerIDParameter, produktIDParameter, avdelingIDParameter, datoBestFraParameter, datoBestTilParameter, totalRecords);
        }
    
        public virtual int sp_HentRapport3XBestillingListeFraTilAntall(Nullable<byte> partnerID, Nullable<int> produktID, Nullable<int> avdelingID, Nullable<System.DateTime> datoBestFra, Nullable<System.DateTime> datoBestTil)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(int));
    
            var avdelingIDParameter = avdelingID.HasValue ?
                new ObjectParameter("AvdelingID", avdelingID) :
                new ObjectParameter("AvdelingID", typeof(int));
    
            var datoBestFraParameter = datoBestFra.HasValue ?
                new ObjectParameter("DatoBestFra", datoBestFra) :
                new ObjectParameter("DatoBestFra", typeof(System.DateTime));
    
            var datoBestTilParameter = datoBestTil.HasValue ?
                new ObjectParameter("DatoBestTil", datoBestTil) :
                new ObjectParameter("DatoBestTil", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentRapport3XBestillingListeFraTilAntall", partnerIDParameter, produktIDParameter, avdelingIDParameter, datoBestFraParameter, datoBestTilParameter);
        }
    
        public virtual int sp_HentRapport4BestillingListeFraTil(Nullable<int> currentPage, Nullable<int> pageSize, Nullable<int> partnerID, Nullable<int> produktID, Nullable<System.DateTime> datoBestFra, Nullable<System.DateTime> datoBestTil, ObjectParameter totalRecords)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(int));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(int));
    
            var datoBestFraParameter = datoBestFra.HasValue ?
                new ObjectParameter("DatoBestFra", datoBestFra) :
                new ObjectParameter("DatoBestFra", typeof(System.DateTime));
    
            var datoBestTilParameter = datoBestTil.HasValue ?
                new ObjectParameter("DatoBestTil", datoBestTil) :
                new ObjectParameter("DatoBestTil", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentRapport4BestillingListeFraTil", currentPageParameter, pageSizeParameter, partnerIDParameter, produktIDParameter, datoBestFraParameter, datoBestTilParameter, totalRecords);
        }
    
        public virtual int sp_HentRapport4BestillingListeFraTilAntall(Nullable<byte> partnerID, Nullable<int> produktID, Nullable<System.DateTime> datoBestFra, Nullable<System.DateTime> datoBestTil)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(int));
    
            var datoBestFraParameter = datoBestFra.HasValue ?
                new ObjectParameter("DatoBestFra", datoBestFra) :
                new ObjectParameter("DatoBestFra", typeof(System.DateTime));
    
            var datoBestTilParameter = datoBestTil.HasValue ?
                new ObjectParameter("DatoBestTil", datoBestTil) :
                new ObjectParameter("DatoBestTil", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentRapport4BestillingListeFraTilAntall", partnerIDParameter, produktIDParameter, datoBestFraParameter, datoBestTilParameter);
        }
    
        public virtual int sp_HentRapport5BestillingListeFraTil(Nullable<int> currentPage, Nullable<int> pageSize, Nullable<int> partnerID, Nullable<int> brukerID, Nullable<int> produktID, Nullable<System.DateTime> datoBestFra, Nullable<System.DateTime> datoBestTil, ObjectParameter totalRecords)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(int));
    
            var brukerIDParameter = brukerID.HasValue ?
                new ObjectParameter("BrukerID", brukerID) :
                new ObjectParameter("BrukerID", typeof(int));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(int));
    
            var datoBestFraParameter = datoBestFra.HasValue ?
                new ObjectParameter("DatoBestFra", datoBestFra) :
                new ObjectParameter("DatoBestFra", typeof(System.DateTime));
    
            var datoBestTilParameter = datoBestTil.HasValue ?
                new ObjectParameter("DatoBestTil", datoBestTil) :
                new ObjectParameter("DatoBestTil", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentRapport5BestillingListeFraTil", currentPageParameter, pageSizeParameter, partnerIDParameter, brukerIDParameter, produktIDParameter, datoBestFraParameter, datoBestTilParameter, totalRecords);
        }
    
        public virtual int sp_HentRapport5BestillingListeFraTilAntall(Nullable<int> partnerID, Nullable<int> brukerID, Nullable<int> produktID, Nullable<System.DateTime> datoBestFra, Nullable<System.DateTime> datoBestTil)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(int));
    
            var brukerIDParameter = brukerID.HasValue ?
                new ObjectParameter("BrukerID", brukerID) :
                new ObjectParameter("BrukerID", typeof(int));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(int));
    
            var datoBestFraParameter = datoBestFra.HasValue ?
                new ObjectParameter("DatoBestFra", datoBestFra) :
                new ObjectParameter("DatoBestFra", typeof(System.DateTime));
    
            var datoBestTilParameter = datoBestTil.HasValue ?
                new ObjectParameter("DatoBestTil", datoBestTil) :
                new ObjectParameter("DatoBestTil", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentRapport5BestillingListeFraTilAntall", partnerIDParameter, brukerIDParameter, produktIDParameter, datoBestFraParameter, datoBestTilParameter);
        }
    
        public virtual int sp_HentRapportBestillingListeFraTil(Nullable<int> currentPage, Nullable<int> pageSize, Nullable<byte> partnerID, Nullable<System.DateTime> datoBestFra, Nullable<System.DateTime> datoBestTil, ObjectParameter totalRecords)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var datoBestFraParameter = datoBestFra.HasValue ?
                new ObjectParameter("DatoBestFra", datoBestFra) :
                new ObjectParameter("DatoBestFra", typeof(System.DateTime));
    
            var datoBestTilParameter = datoBestTil.HasValue ?
                new ObjectParameter("DatoBestTil", datoBestTil) :
                new ObjectParameter("DatoBestTil", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentRapportBestillingListeFraTil", currentPageParameter, pageSizeParameter, partnerIDParameter, datoBestFraParameter, datoBestTilParameter, totalRecords);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentRapportBestillingListeFraTilAntall(Nullable<byte> partnerID, Nullable<System.DateTime> datoBestFra, Nullable<System.DateTime> datoBestTil)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var datoBestFraParameter = datoBestFra.HasValue ?
                new ObjectParameter("DatoBestFra", datoBestFra) :
                new ObjectParameter("DatoBestFra", typeof(System.DateTime));
    
            var datoBestTilParameter = datoBestTil.HasValue ?
                new ObjectParameter("DatoBestTil", datoBestTil) :
                new ObjectParameter("DatoBestTil", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentRapportBestillingListeFraTilAntall", partnerIDParameter, datoBestFraParameter, datoBestTilParameter);
        }
    
        public virtual int sp_HentRapportFotooppdragListeFraTil(Nullable<int> currentPage, Nullable<int> pageSize, Nullable<byte> partnerID, Nullable<System.DateTime> datoBookingFra, Nullable<System.DateTime> datoBookingTil, ObjectParameter totalRecords)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var datoBookingFraParameter = datoBookingFra.HasValue ?
                new ObjectParameter("DatoBookingFra", datoBookingFra) :
                new ObjectParameter("DatoBookingFra", typeof(System.DateTime));
    
            var datoBookingTilParameter = datoBookingTil.HasValue ?
                new ObjectParameter("DatoBookingTil", datoBookingTil) :
                new ObjectParameter("DatoBookingTil", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentRapportFotooppdragListeFraTil", currentPageParameter, pageSizeParameter, partnerIDParameter, datoBookingFraParameter, datoBookingTilParameter, totalRecords);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_HentRapportFotooppdragListeFraTilAntall(Nullable<byte> partnerID, Nullable<System.DateTime> datoBookingFra, Nullable<System.DateTime> datoBookingTil)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var datoBookingFraParameter = datoBookingFra.HasValue ?
                new ObjectParameter("DatoBookingFra", datoBookingFra) :
                new ObjectParameter("DatoBookingFra", typeof(System.DateTime));
    
            var datoBookingTilParameter = datoBookingTil.HasValue ?
                new ObjectParameter("DatoBookingTil", datoBookingTil) :
                new ObjectParameter("DatoBookingTil", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_HentRapportFotooppdragListeFraTilAntall", partnerIDParameter, datoBookingFraParameter, datoBookingTilParameter);
        }
    
        public virtual ObjectResult<sp_HentRolle_Result> sp_HentRolle()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentRolle_Result>("sp_HentRolle");
        }
    
        public virtual ObjectResult<string> sp_HentRoller(string epost)
        {
            var epostParameter = epost != null ?
                new ObjectParameter("Epost", epost) :
                new ObjectParameter("Epost", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_HentRoller", epostParameter);
        }
    
        public virtual ObjectResult<string> sp_HentRollerFotograf(string epost)
        {
            var epostParameter = epost != null ?
                new ObjectParameter("Epost", epost) :
                new ObjectParameter("Epost", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_HentRollerFotograf", epostParameter);
        }
    
        public virtual int sp_HentStatkartListe(Nullable<int> currentPage, Nullable<int> pageSize, Nullable<System.DateTime> datoFra, Nullable<System.DateTime> datoTil, Nullable<short> kommunenr, Nullable<byte> inndelingID, ObjectParameter totalRecords)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var datoFraParameter = datoFra.HasValue ?
                new ObjectParameter("DatoFra", datoFra) :
                new ObjectParameter("DatoFra", typeof(System.DateTime));
    
            var datoTilParameter = datoTil.HasValue ?
                new ObjectParameter("DatoTil", datoTil) :
                new ObjectParameter("DatoTil", typeof(System.DateTime));
    
            var kommunenrParameter = kommunenr.HasValue ?
                new ObjectParameter("Kommunenr", kommunenr) :
                new ObjectParameter("Kommunenr", typeof(short));
    
            var inndelingIDParameter = inndelingID.HasValue ?
                new ObjectParameter("InndelingID", inndelingID) :
                new ObjectParameter("InndelingID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentStatkartListe", currentPageParameter, pageSizeParameter, datoFraParameter, datoTilParameter, kommunenrParameter, inndelingIDParameter, totalRecords);
        }
    
        public virtual int sp_HentStatkartListeSok(Nullable<int> currentPage, Nullable<int> pageSize, Nullable<System.DateTime> datoFra, Nullable<System.DateTime> datoTil, string sok, ObjectParameter totalRecords)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var datoFraParameter = datoFra.HasValue ?
                new ObjectParameter("DatoFra", datoFra) :
                new ObjectParameter("DatoFra", typeof(System.DateTime));
    
            var datoTilParameter = datoTil.HasValue ?
                new ObjectParameter("DatoTil", datoTil) :
                new ObjectParameter("DatoTil", typeof(System.DateTime));
    
            var sokParameter = sok != null ?
                new ObjectParameter("Sok", sok) :
                new ObjectParameter("Sok", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentStatkartListeSok", currentPageParameter, pageSizeParameter, datoFraParameter, datoTilParameter, sokParameter, totalRecords);
        }
    
        public virtual ObjectResult<sp_HentStatus_Result> sp_HentStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentStatus_Result>("sp_HentStatus");
        }
    
        public virtual ObjectResult<string> sp_HentSystem(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_HentSystem", iDParameter);
        }
    
        public virtual ObjectResult<sp_HentSystemverdier_Result> sp_HentSystemverdier(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentSystemverdier_Result>("sp_HentSystemverdier", iDParameter);
        }
    
        public virtual ObjectResult<sp_HentTegninger_Result> sp_HentTegninger(Nullable<long> oppdragID)
        {
            var oppdragIDParameter = oppdragID.HasValue ?
                new ObjectParameter("OppdragID", oppdragID) :
                new ObjectParameter("OppdragID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentTegninger_Result>("sp_HentTegninger", oppdragIDParameter);
        }
    
        public virtual int sp_HentTegningOppdragID(Nullable<long> oppdragID, Nullable<byte> sortering)
        {
            var oppdragIDParameter = oppdragID.HasValue ?
                new ObjectParameter("OppdragID", oppdragID) :
                new ObjectParameter("OppdragID", typeof(long));
    
            var sorteringParameter = sortering.HasValue ?
                new ObjectParameter("Sortering", sortering) :
                new ObjectParameter("Sortering", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HentTegningOppdragID", oppdragIDParameter, sorteringParameter);
        }
    
        public virtual ObjectResult<sp_HentTjenesteType_Result> sp_HentTjenesteType(Nullable<byte> partnerID, Nullable<byte> gruppe)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var gruppeParameter = gruppe.HasValue ?
                new ObjectParameter("Gruppe", gruppe) :
                new ObjectParameter("Gruppe", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentTjenesteType_Result>("sp_HentTjenesteType", partnerIDParameter, gruppeParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> sp_HentUtgivelseForsteMulige(Nullable<System.DateTime> datoUtgivelseForsteMulige)
        {
            var datoUtgivelseForsteMuligeParameter = datoUtgivelseForsteMulige.HasValue ?
                new ObjectParameter("DatoUtgivelseForsteMulige", datoUtgivelseForsteMulige) :
                new ObjectParameter("DatoUtgivelseForsteMulige", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("sp_HentUtgivelseForsteMulige", datoUtgivelseForsteMuligeParameter);
        }
    
        public virtual ObjectResult<sp_HentUtgivelser_Result> sp_HentUtgivelser()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentUtgivelser_Result>("sp_HentUtgivelser");
        }
    
        public virtual ObjectResult<sp_HentUtgivelserListe_Result> sp_HentUtgivelserListe(Nullable<System.DateTime> utgivelsesdato)
        {
            var utgivelsesdatoParameter = utgivelsesdato.HasValue ?
                new ObjectParameter("Utgivelsesdato", utgivelsesdato) :
                new ObjectParameter("Utgivelsesdato", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HentUtgivelserListe_Result>("sp_HentUtgivelserListe", utgivelsesdatoParameter);
        }
    
        public virtual int sp_HLHentFirmaListe()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HLHentFirmaListe");
        }
    
        public virtual int sp_HLHentKunde(Nullable<int> kundeID)
        {
            var kundeIDParameter = kundeID.HasValue ?
                new ObjectParameter("KundeID", kundeID) :
                new ObjectParameter("KundeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HLHentKunde", kundeIDParameter);
        }
    
        public virtual int sp_HovedSok(Nullable<int> currentPage, Nullable<int> pageSize, Nullable<int> sortorder, Nullable<byte> partnerID, Nullable<byte> boligtypeSokID1, Nullable<byte> boligtypeSokID2, Nullable<byte> boligtypeSokID3, Nullable<byte> boligtypeSokID4, Nullable<byte> boligtypeSokID5, Nullable<byte> boligtypeSokID6, Nullable<byte> boligtypeSokID7, Nullable<byte> inndelingID, Nullable<long> prisFra, Nullable<long> prisTil, Nullable<short> soveromFra, Nullable<short> soveromTil, Nullable<short> bOAFra, Nullable<short> bOATil, Nullable<byte> status, ObjectParameter totalRecords)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("Sortorder", sortorder) :
                new ObjectParameter("Sortorder", typeof(int));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var boligtypeSokID1Parameter = boligtypeSokID1.HasValue ?
                new ObjectParameter("BoligtypeSokID1", boligtypeSokID1) :
                new ObjectParameter("BoligtypeSokID1", typeof(byte));
    
            var boligtypeSokID2Parameter = boligtypeSokID2.HasValue ?
                new ObjectParameter("BoligtypeSokID2", boligtypeSokID2) :
                new ObjectParameter("BoligtypeSokID2", typeof(byte));
    
            var boligtypeSokID3Parameter = boligtypeSokID3.HasValue ?
                new ObjectParameter("BoligtypeSokID3", boligtypeSokID3) :
                new ObjectParameter("BoligtypeSokID3", typeof(byte));
    
            var boligtypeSokID4Parameter = boligtypeSokID4.HasValue ?
                new ObjectParameter("BoligtypeSokID4", boligtypeSokID4) :
                new ObjectParameter("BoligtypeSokID4", typeof(byte));
    
            var boligtypeSokID5Parameter = boligtypeSokID5.HasValue ?
                new ObjectParameter("BoligtypeSokID5", boligtypeSokID5) :
                new ObjectParameter("BoligtypeSokID5", typeof(byte));
    
            var boligtypeSokID6Parameter = boligtypeSokID6.HasValue ?
                new ObjectParameter("BoligtypeSokID6", boligtypeSokID6) :
                new ObjectParameter("BoligtypeSokID6", typeof(byte));
    
            var boligtypeSokID7Parameter = boligtypeSokID7.HasValue ?
                new ObjectParameter("BoligtypeSokID7", boligtypeSokID7) :
                new ObjectParameter("BoligtypeSokID7", typeof(byte));
    
            var inndelingIDParameter = inndelingID.HasValue ?
                new ObjectParameter("InndelingID", inndelingID) :
                new ObjectParameter("InndelingID", typeof(byte));
    
            var prisFraParameter = prisFra.HasValue ?
                new ObjectParameter("PrisFra", prisFra) :
                new ObjectParameter("PrisFra", typeof(long));
    
            var prisTilParameter = prisTil.HasValue ?
                new ObjectParameter("PrisTil", prisTil) :
                new ObjectParameter("PrisTil", typeof(long));
    
            var soveromFraParameter = soveromFra.HasValue ?
                new ObjectParameter("SoveromFra", soveromFra) :
                new ObjectParameter("SoveromFra", typeof(short));
    
            var soveromTilParameter = soveromTil.HasValue ?
                new ObjectParameter("SoveromTil", soveromTil) :
                new ObjectParameter("SoveromTil", typeof(short));
    
            var bOAFraParameter = bOAFra.HasValue ?
                new ObjectParameter("BOAFra", bOAFra) :
                new ObjectParameter("BOAFra", typeof(short));
    
            var bOATilParameter = bOATil.HasValue ?
                new ObjectParameter("BOATil", bOATil) :
                new ObjectParameter("BOATil", typeof(short));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HovedSok", currentPageParameter, pageSizeParameter, sortorderParameter, partnerIDParameter, boligtypeSokID1Parameter, boligtypeSokID2Parameter, boligtypeSokID3Parameter, boligtypeSokID4Parameter, boligtypeSokID5Parameter, boligtypeSokID6Parameter, boligtypeSokID7Parameter, inndelingIDParameter, prisFraParameter, prisTilParameter, soveromFraParameter, soveromTilParameter, bOAFraParameter, bOATilParameter, statusParameter, totalRecords);
        }
    
        public virtual ObjectResult<sp_INH_FirmaBrukerLogin_Result> sp_INH_FirmaBrukerLogin(string brukernavn, string passord)
        {
            var brukernavnParameter = brukernavn != null ?
                new ObjectParameter("Brukernavn", brukernavn) :
                new ObjectParameter("Brukernavn", typeof(string));
    
            var passordParameter = passord != null ?
                new ObjectParameter("Passord", passord) :
                new ObjectParameter("Passord", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_INH_FirmaBrukerLogin_Result>("sp_INH_FirmaBrukerLogin", brukernavnParameter, passordParameter);
        }
    
        public virtual ObjectResult<string> sp_INH_GetRulesForTagAndPartner(Nullable<byte> partnerID, string tag)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_INH_GetRulesForTagAndPartner", partnerIDParameter, tagParameter);
        }
    
        public virtual ObjectResult<sp_INH_GetTagsInModule_Result> sp_INH_GetTagsInModule(Nullable<int> modulID)
        {
            var modulIDParameter = modulID.HasValue ?
                new ObjectParameter("ModulID", modulID) :
                new ObjectParameter("ModulID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_INH_GetTagsInModule_Result>("sp_INH_GetTagsInModule", modulIDParameter);
        }
    
        public virtual ObjectResult<sp_INH_HentBilder_Result> sp_INH_HentBilder(Nullable<long> prospektID, Nullable<byte> produktID, Nullable<System.DateTime> datoBest)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_INH_HentBilder_Result>("sp_INH_HentBilder", prospektIDParameter, produktIDParameter, datoBestParameter);
        }
    
        public virtual ObjectResult<sp_INH_HentBilderLokal_Result> sp_INH_HentBilderLokal(Nullable<long> prospektID)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_INH_HentBilderLokal_Result>("sp_INH_HentBilderLokal", prospektIDParameter);
        }
    
        public virtual ObjectResult<sp_INH_HentFirmaBrukerHarProdukt_Result> sp_INH_HentFirmaBrukerHarProdukt(Nullable<int> firmaBrukerID)
        {
            var firmaBrukerIDParameter = firmaBrukerID.HasValue ?
                new ObjectParameter("FirmaBrukerID", firmaBrukerID) :
                new ObjectParameter("FirmaBrukerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_INH_HentFirmaBrukerHarProdukt_Result>("sp_INH_HentFirmaBrukerHarProdukt", firmaBrukerIDParameter);
        }
    
        public virtual ObjectResult<sp_INH_HentFirmaBrukerHarProduktOppdater_Result> sp_INH_HentFirmaBrukerHarProduktOppdater(Nullable<int> firmaBrukerID)
        {
            var firmaBrukerIDParameter = firmaBrukerID.HasValue ?
                new ObjectParameter("FirmaBrukerID", firmaBrukerID) :
                new ObjectParameter("FirmaBrukerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_INH_HentFirmaBrukerHarProduktOppdater_Result>("sp_INH_HentFirmaBrukerHarProduktOppdater", firmaBrukerIDParameter);
        }
    
        public virtual ObjectResult<sp_INH_HentFirmaBrukerModulRessurs_Result> sp_INH_HentFirmaBrukerModulRessurs(Nullable<int> firmaBrukerID)
        {
            var firmaBrukerIDParameter = firmaBrukerID.HasValue ?
                new ObjectParameter("FirmaBrukerID", firmaBrukerID) :
                new ObjectParameter("FirmaBrukerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_INH_HentFirmaBrukerModulRessurs_Result>("sp_INH_HentFirmaBrukerModulRessurs", firmaBrukerIDParameter);
        }
    
        public virtual ObjectResult<sp_INH_HentModuler_Result> sp_INH_HentModuler(Nullable<byte> partnerID, Nullable<byte> produktID)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_INH_HentModuler_Result>("sp_INH_HentModuler", partnerIDParameter, produktIDParameter);
        }
    
        public virtual ObjectResult<sp_INH_HentModulRessurs_Result> sp_INH_HentModulRessurs(Nullable<byte> produktID)
        {
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_INH_HentModulRessurs_Result>("sp_INH_HentModulRessurs", produktIDParameter);
        }
    
        public virtual ObjectResult<sp_INH_HentPartnerHarInndeling_Result> sp_INH_HentPartnerHarInndeling(Nullable<byte> partnerID)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_INH_HentPartnerHarInndeling_Result>("sp_INH_HentPartnerHarInndeling", partnerIDParameter);
        }
    
        public virtual ObjectResult<sp_INH_HentProdukter_Result> sp_INH_HentProdukter()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_INH_HentProdukter_Result>("sp_INH_HentProdukter");
        }
    
        public virtual ObjectResult<sp_INH_HentProdukterForBruker_Result> sp_INH_HentProdukterForBruker(Nullable<int> brukerID)
        {
            var brukerIDParameter = brukerID.HasValue ?
                new ObjectParameter("BrukerID", brukerID) :
                new ObjectParameter("BrukerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_INH_HentProdukterForBruker_Result>("sp_INH_HentProdukterForBruker", brukerIDParameter);
        }
    
        public virtual ObjectResult<sp_INH_HentProduktHarPartnere_Result> sp_INH_HentProduktHarPartnere(Nullable<byte> produktID)
        {
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_INH_HentProduktHarPartnere_Result>("sp_INH_HentProduktHarPartnere", produktIDParameter);
        }
    
        public virtual ObjectResult<sp_INH_HentProduktUtgivelseDagMaaned_Result> sp_INH_HentProduktUtgivelseDagMaaned(Nullable<byte> produktID)
        {
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_INH_HentProduktUtgivelseDagMaaned_Result>("sp_INH_HentProduktUtgivelseDagMaaned", produktIDParameter);
        }
    
        public virtual ObjectResult<sp_INH_HentProspekt_Result> sp_INH_HentProspekt(Nullable<long> prospektID)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_INH_HentProspekt_Result>("sp_INH_HentProspekt", prospektIDParameter);
        }
    
        public virtual int sp_INH_HentProspektBestillingListe(Nullable<byte> produktID, Nullable<byte> partnerID, Nullable<byte> inndelingID, Nullable<int> modulID, Nullable<System.DateTime> datoBest, string ordrenr, Nullable<bool> hentGodkjente)
        {
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var inndelingIDParameter = inndelingID.HasValue ?
                new ObjectParameter("InndelingID", inndelingID) :
                new ObjectParameter("InndelingID", typeof(byte));
    
            var modulIDParameter = modulID.HasValue ?
                new ObjectParameter("ModulID", modulID) :
                new ObjectParameter("ModulID", typeof(int));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            var ordrenrParameter = ordrenr != null ?
                new ObjectParameter("Ordrenr", ordrenr) :
                new ObjectParameter("Ordrenr", typeof(string));
    
            var hentGodkjenteParameter = hentGodkjente.HasValue ?
                new ObjectParameter("HentGodkjente", hentGodkjente) :
                new ObjectParameter("HentGodkjente", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_INH_HentProspektBestillingListe", produktIDParameter, partnerIDParameter, inndelingIDParameter, modulIDParameter, datoBestParameter, ordrenrParameter, hentGodkjenteParameter);
        }
    
        public virtual ObjectResult<sp_INH_HentProspektModulInfo_Result> sp_INH_HentProspektModulInfo(Nullable<long> prospektID, Nullable<byte> produktID, Nullable<System.DateTime> datoBest)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_INH_HentProspektModulInfo_Result>("sp_INH_HentProspektModulInfo", prospektIDParameter, produktIDParameter, datoBestParameter);
        }
    
        public virtual ObjectResult<string> sp_INH_HentReglerForMalOgTag(string modulfilnavn, string tag)
        {
            var modulfilnavnParameter = modulfilnavn != null ?
                new ObjectParameter("Modulfilnavn", modulfilnavn) :
                new ObjectParameter("Modulfilnavn", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_INH_HentReglerForMalOgTag", modulfilnavnParameter, tagParameter);
        }
    
        public virtual int sp_INH_LeggInnModulRessurs(Nullable<int> modulID, string ressursFilnavn1, string ressursFilnavn2, Nullable<byte> ressursType)
        {
            var modulIDParameter = modulID.HasValue ?
                new ObjectParameter("ModulID", modulID) :
                new ObjectParameter("ModulID", typeof(int));
    
            var ressursFilnavn1Parameter = ressursFilnavn1 != null ?
                new ObjectParameter("RessursFilnavn1", ressursFilnavn1) :
                new ObjectParameter("RessursFilnavn1", typeof(string));
    
            var ressursFilnavn2Parameter = ressursFilnavn2 != null ?
                new ObjectParameter("RessursFilnavn2", ressursFilnavn2) :
                new ObjectParameter("RessursFilnavn2", typeof(string));
    
            var ressursTypeParameter = ressursType.HasValue ?
                new ObjectParameter("RessursType", ressursType) :
                new ObjectParameter("RessursType", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_INH_LeggInnModulRessurs", modulIDParameter, ressursFilnavn1Parameter, ressursFilnavn2Parameter, ressursTypeParameter);
        }
    
        public virtual ObjectResult<sp_INH_Login_Result> sp_INH_Login(string brukernavn, string passord)
        {
            var brukernavnParameter = brukernavn != null ?
                new ObjectParameter("Brukernavn", brukernavn) :
                new ObjectParameter("Brukernavn", typeof(string));
    
            var passordParameter = passord != null ?
                new ObjectParameter("Passord", passord) :
                new ObjectParameter("Passord", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_INH_Login_Result>("sp_INH_Login", brukernavnParameter, passordParameter);
        }
    
        public virtual int sp_INH_OppdaterFirmaBrukerProduksjon(Nullable<int> firmaBrukerID, Nullable<long> prospektID, Nullable<System.DateTime> datoBest, Nullable<byte> produktID)
        {
            var firmaBrukerIDParameter = firmaBrukerID.HasValue ?
                new ObjectParameter("FirmaBrukerID", firmaBrukerID) :
                new ObjectParameter("FirmaBrukerID", typeof(int));
    
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_INH_OppdaterFirmaBrukerProduksjon", firmaBrukerIDParameter, prospektIDParameter, datoBestParameter, produktIDParameter);
        }
    
        public virtual int sp_INH_OppdaterProduktHarAnnonse(Nullable<int> annonseID, string filnavn)
        {
            var annonseIDParameter = annonseID.HasValue ?
                new ObjectParameter("AnnonseID", annonseID) :
                new ObjectParameter("AnnonseID", typeof(int));
    
            var filnavnParameter = filnavn != null ?
                new ObjectParameter("Filnavn", filnavn) :
                new ObjectParameter("Filnavn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_INH_OppdaterProduktHarAnnonse", annonseIDParameter, filnavnParameter);
        }
    
        public virtual int sp_INH_SjekkModuler(Nullable<int> modulID)
        {
            var modulIDParameter = modulID.HasValue ?
                new ObjectParameter("ModulID", modulID) :
                new ObjectParameter("ModulID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_INH_SjekkModuler", modulIDParameter);
        }
    
        public virtual int sp_LeggInnBildeLogg(Nullable<long> prospektID, string bildenavn, string bildenavnKopi, string operasjon)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var bildenavnParameter = bildenavn != null ?
                new ObjectParameter("Bildenavn", bildenavn) :
                new ObjectParameter("Bildenavn", typeof(string));
    
            var bildenavnKopiParameter = bildenavnKopi != null ?
                new ObjectParameter("BildenavnKopi", bildenavnKopi) :
                new ObjectParameter("BildenavnKopi", typeof(string));
    
            var operasjonParameter = operasjon != null ?
                new ObjectParameter("Operasjon", operasjon) :
                new ObjectParameter("Operasjon", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LeggInnBildeLogg", prospektIDParameter, bildenavnParameter, bildenavnKopiParameter, operasjonParameter);
        }
    
        public virtual int sp_LeggInnEndring(Nullable<long> prospektID, string beskrivelse, string verdiGml, string verdiNy)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var beskrivelseParameter = beskrivelse != null ?
                new ObjectParameter("Beskrivelse", beskrivelse) :
                new ObjectParameter("Beskrivelse", typeof(string));
    
            var verdiGmlParameter = verdiGml != null ?
                new ObjectParameter("VerdiGml", verdiGml) :
                new ObjectParameter("VerdiGml", typeof(string));
    
            var verdiNyParameter = verdiNy != null ?
                new ObjectParameter("VerdiNy", verdiNy) :
                new ObjectParameter("VerdiNy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LeggInnEndring", prospektIDParameter, beskrivelseParameter, verdiGmlParameter, verdiNyParameter);
        }
    
        public virtual int sp_LeggInnFirmaBrukerHarProduktOppdater(Nullable<byte> produktID)
        {
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LeggInnFirmaBrukerHarProduktOppdater", produktIDParameter);
        }
    
        public virtual int SP_LeggInnProspekt(ObjectParameter id, string command)
        {
            var commandParameter = command != null ?
                new ObjectParameter("command", command) :
                new ObjectParameter("command", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_LeggInnProspekt", id, commandParameter);
        }
    
        public virtual int SP_LeggInnStatkart(ObjectParameter id, string command)
        {
            var commandParameter = command != null ?
                new ObjectParameter("command", command) :
                new ObjectParameter("command", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_LeggInnStatkart", id, commandParameter);
        }
    
        public virtual ObjectResult<sp_MAHentFotooppdragListe_Result> sp_MAHentFotooppdragListe()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MAHentFotooppdragListe_Result>("sp_MAHentFotooppdragListe");
        }
    
        public virtual int sp_OppdatePanoData(Nullable<long> panoID, string bildetekst, Nullable<byte> sortering)
        {
            var panoIDParameter = panoID.HasValue ?
                new ObjectParameter("PanoID", panoID) :
                new ObjectParameter("PanoID", typeof(long));
    
            var bildetekstParameter = bildetekst != null ?
                new ObjectParameter("Bildetekst", bildetekst) :
                new ObjectParameter("Bildetekst", typeof(string));
    
            var sorteringParameter = sortering.HasValue ?
                new ObjectParameter("Sortering", sortering) :
                new ObjectParameter("Sortering", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdatePanoData", panoIDParameter, bildetekstParameter, sorteringParameter);
        }
    
        public virtual int sp_OppdaterAnnonse(ObjectParameter annonseID, Nullable<int> brukerID, Nullable<byte> partnerID, Nullable<byte> inndelingID, Nullable<int> modulID, string beskrivelse, Nullable<long> pris, string kommentar)
        {
            var brukerIDParameter = brukerID.HasValue ?
                new ObjectParameter("BrukerID", brukerID) :
                new ObjectParameter("BrukerID", typeof(int));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var inndelingIDParameter = inndelingID.HasValue ?
                new ObjectParameter("InndelingID", inndelingID) :
                new ObjectParameter("InndelingID", typeof(byte));
    
            var modulIDParameter = modulID.HasValue ?
                new ObjectParameter("ModulID", modulID) :
                new ObjectParameter("ModulID", typeof(int));
    
            var beskrivelseParameter = beskrivelse != null ?
                new ObjectParameter("Beskrivelse", beskrivelse) :
                new ObjectParameter("Beskrivelse", typeof(string));
    
            var prisParameter = pris.HasValue ?
                new ObjectParameter("Pris", pris) :
                new ObjectParameter("Pris", typeof(long));
    
            var kommentarParameter = kommentar != null ?
                new ObjectParameter("Kommentar", kommentar) :
                new ObjectParameter("Kommentar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterAnnonse", annonseID, brukerIDParameter, partnerIDParameter, inndelingIDParameter, modulIDParameter, beskrivelseParameter, prisParameter, kommentarParameter);
        }
    
        public virtual int sp_OppdaterAnnonseHarUtgivelse(Nullable<long> annonseID, Nullable<byte> ukenr, Nullable<short> aar)
        {
            var annonseIDParameter = annonseID.HasValue ?
                new ObjectParameter("AnnonseID", annonseID) :
                new ObjectParameter("AnnonseID", typeof(long));
    
            var ukenrParameter = ukenr.HasValue ?
                new ObjectParameter("Ukenr", ukenr) :
                new ObjectParameter("Ukenr", typeof(byte));
    
            var aarParameter = aar.HasValue ?
                new ObjectParameter("Aar", aar) :
                new ObjectParameter("Aar", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterAnnonseHarUtgivelse", annonseIDParameter, ukenrParameter, aarParameter);
        }
    
        public virtual int sp_OppdaterBestillingHarBilde(Nullable<long> bestillingHarBildeId, Nullable<long> prospektID, Nullable<System.DateTime> datoBest, Nullable<int> produktID, Nullable<long> bildeID, string sourceFile, string destFile, string label, Nullable<bool> dirty)
        {
            var bestillingHarBildeIdParameter = bestillingHarBildeId.HasValue ?
                new ObjectParameter("BestillingHarBildeId", bestillingHarBildeId) :
                new ObjectParameter("BestillingHarBildeId", typeof(long));
    
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(int));
    
            var bildeIDParameter = bildeID.HasValue ?
                new ObjectParameter("BildeID", bildeID) :
                new ObjectParameter("BildeID", typeof(long));
    
            var sourceFileParameter = sourceFile != null ?
                new ObjectParameter("SourceFile", sourceFile) :
                new ObjectParameter("SourceFile", typeof(string));
    
            var destFileParameter = destFile != null ?
                new ObjectParameter("DestFile", destFile) :
                new ObjectParameter("DestFile", typeof(string));
    
            var labelParameter = label != null ?
                new ObjectParameter("Label", label) :
                new ObjectParameter("Label", typeof(string));
    
            var dirtyParameter = dirty.HasValue ?
                new ObjectParameter("Dirty", dirty) :
                new ObjectParameter("Dirty", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterBestillingHarBilde", bestillingHarBildeIdParameter, prospektIDParameter, datoBestParameter, produktIDParameter, bildeIDParameter, sourceFileParameter, destFileParameter, labelParameter, dirtyParameter);
        }
    
        public virtual int sp_OppdaterBilde(Nullable<long> prospektID, string bildenavn, string bildetekst)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var bildenavnParameter = bildenavn != null ?
                new ObjectParameter("Bildenavn", bildenavn) :
                new ObjectParameter("Bildenavn", typeof(string));
    
            var bildetekstParameter = bildetekst != null ?
                new ObjectParameter("Bildetekst", bildetekst) :
                new ObjectParameter("Bildetekst", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterBilde", prospektIDParameter, bildenavnParameter, bildetekstParameter);
        }
    
        public virtual int sp_OppdaterBildeImport(Nullable<long> prospektID, string bildenavn, string bildetekst)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var bildenavnParameter = bildenavn != null ?
                new ObjectParameter("Bildenavn", bildenavn) :
                new ObjectParameter("Bildenavn", typeof(string));
    
            var bildetekstParameter = bildetekst != null ?
                new ObjectParameter("Bildetekst", bildetekst) :
                new ObjectParameter("Bildetekst", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterBildeImport", prospektIDParameter, bildenavnParameter, bildetekstParameter);
        }
    
        public virtual int sp_OppdaterBildeNy(Nullable<long> prospektID, string bildenavn, string bildetekst, Nullable<byte> sortering)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var bildenavnParameter = bildenavn != null ?
                new ObjectParameter("Bildenavn", bildenavn) :
                new ObjectParameter("Bildenavn", typeof(string));
    
            var bildetekstParameter = bildetekst != null ?
                new ObjectParameter("Bildetekst", bildetekst) :
                new ObjectParameter("Bildetekst", typeof(string));
    
            var sorteringParameter = sortering.HasValue ?
                new ObjectParameter("Sortering", sortering) :
                new ObjectParameter("Sortering", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterBildeNy", prospektIDParameter, bildenavnParameter, bildetekstParameter, sorteringParameter);
        }
    
        public virtual int sp_OppdaterBildeSortering(Nullable<long> bildeID, Nullable<byte> sortering)
        {
            var bildeIDParameter = bildeID.HasValue ?
                new ObjectParameter("BildeID", bildeID) :
                new ObjectParameter("BildeID", typeof(long));
    
            var sorteringParameter = sortering.HasValue ?
                new ObjectParameter("Sortering", sortering) :
                new ObjectParameter("Sortering", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterBildeSortering", bildeIDParameter, sorteringParameter);
        }
    
        public virtual int sp_OppdaterBoligNyheter(ObjectParameter iD, string hTML)
        {
            var hTMLParameter = hTML != null ?
                new ObjectParameter("HTML", hTML) :
                new ObjectParameter("HTML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterBoligNyheter", iD, hTMLParameter);
        }
    
        public virtual int sp_OppdaterBruker(ObjectParameter brukerID, Nullable<int> rolleID, string langID, string etternavn, string fornavn, string tittel, Nullable<int> avdelingID, string epost, string initialer, string passord, string telefon, string mobil, Nullable<int> partnerID, Nullable<bool> aktiv, Nullable<bool> leverandor)
        {
            var rolleIDParameter = rolleID.HasValue ?
                new ObjectParameter("RolleID", rolleID) :
                new ObjectParameter("RolleID", typeof(int));
    
            var langIDParameter = langID != null ?
                new ObjectParameter("LangID", langID) :
                new ObjectParameter("LangID", typeof(string));
    
            var etternavnParameter = etternavn != null ?
                new ObjectParameter("Etternavn", etternavn) :
                new ObjectParameter("Etternavn", typeof(string));
    
            var fornavnParameter = fornavn != null ?
                new ObjectParameter("Fornavn", fornavn) :
                new ObjectParameter("Fornavn", typeof(string));
    
            var tittelParameter = tittel != null ?
                new ObjectParameter("Tittel", tittel) :
                new ObjectParameter("Tittel", typeof(string));
    
            var avdelingIDParameter = avdelingID.HasValue ?
                new ObjectParameter("AvdelingID", avdelingID) :
                new ObjectParameter("AvdelingID", typeof(int));
    
            var epostParameter = epost != null ?
                new ObjectParameter("Epost", epost) :
                new ObjectParameter("Epost", typeof(string));
    
            var initialerParameter = initialer != null ?
                new ObjectParameter("Initialer", initialer) :
                new ObjectParameter("Initialer", typeof(string));
    
            var passordParameter = passord != null ?
                new ObjectParameter("Passord", passord) :
                new ObjectParameter("Passord", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var mobilParameter = mobil != null ?
                new ObjectParameter("Mobil", mobil) :
                new ObjectParameter("Mobil", typeof(string));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(int));
    
            var aktivParameter = aktiv.HasValue ?
                new ObjectParameter("Aktiv", aktiv) :
                new ObjectParameter("Aktiv", typeof(bool));
    
            var leverandorParameter = leverandor.HasValue ?
                new ObjectParameter("Leverandor", leverandor) :
                new ObjectParameter("Leverandor", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterBruker", brukerID, rolleIDParameter, langIDParameter, etternavnParameter, fornavnParameter, tittelParameter, avdelingIDParameter, epostParameter, initialerParameter, passordParameter, telefonParameter, mobilParameter, partnerIDParameter, aktivParameter, leverandorParameter);
        }
    
        public virtual int sp_OppdaterBrukerlogg(string brukerID, string passord, string hTTP_REFERER, string hTTP_USER_AGENT, string rEMOTE_HOST, string program)
        {
            var brukerIDParameter = brukerID != null ?
                new ObjectParameter("BrukerID", brukerID) :
                new ObjectParameter("BrukerID", typeof(string));
    
            var passordParameter = passord != null ?
                new ObjectParameter("Passord", passord) :
                new ObjectParameter("Passord", typeof(string));
    
            var hTTP_REFERERParameter = hTTP_REFERER != null ?
                new ObjectParameter("HTTP_REFERER", hTTP_REFERER) :
                new ObjectParameter("HTTP_REFERER", typeof(string));
    
            var hTTP_USER_AGENTParameter = hTTP_USER_AGENT != null ?
                new ObjectParameter("HTTP_USER_AGENT", hTTP_USER_AGENT) :
                new ObjectParameter("HTTP_USER_AGENT", typeof(string));
    
            var rEMOTE_HOSTParameter = rEMOTE_HOST != null ?
                new ObjectParameter("REMOTE_HOST", rEMOTE_HOST) :
                new ObjectParameter("REMOTE_HOST", typeof(string));
    
            var programParameter = program != null ?
                new ObjectParameter("Program", program) :
                new ObjectParameter("Program", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterBrukerlogg", brukerIDParameter, passordParameter, hTTP_REFERERParameter, hTTP_USER_AGENTParameter, rEMOTE_HOSTParameter, programParameter);
        }
    
        public virtual int sp_OppdaterDnBSystem(Nullable<byte> dnBEpostNr)
        {
            var dnBEpostNrParameter = dnBEpostNr.HasValue ?
                new ObjectParameter("DnBEpostNr", dnBEpostNr) :
                new ObjectParameter("DnBEpostNr", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterDnBSystem", dnBEpostNrParameter);
        }
    
        public virtual int sp_OppdaterEndringslogg(Nullable<long> loggID, Nullable<bool> endret)
        {
            var loggIDParameter = loggID.HasValue ?
                new ObjectParameter("LoggID", loggID) :
                new ObjectParameter("LoggID", typeof(long));
    
            var endretParameter = endret.HasValue ?
                new ObjectParameter("Endret", endret) :
                new ObjectParameter("Endret", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterEndringslogg", loggIDParameter, endretParameter);
        }
    
        public virtual int sp_OppdaterFoto(Nullable<long> fotooppdragID, string bildenavn, string bildetekst)
        {
            var fotooppdragIDParameter = fotooppdragID.HasValue ?
                new ObjectParameter("FotooppdragID", fotooppdragID) :
                new ObjectParameter("FotooppdragID", typeof(long));
    
            var bildenavnParameter = bildenavn != null ?
                new ObjectParameter("Bildenavn", bildenavn) :
                new ObjectParameter("Bildenavn", typeof(string));
    
            var bildetekstParameter = bildetekst != null ?
                new ObjectParameter("Bildetekst", bildetekst) :
                new ObjectParameter("Bildetekst", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterFoto", fotooppdragIDParameter, bildenavnParameter, bildetekstParameter);
        }
    
        public virtual int sp_OppdaterFotoData(Nullable<long> fotoID, string bildetekst, string bildetype, Nullable<byte> sortering)
        {
            var fotoIDParameter = fotoID.HasValue ?
                new ObjectParameter("FotoID", fotoID) :
                new ObjectParameter("FotoID", typeof(long));
    
            var bildetekstParameter = bildetekst != null ?
                new ObjectParameter("Bildetekst", bildetekst) :
                new ObjectParameter("Bildetekst", typeof(string));
    
            var bildetypeParameter = bildetype != null ?
                new ObjectParameter("Bildetype", bildetype) :
                new ObjectParameter("Bildetype", typeof(string));
    
            var sorteringParameter = sortering.HasValue ?
                new ObjectParameter("Sortering", sortering) :
                new ObjectParameter("Sortering", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterFotoData", fotoIDParameter, bildetekstParameter, bildetypeParameter, sorteringParameter);
        }
    
        public virtual int sp_OppdaterFotograf(ObjectParameter fotografID, Nullable<int> rolleID, Nullable<int> leverandorID, string etternavn, string fornavn, string tittel, string epost, string initialer, string passord, string telefon, string mobil, Nullable<bool> aktiv)
        {
            var rolleIDParameter = rolleID.HasValue ?
                new ObjectParameter("RolleID", rolleID) :
                new ObjectParameter("RolleID", typeof(int));
    
            var leverandorIDParameter = leverandorID.HasValue ?
                new ObjectParameter("LeverandorID", leverandorID) :
                new ObjectParameter("LeverandorID", typeof(int));
    
            var etternavnParameter = etternavn != null ?
                new ObjectParameter("Etternavn", etternavn) :
                new ObjectParameter("Etternavn", typeof(string));
    
            var fornavnParameter = fornavn != null ?
                new ObjectParameter("Fornavn", fornavn) :
                new ObjectParameter("Fornavn", typeof(string));
    
            var tittelParameter = tittel != null ?
                new ObjectParameter("Tittel", tittel) :
                new ObjectParameter("Tittel", typeof(string));
    
            var epostParameter = epost != null ?
                new ObjectParameter("Epost", epost) :
                new ObjectParameter("Epost", typeof(string));
    
            var initialerParameter = initialer != null ?
                new ObjectParameter("Initialer", initialer) :
                new ObjectParameter("Initialer", typeof(string));
    
            var passordParameter = passord != null ?
                new ObjectParameter("Passord", passord) :
                new ObjectParameter("Passord", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var mobilParameter = mobil != null ?
                new ObjectParameter("Mobil", mobil) :
                new ObjectParameter("Mobil", typeof(string));
    
            var aktivParameter = aktiv.HasValue ?
                new ObjectParameter("Aktiv", aktiv) :
                new ObjectParameter("Aktiv", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterFotograf", fotografID, rolleIDParameter, leverandorIDParameter, etternavnParameter, fornavnParameter, tittelParameter, epostParameter, initialerParameter, passordParameter, telefonParameter, mobilParameter, aktivParameter);
        }
    
        public virtual int sp_OppdaterFotooppdrag(ObjectParameter fotooppdragID, Nullable<byte> partnerID, Nullable<int> brukerID, Nullable<int> fotografID, Nullable<byte> fotoStatusID, Nullable<byte> fotoTypeID, Nullable<byte> fotoSoneID, Nullable<bool> panorama, string oppdragsnr, string adresse, string postnr, string poststed, string kontaktperson, string kontaktpersonEpost, string telefonPrivat, string telefonMobil, string telefonArbeid, Nullable<bool> kontaktMegler, Nullable<byte> oppdragTypeID, string tilleggsInformasjon, string kommentar, Nullable<System.DateTime> datoBooking)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var brukerIDParameter = brukerID.HasValue ?
                new ObjectParameter("BrukerID", brukerID) :
                new ObjectParameter("BrukerID", typeof(int));
    
            var fotografIDParameter = fotografID.HasValue ?
                new ObjectParameter("FotografID", fotografID) :
                new ObjectParameter("FotografID", typeof(int));
    
            var fotoStatusIDParameter = fotoStatusID.HasValue ?
                new ObjectParameter("FotoStatusID", fotoStatusID) :
                new ObjectParameter("FotoStatusID", typeof(byte));
    
            var fotoTypeIDParameter = fotoTypeID.HasValue ?
                new ObjectParameter("FotoTypeID", fotoTypeID) :
                new ObjectParameter("FotoTypeID", typeof(byte));
    
            var fotoSoneIDParameter = fotoSoneID.HasValue ?
                new ObjectParameter("FotoSoneID", fotoSoneID) :
                new ObjectParameter("FotoSoneID", typeof(byte));
    
            var panoramaParameter = panorama.HasValue ?
                new ObjectParameter("Panorama", panorama) :
                new ObjectParameter("Panorama", typeof(bool));
    
            var oppdragsnrParameter = oppdragsnr != null ?
                new ObjectParameter("Oppdragsnr", oppdragsnr) :
                new ObjectParameter("Oppdragsnr", typeof(string));
    
            var adresseParameter = adresse != null ?
                new ObjectParameter("Adresse", adresse) :
                new ObjectParameter("Adresse", typeof(string));
    
            var postnrParameter = postnr != null ?
                new ObjectParameter("Postnr", postnr) :
                new ObjectParameter("Postnr", typeof(string));
    
            var poststedParameter = poststed != null ?
                new ObjectParameter("Poststed", poststed) :
                new ObjectParameter("Poststed", typeof(string));
    
            var kontaktpersonParameter = kontaktperson != null ?
                new ObjectParameter("Kontaktperson", kontaktperson) :
                new ObjectParameter("Kontaktperson", typeof(string));
    
            var kontaktpersonEpostParameter = kontaktpersonEpost != null ?
                new ObjectParameter("KontaktpersonEpost", kontaktpersonEpost) :
                new ObjectParameter("KontaktpersonEpost", typeof(string));
    
            var telefonPrivatParameter = telefonPrivat != null ?
                new ObjectParameter("TelefonPrivat", telefonPrivat) :
                new ObjectParameter("TelefonPrivat", typeof(string));
    
            var telefonMobilParameter = telefonMobil != null ?
                new ObjectParameter("TelefonMobil", telefonMobil) :
                new ObjectParameter("TelefonMobil", typeof(string));
    
            var telefonArbeidParameter = telefonArbeid != null ?
                new ObjectParameter("TelefonArbeid", telefonArbeid) :
                new ObjectParameter("TelefonArbeid", typeof(string));
    
            var kontaktMeglerParameter = kontaktMegler.HasValue ?
                new ObjectParameter("KontaktMegler", kontaktMegler) :
                new ObjectParameter("KontaktMegler", typeof(bool));
    
            var oppdragTypeIDParameter = oppdragTypeID.HasValue ?
                new ObjectParameter("OppdragTypeID", oppdragTypeID) :
                new ObjectParameter("OppdragTypeID", typeof(byte));
    
            var tilleggsInformasjonParameter = tilleggsInformasjon != null ?
                new ObjectParameter("TilleggsInformasjon", tilleggsInformasjon) :
                new ObjectParameter("TilleggsInformasjon", typeof(string));
    
            var kommentarParameter = kommentar != null ?
                new ObjectParameter("Kommentar", kommentar) :
                new ObjectParameter("Kommentar", typeof(string));
    
            var datoBookingParameter = datoBooking.HasValue ?
                new ObjectParameter("DatoBooking", datoBooking) :
                new ObjectParameter("DatoBooking", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterFotooppdrag", fotooppdragID, partnerIDParameter, brukerIDParameter, fotografIDParameter, fotoStatusIDParameter, fotoTypeIDParameter, fotoSoneIDParameter, panoramaParameter, oppdragsnrParameter, adresseParameter, postnrParameter, poststedParameter, kontaktpersonParameter, kontaktpersonEpostParameter, telefonPrivatParameter, telefonMobilParameter, telefonArbeidParameter, kontaktMeglerParameter, oppdragTypeIDParameter, tilleggsInformasjonParameter, kommentarParameter, datoBookingParameter);
        }
    
        public virtual int sp_OppdaterFotooppdragBildepakkeLevert(Nullable<int> fotooppdragID, ObjectParameter retval)
        {
            var fotooppdragIDParameter = fotooppdragID.HasValue ?
                new ObjectParameter("FotooppdragID", fotooppdragID) :
                new ObjectParameter("FotooppdragID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterFotooppdragBildepakkeLevert", fotooppdragIDParameter, retval);
        }
    
        public virtual int sp_OppdaterFotooppdragHarTjenesteType(Nullable<int> fotooppdragID, Nullable<int> tjenesteTypeID, ObjectParameter retval)
        {
            var fotooppdragIDParameter = fotooppdragID.HasValue ?
                new ObjectParameter("FotooppdragID", fotooppdragID) :
                new ObjectParameter("FotooppdragID", typeof(int));
    
            var tjenesteTypeIDParameter = tjenesteTypeID.HasValue ?
                new ObjectParameter("TjenesteTypeID", tjenesteTypeID) :
                new ObjectParameter("TjenesteTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterFotooppdragHarTjenesteType", fotooppdragIDParameter, tjenesteTypeIDParameter, retval);
        }
    
        public virtual int sp_OppdaterFotooppdragLeveranse(ObjectParameter fotooppdragID, string meldingEpost, string meldingSMS, Nullable<byte> type)
        {
            var meldingEpostParameter = meldingEpost != null ?
                new ObjectParameter("MeldingEpost", meldingEpost) :
                new ObjectParameter("MeldingEpost", typeof(string));
    
            var meldingSMSParameter = meldingSMS != null ?
                new ObjectParameter("MeldingSMS", meldingSMS) :
                new ObjectParameter("MeldingSMS", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterFotooppdragLeveranse", fotooppdragID, meldingEpostParameter, meldingSMSParameter, typeParameter);
        }
    
        public virtual int sp_OppdaterFotooppdragLeveranseOppdragsnr(ObjectParameter fotooppdragID, string oppdragsnr, Nullable<byte> type)
        {
            var oppdragsnrParameter = oppdragsnr != null ?
                new ObjectParameter("Oppdragsnr", oppdragsnr) :
                new ObjectParameter("Oppdragsnr", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterFotooppdragLeveranseOppdragsnr", fotooppdragID, oppdragsnrParameter, typeParameter);
        }
    
        public virtual int sp_OppdaterGjestebok(ObjectParameter iD, string navn, string epost, string melding)
        {
            var navnParameter = navn != null ?
                new ObjectParameter("Navn", navn) :
                new ObjectParameter("Navn", typeof(string));
    
            var epostParameter = epost != null ?
                new ObjectParameter("Epost", epost) :
                new ObjectParameter("Epost", typeof(string));
    
            var meldingParameter = melding != null ?
                new ObjectParameter("Melding", melding) :
                new ObjectParameter("Melding", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterGjestebok", iD, navnParameter, epostParameter, meldingParameter);
        }
    
        public virtual int sp_OppdaterGjestebokAktiv(Nullable<int> iD, Nullable<bool> aktiv)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var aktivParameter = aktiv.HasValue ?
                new ObjectParameter("Aktiv", aktiv) :
                new ObjectParameter("Aktiv", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterGjestebokAktiv", iDParameter, aktivParameter);
        }
    
        public virtual int sp_OppdaterLock(Nullable<byte> partnerID, Nullable<bool> @lock)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var lockParameter = @lock.HasValue ?
                new ObjectParameter("Lock", @lock) :
                new ObjectParameter("Lock", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterLock", partnerIDParameter, lockParameter);
        }
    
        public virtual int sp_OppdaterNyhet(Nullable<byte> partnerID)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterNyhet", partnerIDParameter);
        }
    
        public virtual int sp_OppdaterOppdrag(ObjectParameter oppdragID, Nullable<byte> partnerID, Nullable<int> brukerID, Nullable<int> fotografID, Nullable<byte> statusID, string oppdragsnr, string adresse, string postnr, string poststed, Nullable<byte> oppdragTypeID, string tilleggsInformasjon, string kommentar, Nullable<System.DateTime> datoBooking)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var brukerIDParameter = brukerID.HasValue ?
                new ObjectParameter("BrukerID", brukerID) :
                new ObjectParameter("BrukerID", typeof(int));
    
            var fotografIDParameter = fotografID.HasValue ?
                new ObjectParameter("FotografID", fotografID) :
                new ObjectParameter("FotografID", typeof(int));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(byte));
    
            var oppdragsnrParameter = oppdragsnr != null ?
                new ObjectParameter("Oppdragsnr", oppdragsnr) :
                new ObjectParameter("Oppdragsnr", typeof(string));
    
            var adresseParameter = adresse != null ?
                new ObjectParameter("Adresse", adresse) :
                new ObjectParameter("Adresse", typeof(string));
    
            var postnrParameter = postnr != null ?
                new ObjectParameter("Postnr", postnr) :
                new ObjectParameter("Postnr", typeof(string));
    
            var poststedParameter = poststed != null ?
                new ObjectParameter("Poststed", poststed) :
                new ObjectParameter("Poststed", typeof(string));
    
            var oppdragTypeIDParameter = oppdragTypeID.HasValue ?
                new ObjectParameter("OppdragTypeID", oppdragTypeID) :
                new ObjectParameter("OppdragTypeID", typeof(byte));
    
            var tilleggsInformasjonParameter = tilleggsInformasjon != null ?
                new ObjectParameter("TilleggsInformasjon", tilleggsInformasjon) :
                new ObjectParameter("TilleggsInformasjon", typeof(string));
    
            var kommentarParameter = kommentar != null ?
                new ObjectParameter("Kommentar", kommentar) :
                new ObjectParameter("Kommentar", typeof(string));
    
            var datoBookingParameter = datoBooking.HasValue ?
                new ObjectParameter("DatoBooking", datoBooking) :
                new ObjectParameter("DatoBooking", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterOppdrag", oppdragID, partnerIDParameter, brukerIDParameter, fotografIDParameter, statusIDParameter, oppdragsnrParameter, adresseParameter, postnrParameter, poststedParameter, oppdragTypeIDParameter, tilleggsInformasjonParameter, kommentarParameter, datoBookingParameter);
        }
    
        public virtual int sp_OppdaterOppdragHarTjenesteType(Nullable<int> oppdragID, Nullable<int> tjenesteTypeID, ObjectParameter retval)
        {
            var oppdragIDParameter = oppdragID.HasValue ?
                new ObjectParameter("OppdragID", oppdragID) :
                new ObjectParameter("OppdragID", typeof(int));
    
            var tjenesteTypeIDParameter = tjenesteTypeID.HasValue ?
                new ObjectParameter("TjenesteTypeID", tjenesteTypeID) :
                new ObjectParameter("TjenesteTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterOppdragHarTjenesteType", oppdragIDParameter, tjenesteTypeIDParameter, retval);
        }
    
        public virtual int sp_OppdaterPano(Nullable<long> fotooppdragID, Nullable<byte> pakkeTypeID, string bildenavn, string bildetekst)
        {
            var fotooppdragIDParameter = fotooppdragID.HasValue ?
                new ObjectParameter("FotooppdragID", fotooppdragID) :
                new ObjectParameter("FotooppdragID", typeof(long));
    
            var pakkeTypeIDParameter = pakkeTypeID.HasValue ?
                new ObjectParameter("PakkeTypeID", pakkeTypeID) :
                new ObjectParameter("PakkeTypeID", typeof(byte));
    
            var bildenavnParameter = bildenavn != null ?
                new ObjectParameter("Bildenavn", bildenavn) :
                new ObjectParameter("Bildenavn", typeof(string));
    
            var bildetekstParameter = bildetekst != null ?
                new ObjectParameter("Bildetekst", bildetekst) :
                new ObjectParameter("Bildetekst", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterPano", fotooppdragIDParameter, pakkeTypeIDParameter, bildenavnParameter, bildetekstParameter);
        }
    
        public virtual int sp_OppdaterPanoData(Nullable<long> panoID, string bildetekst, Nullable<byte> sortering)
        {
            var panoIDParameter = panoID.HasValue ?
                new ObjectParameter("PanoID", panoID) :
                new ObjectParameter("PanoID", typeof(long));
    
            var bildetekstParameter = bildetekst != null ?
                new ObjectParameter("Bildetekst", bildetekst) :
                new ObjectParameter("Bildetekst", typeof(string));
    
            var sorteringParameter = sortering.HasValue ?
                new ObjectParameter("Sortering", sortering) :
                new ObjectParameter("Sortering", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterPanoData", panoIDParameter, bildetekstParameter, sorteringParameter);
        }
    
        public virtual int sp_OppdaterPanoData2(Nullable<long> panoID, Nullable<long> fotoID)
        {
            var panoIDParameter = panoID.HasValue ?
                new ObjectParameter("PanoID", panoID) :
                new ObjectParameter("PanoID", typeof(long));
    
            var fotoIDParameter = fotoID.HasValue ?
                new ObjectParameter("FotoID", fotoID) :
                new ObjectParameter("FotoID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterPanoData2", panoIDParameter, fotoIDParameter);
        }
    
        public virtual int sp_OppdaterPanorama(Nullable<long> prospektID, string bildenavn, string bildetekst)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var bildenavnParameter = bildenavn != null ?
                new ObjectParameter("Bildenavn", bildenavn) :
                new ObjectParameter("Bildenavn", typeof(string));
    
            var bildetekstParameter = bildetekst != null ?
                new ObjectParameter("Bildetekst", bildetekst) :
                new ObjectParameter("Bildetekst", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterPanorama", prospektIDParameter, bildenavnParameter, bildetekstParameter);
        }
    
        public virtual int sp_OppdaterPartnerProduktSortering(Nullable<byte> produktID, Nullable<byte> partnerID, Nullable<byte> sorteringtrykk)
        {
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var sorteringtrykkParameter = sorteringtrykk.HasValue ?
                new ObjectParameter("Sorteringtrykk", sorteringtrykk) :
                new ObjectParameter("Sorteringtrykk", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterPartnerProduktSortering", produktIDParameter, partnerIDParameter, sorteringtrykkParameter);
        }
    
        public virtual int sp_OppdaterProduktHarAnnonse(ObjectParameter annonseID, Nullable<int> produktID, Nullable<System.DateTime> datoUtgivelse, Nullable<int> kategori, Nullable<int> bredde, Nullable<int> hoyde, string beskrivelse, Nullable<bool> aktiv, Nullable<bool> dirty)
        {
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(int));
    
            var datoUtgivelseParameter = datoUtgivelse.HasValue ?
                new ObjectParameter("DatoUtgivelse", datoUtgivelse) :
                new ObjectParameter("DatoUtgivelse", typeof(System.DateTime));
    
            var kategoriParameter = kategori.HasValue ?
                new ObjectParameter("Kategori", kategori) :
                new ObjectParameter("Kategori", typeof(int));
    
            var breddeParameter = bredde.HasValue ?
                new ObjectParameter("Bredde", bredde) :
                new ObjectParameter("Bredde", typeof(int));
    
            var hoydeParameter = hoyde.HasValue ?
                new ObjectParameter("Hoyde", hoyde) :
                new ObjectParameter("Hoyde", typeof(int));
    
            var beskrivelseParameter = beskrivelse != null ?
                new ObjectParameter("Beskrivelse", beskrivelse) :
                new ObjectParameter("Beskrivelse", typeof(string));
    
            var aktivParameter = aktiv.HasValue ?
                new ObjectParameter("Aktiv", aktiv) :
                new ObjectParameter("Aktiv", typeof(bool));
    
            var dirtyParameter = dirty.HasValue ?
                new ObjectParameter("Dirty", dirty) :
                new ObjectParameter("Dirty", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterProduktHarAnnonse", annonseID, produktIDParameter, datoUtgivelseParameter, kategoriParameter, breddeParameter, hoydeParameter, beskrivelseParameter, aktivParameter, dirtyParameter);
        }
    
        public virtual int sp_OppdaterProduktUtgivelse(Nullable<byte> produktID, Nullable<System.DateTime> datoUtgivelse, string hovedordrenr, ObjectParameter @return)
        {
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var datoUtgivelseParameter = datoUtgivelse.HasValue ?
                new ObjectParameter("DatoUtgivelse", datoUtgivelse) :
                new ObjectParameter("DatoUtgivelse", typeof(System.DateTime));
    
            var hovedordrenrParameter = hovedordrenr != null ?
                new ObjectParameter("Hovedordrenr", hovedordrenr) :
                new ObjectParameter("Hovedordrenr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterProduktUtgivelse", produktIDParameter, datoUtgivelseParameter, hovedordrenrParameter, @return);
        }
    
        public virtual int sp_OppdaterProduktUtgivelseLock(Nullable<byte> produktID, Nullable<System.DateTime> datoUtgivelse, Nullable<System.DateTime> datoStart, Nullable<System.DateTime> datoSlutt, Nullable<System.DateTime> datoStartBF, Nullable<System.DateTime> datoSluttBF, Nullable<short> antallSider)
        {
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var datoUtgivelseParameter = datoUtgivelse.HasValue ?
                new ObjectParameter("DatoUtgivelse", datoUtgivelse) :
                new ObjectParameter("DatoUtgivelse", typeof(System.DateTime));
    
            var datoStartParameter = datoStart.HasValue ?
                new ObjectParameter("DatoStart", datoStart) :
                new ObjectParameter("DatoStart", typeof(System.DateTime));
    
            var datoSluttParameter = datoSlutt.HasValue ?
                new ObjectParameter("DatoSlutt", datoSlutt) :
                new ObjectParameter("DatoSlutt", typeof(System.DateTime));
    
            var datoStartBFParameter = datoStartBF.HasValue ?
                new ObjectParameter("DatoStartBF", datoStartBF) :
                new ObjectParameter("DatoStartBF", typeof(System.DateTime));
    
            var datoSluttBFParameter = datoSluttBF.HasValue ?
                new ObjectParameter("DatoSluttBF", datoSluttBF) :
                new ObjectParameter("DatoSluttBF", typeof(System.DateTime));
    
            var antallSiderParameter = antallSider.HasValue ?
                new ObjectParameter("AntallSider", antallSider) :
                new ObjectParameter("AntallSider", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterProduktUtgivelseLock", produktIDParameter, datoUtgivelseParameter, datoStartParameter, datoSluttParameter, datoStartBFParameter, datoSluttBFParameter, antallSiderParameter);
        }
    
        public virtual int sp_OppdaterProspekt(ObjectParameter prospektID, Nullable<int> statusID, Nullable<int> brukerID, Nullable<int> partnerID, string oppdragsnr, string finnKode, string nyKode, string eM1BoligID, Nullable<int> inndelingID, Nullable<int> boligtypeID, Nullable<long> pris, Nullable<long> prisTil, Nullable<byte> prisType, Nullable<decimal> omkostninger, Nullable<int> kjopsomkostninger, Nullable<int> pROM, Nullable<int> bOA, Nullable<int> bTA, Nullable<int> bRA, Nullable<byte> etasje, Nullable<short> soverom, Nullable<short> rom, Nullable<int> fellesutgifter, Nullable<int> husleie, Nullable<int> fellesgjeld, string byggeaar, Nullable<int> tomteareal, string tomtetype, string omraade, string overskrift, string undertittel, string adresse, string postnr, string poststed, string romtekst, string visning, Nullable<System.DateTime> visningFra, Nullable<System.DateTime> visningTil, string megler, string meglerTittel, string meglerTlfMobil, string meglerTlf, string meglerEmail, string meglerX, string meglerTittelX, string meglerTlfMobilX, string meglerTlfX, string meglerEmailX, string parkering, string vurdering, string annonsetekst, Nullable<bool> ukens, string spesialOverskrift1, string spesialOverskrift2, string spesialTekst1, string spesialTekst2, string kommentar)
        {
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var brukerIDParameter = brukerID.HasValue ?
                new ObjectParameter("BrukerID", brukerID) :
                new ObjectParameter("BrukerID", typeof(int));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(int));
    
            var oppdragsnrParameter = oppdragsnr != null ?
                new ObjectParameter("Oppdragsnr", oppdragsnr) :
                new ObjectParameter("Oppdragsnr", typeof(string));
    
            var finnKodeParameter = finnKode != null ?
                new ObjectParameter("FinnKode", finnKode) :
                new ObjectParameter("FinnKode", typeof(string));
    
            var nyKodeParameter = nyKode != null ?
                new ObjectParameter("NyKode", nyKode) :
                new ObjectParameter("NyKode", typeof(string));
    
            var eM1BoligIDParameter = eM1BoligID != null ?
                new ObjectParameter("EM1BoligID", eM1BoligID) :
                new ObjectParameter("EM1BoligID", typeof(string));
    
            var inndelingIDParameter = inndelingID.HasValue ?
                new ObjectParameter("InndelingID", inndelingID) :
                new ObjectParameter("InndelingID", typeof(int));
    
            var boligtypeIDParameter = boligtypeID.HasValue ?
                new ObjectParameter("BoligtypeID", boligtypeID) :
                new ObjectParameter("BoligtypeID", typeof(int));
    
            var prisParameter = pris.HasValue ?
                new ObjectParameter("Pris", pris) :
                new ObjectParameter("Pris", typeof(long));
    
            var prisTilParameter = prisTil.HasValue ?
                new ObjectParameter("PrisTil", prisTil) :
                new ObjectParameter("PrisTil", typeof(long));
    
            var prisTypeParameter = prisType.HasValue ?
                new ObjectParameter("PrisType", prisType) :
                new ObjectParameter("PrisType", typeof(byte));
    
            var omkostningerParameter = omkostninger.HasValue ?
                new ObjectParameter("Omkostninger", omkostninger) :
                new ObjectParameter("Omkostninger", typeof(decimal));
    
            var kjopsomkostningerParameter = kjopsomkostninger.HasValue ?
                new ObjectParameter("Kjopsomkostninger", kjopsomkostninger) :
                new ObjectParameter("Kjopsomkostninger", typeof(int));
    
            var pROMParameter = pROM.HasValue ?
                new ObjectParameter("PROM", pROM) :
                new ObjectParameter("PROM", typeof(int));
    
            var bOAParameter = bOA.HasValue ?
                new ObjectParameter("BOA", bOA) :
                new ObjectParameter("BOA", typeof(int));
    
            var bTAParameter = bTA.HasValue ?
                new ObjectParameter("BTA", bTA) :
                new ObjectParameter("BTA", typeof(int));
    
            var bRAParameter = bRA.HasValue ?
                new ObjectParameter("BRA", bRA) :
                new ObjectParameter("BRA", typeof(int));
    
            var etasjeParameter = etasje.HasValue ?
                new ObjectParameter("Etasje", etasje) :
                new ObjectParameter("Etasje", typeof(byte));
    
            var soveromParameter = soverom.HasValue ?
                new ObjectParameter("Soverom", soverom) :
                new ObjectParameter("Soverom", typeof(short));
    
            var romParameter = rom.HasValue ?
                new ObjectParameter("Rom", rom) :
                new ObjectParameter("Rom", typeof(short));
    
            var fellesutgifterParameter = fellesutgifter.HasValue ?
                new ObjectParameter("Fellesutgifter", fellesutgifter) :
                new ObjectParameter("Fellesutgifter", typeof(int));
    
            var husleieParameter = husleie.HasValue ?
                new ObjectParameter("Husleie", husleie) :
                new ObjectParameter("Husleie", typeof(int));
    
            var fellesgjeldParameter = fellesgjeld.HasValue ?
                new ObjectParameter("Fellesgjeld", fellesgjeld) :
                new ObjectParameter("Fellesgjeld", typeof(int));
    
            var byggeaarParameter = byggeaar != null ?
                new ObjectParameter("Byggeaar", byggeaar) :
                new ObjectParameter("Byggeaar", typeof(string));
    
            var tomtearealParameter = tomteareal.HasValue ?
                new ObjectParameter("Tomteareal", tomteareal) :
                new ObjectParameter("Tomteareal", typeof(int));
    
            var tomtetypeParameter = tomtetype != null ?
                new ObjectParameter("Tomtetype", tomtetype) :
                new ObjectParameter("Tomtetype", typeof(string));
    
            var omraadeParameter = omraade != null ?
                new ObjectParameter("Omraade", omraade) :
                new ObjectParameter("Omraade", typeof(string));
    
            var overskriftParameter = overskrift != null ?
                new ObjectParameter("Overskrift", overskrift) :
                new ObjectParameter("Overskrift", typeof(string));
    
            var undertittelParameter = undertittel != null ?
                new ObjectParameter("Undertittel", undertittel) :
                new ObjectParameter("Undertittel", typeof(string));
    
            var adresseParameter = adresse != null ?
                new ObjectParameter("Adresse", adresse) :
                new ObjectParameter("Adresse", typeof(string));
    
            var postnrParameter = postnr != null ?
                new ObjectParameter("Postnr", postnr) :
                new ObjectParameter("Postnr", typeof(string));
    
            var poststedParameter = poststed != null ?
                new ObjectParameter("Poststed", poststed) :
                new ObjectParameter("Poststed", typeof(string));
    
            var romtekstParameter = romtekst != null ?
                new ObjectParameter("Romtekst", romtekst) :
                new ObjectParameter("Romtekst", typeof(string));
    
            var visningParameter = visning != null ?
                new ObjectParameter("Visning", visning) :
                new ObjectParameter("Visning", typeof(string));
    
            var visningFraParameter = visningFra.HasValue ?
                new ObjectParameter("VisningFra", visningFra) :
                new ObjectParameter("VisningFra", typeof(System.DateTime));
    
            var visningTilParameter = visningTil.HasValue ?
                new ObjectParameter("VisningTil", visningTil) :
                new ObjectParameter("VisningTil", typeof(System.DateTime));
    
            var meglerParameter = megler != null ?
                new ObjectParameter("Megler", megler) :
                new ObjectParameter("Megler", typeof(string));
    
            var meglerTittelParameter = meglerTittel != null ?
                new ObjectParameter("MeglerTittel", meglerTittel) :
                new ObjectParameter("MeglerTittel", typeof(string));
    
            var meglerTlfMobilParameter = meglerTlfMobil != null ?
                new ObjectParameter("MeglerTlfMobil", meglerTlfMobil) :
                new ObjectParameter("MeglerTlfMobil", typeof(string));
    
            var meglerTlfParameter = meglerTlf != null ?
                new ObjectParameter("MeglerTlf", meglerTlf) :
                new ObjectParameter("MeglerTlf", typeof(string));
    
            var meglerEmailParameter = meglerEmail != null ?
                new ObjectParameter("MeglerEmail", meglerEmail) :
                new ObjectParameter("MeglerEmail", typeof(string));
    
            var meglerXParameter = meglerX != null ?
                new ObjectParameter("MeglerX", meglerX) :
                new ObjectParameter("MeglerX", typeof(string));
    
            var meglerTittelXParameter = meglerTittelX != null ?
                new ObjectParameter("MeglerTittelX", meglerTittelX) :
                new ObjectParameter("MeglerTittelX", typeof(string));
    
            var meglerTlfMobilXParameter = meglerTlfMobilX != null ?
                new ObjectParameter("MeglerTlfMobilX", meglerTlfMobilX) :
                new ObjectParameter("MeglerTlfMobilX", typeof(string));
    
            var meglerTlfXParameter = meglerTlfX != null ?
                new ObjectParameter("MeglerTlfX", meglerTlfX) :
                new ObjectParameter("MeglerTlfX", typeof(string));
    
            var meglerEmailXParameter = meglerEmailX != null ?
                new ObjectParameter("MeglerEmailX", meglerEmailX) :
                new ObjectParameter("MeglerEmailX", typeof(string));
    
            var parkeringParameter = parkering != null ?
                new ObjectParameter("Parkering", parkering) :
                new ObjectParameter("Parkering", typeof(string));
    
            var vurderingParameter = vurdering != null ?
                new ObjectParameter("Vurdering", vurdering) :
                new ObjectParameter("Vurdering", typeof(string));
    
            var annonsetekstParameter = annonsetekst != null ?
                new ObjectParameter("Annonsetekst", annonsetekst) :
                new ObjectParameter("Annonsetekst", typeof(string));
    
            var ukensParameter = ukens.HasValue ?
                new ObjectParameter("Ukens", ukens) :
                new ObjectParameter("Ukens", typeof(bool));
    
            var spesialOverskrift1Parameter = spesialOverskrift1 != null ?
                new ObjectParameter("SpesialOverskrift1", spesialOverskrift1) :
                new ObjectParameter("SpesialOverskrift1", typeof(string));
    
            var spesialOverskrift2Parameter = spesialOverskrift2 != null ?
                new ObjectParameter("SpesialOverskrift2", spesialOverskrift2) :
                new ObjectParameter("SpesialOverskrift2", typeof(string));
    
            var spesialTekst1Parameter = spesialTekst1 != null ?
                new ObjectParameter("SpesialTekst1", spesialTekst1) :
                new ObjectParameter("SpesialTekst1", typeof(string));
    
            var spesialTekst2Parameter = spesialTekst2 != null ?
                new ObjectParameter("SpesialTekst2", spesialTekst2) :
                new ObjectParameter("SpesialTekst2", typeof(string));
    
            var kommentarParameter = kommentar != null ?
                new ObjectParameter("Kommentar", kommentar) :
                new ObjectParameter("Kommentar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterProspekt", prospektID, statusIDParameter, brukerIDParameter, partnerIDParameter, oppdragsnrParameter, finnKodeParameter, nyKodeParameter, eM1BoligIDParameter, inndelingIDParameter, boligtypeIDParameter, prisParameter, prisTilParameter, prisTypeParameter, omkostningerParameter, kjopsomkostningerParameter, pROMParameter, bOAParameter, bTAParameter, bRAParameter, etasjeParameter, soveromParameter, romParameter, fellesutgifterParameter, husleieParameter, fellesgjeldParameter, byggeaarParameter, tomtearealParameter, tomtetypeParameter, omraadeParameter, overskriftParameter, undertittelParameter, adresseParameter, postnrParameter, poststedParameter, romtekstParameter, visningParameter, visningFraParameter, visningTilParameter, meglerParameter, meglerTittelParameter, meglerTlfMobilParameter, meglerTlfParameter, meglerEmailParameter, meglerXParameter, meglerTittelXParameter, meglerTlfMobilXParameter, meglerTlfXParameter, meglerEmailXParameter, parkeringParameter, vurderingParameter, annonsetekstParameter, ukensParameter, spesialOverskrift1Parameter, spesialOverskrift2Parameter, spesialTekst1Parameter, spesialTekst2Parameter, kommentarParameter);
        }
    
        public virtual int sp_OppdaterProspekt2(ObjectParameter prospektID, string gnr, string bnr, string snr, string fnr, string lnr, string finnURL, string overskrift1, string overskrift2, string oppdragstype, string omraade, string postnrPoststed, string borettslag, Nullable<short> bRUA, string byggeaar, Nullable<short> rom, Nullable<short> soverom, Nullable<byte> etasje, string skolekrets, string selger, string kommune, string overtagelse, string ledigFra, string meglerEmail, string meglerAdresse, string meglerEmail2, string kontorTlf, string kontorFax, string visning, string beliggenhet1, string beliggenhet2, string beliggenhet3, string beliggenhet4, string bebyggelse, string adkomst, string byggemaate, string innhold, string standard, string utstyr, string oppvarming, string parkering, string veiVannAvlop, string servitutter, string reguleringsplan, string tomtetype, Nullable<int> tomteareal, string tomteinfo, string mangler, string eierskifteforsikring, string notat, string forrForerNavn, Nullable<int> gebyrForrForer, string forrForerAdr1, string forrForerAdr2, string takstmann, string takstdato, Nullable<int> takstverdi, Nullable<int> laaneverdi, Nullable<int> ligningsverdi, Nullable<int> kommAvgifter, string andreAvgifter, Nullable<int> gebyrTinglysningSkjote, Nullable<int> gebyrHeftelser, Nullable<int> gebyrTinglysningPanteobl, Nullable<int> partialobligasjon, Nullable<int> fellesInnskudd, Nullable<int> eierskiftegebyr, Nullable<int> opprinneligBelop, Nullable<int> restbelop, string forsikring, string meglerfirma, string orgnr)
        {
            var gnrParameter = gnr != null ?
                new ObjectParameter("Gnr", gnr) :
                new ObjectParameter("Gnr", typeof(string));
    
            var bnrParameter = bnr != null ?
                new ObjectParameter("Bnr", bnr) :
                new ObjectParameter("Bnr", typeof(string));
    
            var snrParameter = snr != null ?
                new ObjectParameter("Snr", snr) :
                new ObjectParameter("Snr", typeof(string));
    
            var fnrParameter = fnr != null ?
                new ObjectParameter("Fnr", fnr) :
                new ObjectParameter("Fnr", typeof(string));
    
            var lnrParameter = lnr != null ?
                new ObjectParameter("Lnr", lnr) :
                new ObjectParameter("Lnr", typeof(string));
    
            var finnURLParameter = finnURL != null ?
                new ObjectParameter("FinnURL", finnURL) :
                new ObjectParameter("FinnURL", typeof(string));
    
            var overskrift1Parameter = overskrift1 != null ?
                new ObjectParameter("Overskrift1", overskrift1) :
                new ObjectParameter("Overskrift1", typeof(string));
    
            var overskrift2Parameter = overskrift2 != null ?
                new ObjectParameter("Overskrift2", overskrift2) :
                new ObjectParameter("Overskrift2", typeof(string));
    
            var oppdragstypeParameter = oppdragstype != null ?
                new ObjectParameter("Oppdragstype", oppdragstype) :
                new ObjectParameter("Oppdragstype", typeof(string));
    
            var omraadeParameter = omraade != null ?
                new ObjectParameter("Omraade", omraade) :
                new ObjectParameter("Omraade", typeof(string));
    
            var postnrPoststedParameter = postnrPoststed != null ?
                new ObjectParameter("PostnrPoststed", postnrPoststed) :
                new ObjectParameter("PostnrPoststed", typeof(string));
    
            var borettslagParameter = borettslag != null ?
                new ObjectParameter("Borettslag", borettslag) :
                new ObjectParameter("Borettslag", typeof(string));
    
            var bRUAParameter = bRUA.HasValue ?
                new ObjectParameter("BRUA", bRUA) :
                new ObjectParameter("BRUA", typeof(short));
    
            var byggeaarParameter = byggeaar != null ?
                new ObjectParameter("Byggeaar", byggeaar) :
                new ObjectParameter("Byggeaar", typeof(string));
    
            var romParameter = rom.HasValue ?
                new ObjectParameter("Rom", rom) :
                new ObjectParameter("Rom", typeof(short));
    
            var soveromParameter = soverom.HasValue ?
                new ObjectParameter("Soverom", soverom) :
                new ObjectParameter("Soverom", typeof(short));
    
            var etasjeParameter = etasje.HasValue ?
                new ObjectParameter("Etasje", etasje) :
                new ObjectParameter("Etasje", typeof(byte));
    
            var skolekretsParameter = skolekrets != null ?
                new ObjectParameter("Skolekrets", skolekrets) :
                new ObjectParameter("Skolekrets", typeof(string));
    
            var selgerParameter = selger != null ?
                new ObjectParameter("Selger", selger) :
                new ObjectParameter("Selger", typeof(string));
    
            var kommuneParameter = kommune != null ?
                new ObjectParameter("Kommune", kommune) :
                new ObjectParameter("Kommune", typeof(string));
    
            var overtagelseParameter = overtagelse != null ?
                new ObjectParameter("Overtagelse", overtagelse) :
                new ObjectParameter("Overtagelse", typeof(string));
    
            var ledigFraParameter = ledigFra != null ?
                new ObjectParameter("LedigFra", ledigFra) :
                new ObjectParameter("LedigFra", typeof(string));
    
            var meglerEmailParameter = meglerEmail != null ?
                new ObjectParameter("MeglerEmail", meglerEmail) :
                new ObjectParameter("MeglerEmail", typeof(string));
    
            var meglerAdresseParameter = meglerAdresse != null ?
                new ObjectParameter("MeglerAdresse", meglerAdresse) :
                new ObjectParameter("MeglerAdresse", typeof(string));
    
            var meglerEmail2Parameter = meglerEmail2 != null ?
                new ObjectParameter("MeglerEmail2", meglerEmail2) :
                new ObjectParameter("MeglerEmail2", typeof(string));
    
            var kontorTlfParameter = kontorTlf != null ?
                new ObjectParameter("KontorTlf", kontorTlf) :
                new ObjectParameter("KontorTlf", typeof(string));
    
            var kontorFaxParameter = kontorFax != null ?
                new ObjectParameter("KontorFax", kontorFax) :
                new ObjectParameter("KontorFax", typeof(string));
    
            var visningParameter = visning != null ?
                new ObjectParameter("Visning", visning) :
                new ObjectParameter("Visning", typeof(string));
    
            var beliggenhet1Parameter = beliggenhet1 != null ?
                new ObjectParameter("Beliggenhet1", beliggenhet1) :
                new ObjectParameter("Beliggenhet1", typeof(string));
    
            var beliggenhet2Parameter = beliggenhet2 != null ?
                new ObjectParameter("Beliggenhet2", beliggenhet2) :
                new ObjectParameter("Beliggenhet2", typeof(string));
    
            var beliggenhet3Parameter = beliggenhet3 != null ?
                new ObjectParameter("Beliggenhet3", beliggenhet3) :
                new ObjectParameter("Beliggenhet3", typeof(string));
    
            var beliggenhet4Parameter = beliggenhet4 != null ?
                new ObjectParameter("Beliggenhet4", beliggenhet4) :
                new ObjectParameter("Beliggenhet4", typeof(string));
    
            var bebyggelseParameter = bebyggelse != null ?
                new ObjectParameter("Bebyggelse", bebyggelse) :
                new ObjectParameter("Bebyggelse", typeof(string));
    
            var adkomstParameter = adkomst != null ?
                new ObjectParameter("Adkomst", adkomst) :
                new ObjectParameter("Adkomst", typeof(string));
    
            var byggemaateParameter = byggemaate != null ?
                new ObjectParameter("Byggemaate", byggemaate) :
                new ObjectParameter("Byggemaate", typeof(string));
    
            var innholdParameter = innhold != null ?
                new ObjectParameter("Innhold", innhold) :
                new ObjectParameter("Innhold", typeof(string));
    
            var standardParameter = standard != null ?
                new ObjectParameter("Standard", standard) :
                new ObjectParameter("Standard", typeof(string));
    
            var utstyrParameter = utstyr != null ?
                new ObjectParameter("Utstyr", utstyr) :
                new ObjectParameter("Utstyr", typeof(string));
    
            var oppvarmingParameter = oppvarming != null ?
                new ObjectParameter("Oppvarming", oppvarming) :
                new ObjectParameter("Oppvarming", typeof(string));
    
            var parkeringParameter = parkering != null ?
                new ObjectParameter("Parkering", parkering) :
                new ObjectParameter("Parkering", typeof(string));
    
            var veiVannAvlopParameter = veiVannAvlop != null ?
                new ObjectParameter("VeiVannAvlop", veiVannAvlop) :
                new ObjectParameter("VeiVannAvlop", typeof(string));
    
            var servitutterParameter = servitutter != null ?
                new ObjectParameter("Servitutter", servitutter) :
                new ObjectParameter("Servitutter", typeof(string));
    
            var reguleringsplanParameter = reguleringsplan != null ?
                new ObjectParameter("Reguleringsplan", reguleringsplan) :
                new ObjectParameter("Reguleringsplan", typeof(string));
    
            var tomtetypeParameter = tomtetype != null ?
                new ObjectParameter("Tomtetype", tomtetype) :
                new ObjectParameter("Tomtetype", typeof(string));
    
            var tomtearealParameter = tomteareal.HasValue ?
                new ObjectParameter("Tomteareal", tomteareal) :
                new ObjectParameter("Tomteareal", typeof(int));
    
            var tomteinfoParameter = tomteinfo != null ?
                new ObjectParameter("Tomteinfo", tomteinfo) :
                new ObjectParameter("Tomteinfo", typeof(string));
    
            var manglerParameter = mangler != null ?
                new ObjectParameter("Mangler", mangler) :
                new ObjectParameter("Mangler", typeof(string));
    
            var eierskifteforsikringParameter = eierskifteforsikring != null ?
                new ObjectParameter("Eierskifteforsikring", eierskifteforsikring) :
                new ObjectParameter("Eierskifteforsikring", typeof(string));
    
            var notatParameter = notat != null ?
                new ObjectParameter("Notat", notat) :
                new ObjectParameter("Notat", typeof(string));
    
            var forrForerNavnParameter = forrForerNavn != null ?
                new ObjectParameter("ForrForerNavn", forrForerNavn) :
                new ObjectParameter("ForrForerNavn", typeof(string));
    
            var gebyrForrForerParameter = gebyrForrForer.HasValue ?
                new ObjectParameter("GebyrForrForer", gebyrForrForer) :
                new ObjectParameter("GebyrForrForer", typeof(int));
    
            var forrForerAdr1Parameter = forrForerAdr1 != null ?
                new ObjectParameter("ForrForerAdr1", forrForerAdr1) :
                new ObjectParameter("ForrForerAdr1", typeof(string));
    
            var forrForerAdr2Parameter = forrForerAdr2 != null ?
                new ObjectParameter("ForrForerAdr2", forrForerAdr2) :
                new ObjectParameter("ForrForerAdr2", typeof(string));
    
            var takstmannParameter = takstmann != null ?
                new ObjectParameter("Takstmann", takstmann) :
                new ObjectParameter("Takstmann", typeof(string));
    
            var takstdatoParameter = takstdato != null ?
                new ObjectParameter("Takstdato", takstdato) :
                new ObjectParameter("Takstdato", typeof(string));
    
            var takstverdiParameter = takstverdi.HasValue ?
                new ObjectParameter("Takstverdi", takstverdi) :
                new ObjectParameter("Takstverdi", typeof(int));
    
            var laaneverdiParameter = laaneverdi.HasValue ?
                new ObjectParameter("Laaneverdi", laaneverdi) :
                new ObjectParameter("Laaneverdi", typeof(int));
    
            var ligningsverdiParameter = ligningsverdi.HasValue ?
                new ObjectParameter("Ligningsverdi", ligningsverdi) :
                new ObjectParameter("Ligningsverdi", typeof(int));
    
            var kommAvgifterParameter = kommAvgifter.HasValue ?
                new ObjectParameter("KommAvgifter", kommAvgifter) :
                new ObjectParameter("KommAvgifter", typeof(int));
    
            var andreAvgifterParameter = andreAvgifter != null ?
                new ObjectParameter("AndreAvgifter", andreAvgifter) :
                new ObjectParameter("AndreAvgifter", typeof(string));
    
            var gebyrTinglysningSkjoteParameter = gebyrTinglysningSkjote.HasValue ?
                new ObjectParameter("GebyrTinglysningSkjote", gebyrTinglysningSkjote) :
                new ObjectParameter("GebyrTinglysningSkjote", typeof(int));
    
            var gebyrHeftelserParameter = gebyrHeftelser.HasValue ?
                new ObjectParameter("GebyrHeftelser", gebyrHeftelser) :
                new ObjectParameter("GebyrHeftelser", typeof(int));
    
            var gebyrTinglysningPanteoblParameter = gebyrTinglysningPanteobl.HasValue ?
                new ObjectParameter("GebyrTinglysningPanteobl", gebyrTinglysningPanteobl) :
                new ObjectParameter("GebyrTinglysningPanteobl", typeof(int));
    
            var partialobligasjonParameter = partialobligasjon.HasValue ?
                new ObjectParameter("Partialobligasjon", partialobligasjon) :
                new ObjectParameter("Partialobligasjon", typeof(int));
    
            var fellesInnskuddParameter = fellesInnskudd.HasValue ?
                new ObjectParameter("FellesInnskudd", fellesInnskudd) :
                new ObjectParameter("FellesInnskudd", typeof(int));
    
            var eierskiftegebyrParameter = eierskiftegebyr.HasValue ?
                new ObjectParameter("Eierskiftegebyr", eierskiftegebyr) :
                new ObjectParameter("Eierskiftegebyr", typeof(int));
    
            var opprinneligBelopParameter = opprinneligBelop.HasValue ?
                new ObjectParameter("OpprinneligBelop", opprinneligBelop) :
                new ObjectParameter("OpprinneligBelop", typeof(int));
    
            var restbelopParameter = restbelop.HasValue ?
                new ObjectParameter("Restbelop", restbelop) :
                new ObjectParameter("Restbelop", typeof(int));
    
            var forsikringParameter = forsikring != null ?
                new ObjectParameter("Forsikring", forsikring) :
                new ObjectParameter("Forsikring", typeof(string));
    
            var meglerfirmaParameter = meglerfirma != null ?
                new ObjectParameter("Meglerfirma", meglerfirma) :
                new ObjectParameter("Meglerfirma", typeof(string));
    
            var orgnrParameter = orgnr != null ?
                new ObjectParameter("Orgnr", orgnr) :
                new ObjectParameter("Orgnr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterProspekt2", prospektID, gnrParameter, bnrParameter, snrParameter, fnrParameter, lnrParameter, finnURLParameter, overskrift1Parameter, overskrift2Parameter, oppdragstypeParameter, omraadeParameter, postnrPoststedParameter, borettslagParameter, bRUAParameter, byggeaarParameter, romParameter, soveromParameter, etasjeParameter, skolekretsParameter, selgerParameter, kommuneParameter, overtagelseParameter, ledigFraParameter, meglerEmailParameter, meglerAdresseParameter, meglerEmail2Parameter, kontorTlfParameter, kontorFaxParameter, visningParameter, beliggenhet1Parameter, beliggenhet2Parameter, beliggenhet3Parameter, beliggenhet4Parameter, bebyggelseParameter, adkomstParameter, byggemaateParameter, innholdParameter, standardParameter, utstyrParameter, oppvarmingParameter, parkeringParameter, veiVannAvlopParameter, servitutterParameter, reguleringsplanParameter, tomtetypeParameter, tomtearealParameter, tomteinfoParameter, manglerParameter, eierskifteforsikringParameter, notatParameter, forrForerNavnParameter, gebyrForrForerParameter, forrForerAdr1Parameter, forrForerAdr2Parameter, takstmannParameter, takstdatoParameter, takstverdiParameter, laaneverdiParameter, ligningsverdiParameter, kommAvgifterParameter, andreAvgifterParameter, gebyrTinglysningSkjoteParameter, gebyrHeftelserParameter, gebyrTinglysningPanteoblParameter, partialobligasjonParameter, fellesInnskuddParameter, eierskiftegebyrParameter, opprinneligBelopParameter, restbelopParameter, forsikringParameter, meglerfirmaParameter, orgnrParameter);
        }
    
        public virtual int sp_OppdaterProspektHarBestilling(Nullable<byte> partnerID, Nullable<long> prospektID, Nullable<System.DateTime> datoBest, Nullable<byte> produktID, Nullable<int> modulID, Nullable<bool> nyhet, string ordrenr, ObjectParameter @return)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var modulIDParameter = modulID.HasValue ?
                new ObjectParameter("ModulID", modulID) :
                new ObjectParameter("ModulID", typeof(int));
    
            var nyhetParameter = nyhet.HasValue ?
                new ObjectParameter("Nyhet", nyhet) :
                new ObjectParameter("Nyhet", typeof(bool));
    
            var ordrenrParameter = ordrenr != null ?
                new ObjectParameter("Ordrenr", ordrenr) :
                new ObjectParameter("Ordrenr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterProspektHarBestilling", partnerIDParameter, prospektIDParameter, datoBestParameter, produktIDParameter, modulIDParameter, nyhetParameter, ordrenrParameter, @return);
        }
    
        public virtual int sp_OppdaterProspektHarBestillingDatoEndret(Nullable<long> prospektID, Nullable<byte> produktID, Nullable<System.DateTime> datoBest, ObjectParameter @return)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterProspektHarBestillingDatoEndret", prospektIDParameter, produktIDParameter, datoBestParameter, @return);
        }
    
        public virtual int sp_OppdaterProspektHarBestillingDatoEndretGenTilProd(Nullable<long> prospektID, Nullable<byte> produktID, Nullable<System.DateTime> datoBest, ObjectParameter @return)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterProspektHarBestillingDatoEndretGenTilProd", prospektIDParameter, produktIDParameter, datoBestParameter, @return);
        }
    
        public virtual int sp_OppdaterProspektHarBestillingErGodkjentAvMegler(Nullable<long> prospektID, Nullable<System.DateTime> datoBest, Nullable<int> produktID, Nullable<int> brukerID, Nullable<bool> erGodkjentAvMegler, Nullable<bool> genTilProd, ObjectParameter @return)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(int));
    
            var brukerIDParameter = brukerID.HasValue ?
                new ObjectParameter("BrukerID", brukerID) :
                new ObjectParameter("BrukerID", typeof(int));
    
            var erGodkjentAvMeglerParameter = erGodkjentAvMegler.HasValue ?
                new ObjectParameter("ErGodkjentAvMegler", erGodkjentAvMegler) :
                new ObjectParameter("ErGodkjentAvMegler", typeof(bool));
    
            var genTilProdParameter = genTilProd.HasValue ?
                new ObjectParameter("GenTilProd", genTilProd) :
                new ObjectParameter("GenTilProd", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterProspektHarBestillingErGodkjentAvMegler", prospektIDParameter, datoBestParameter, produktIDParameter, brukerIDParameter, erGodkjentAvMeglerParameter, genTilProdParameter, @return);
        }
    
        public virtual int sp_OppdaterProspektHarBestillingFaktor(Nullable<long> prospektID, Nullable<byte> produktID, Nullable<System.DateTime> datoBest, Nullable<byte> faktor, ObjectParameter @return)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            var faktorParameter = faktor.HasValue ?
                new ObjectParameter("Faktor", faktor) :
                new ObjectParameter("Faktor", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterProspektHarBestillingFaktor", prospektIDParameter, produktIDParameter, datoBestParameter, faktorParameter, @return);
        }
    
        public virtual int sp_OppdaterProspektHarBestillingFilnavn(Nullable<long> prospektID, Nullable<System.DateTime> datoBest, Nullable<byte> produktID, string filnavn, ObjectParameter @return)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var filnavnParameter = filnavn != null ?
                new ObjectParameter("Filnavn", filnavn) :
                new ObjectParameter("Filnavn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterProspektHarBestillingFilnavn", prospektIDParameter, datoBestParameter, produktIDParameter, filnavnParameter, @return);
        }
    
        public virtual int sp_OppdaterProspektHarBestillingModul(Nullable<long> prospektID, Nullable<System.DateTime> datoBest, Nullable<byte> produktID, Nullable<int> modulID, Nullable<bool> nyhet, ObjectParameter @return)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var modulIDParameter = modulID.HasValue ?
                new ObjectParameter("ModulID", modulID) :
                new ObjectParameter("ModulID", typeof(int));
    
            var nyhetParameter = nyhet.HasValue ?
                new ObjectParameter("Nyhet", nyhet) :
                new ObjectParameter("Nyhet", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterProspektHarBestillingModul", prospektIDParameter, datoBestParameter, produktIDParameter, modulIDParameter, nyhetParameter, @return);
        }
    
        public virtual int sp_OppdaterProspektHarBestillingOrdrestatus(Nullable<long> prospektID, Nullable<byte> produktID, Nullable<System.DateTime> datoBest, Nullable<byte> ordrestatus, ObjectParameter @return)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            var ordrestatusParameter = ordrestatus.HasValue ?
                new ObjectParameter("Ordrestatus", ordrestatus) :
                new ObjectParameter("Ordrestatus", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterProspektHarBestillingOrdrestatus", prospektIDParameter, produktIDParameter, datoBestParameter, ordrestatusParameter, @return);
        }
    
        public virtual int sp_OppdaterProspektHarUtgivelse(Nullable<long> prospektID, Nullable<byte> ukenr, Nullable<short> aar, string ordrenr, ObjectParameter @return)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var ukenrParameter = ukenr.HasValue ?
                new ObjectParameter("Ukenr", ukenr) :
                new ObjectParameter("Ukenr", typeof(byte));
    
            var aarParameter = aar.HasValue ?
                new ObjectParameter("Aar", aar) :
                new ObjectParameter("Aar", typeof(short));
    
            var ordrenrParameter = ordrenr != null ?
                new ObjectParameter("Ordrenr", ordrenr) :
                new ObjectParameter("Ordrenr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterProspektHarUtgivelse", prospektIDParameter, ukenrParameter, aarParameter, ordrenrParameter, @return);
        }
    
        public virtual int sp_OppdaterProspektHarUtgivelseOrdrestatus(Nullable<long> prospektID, Nullable<byte> ukenr, Nullable<short> aar, Nullable<byte> ordrestatus, ObjectParameter @return)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var ukenrParameter = ukenr.HasValue ?
                new ObjectParameter("Ukenr", ukenr) :
                new ObjectParameter("Ukenr", typeof(byte));
    
            var aarParameter = aar.HasValue ?
                new ObjectParameter("Aar", aar) :
                new ObjectParameter("Aar", typeof(short));
    
            var ordrestatusParameter = ordrestatus.HasValue ?
                new ObjectParameter("Ordrestatus", ordrestatus) :
                new ObjectParameter("Ordrestatus", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterProspektHarUtgivelseOrdrestatus", prospektIDParameter, ukenrParameter, aarParameter, ordrestatusParameter, @return);
        }
    
        public virtual int sp_OppdaterProspektPil(ObjectParameter prospektID, string pilURL, Nullable<int> pilX, Nullable<int> pilY, Nullable<int> pilRefB, Nullable<int> pilRefH)
        {
            var pilURLParameter = pilURL != null ?
                new ObjectParameter("PilURL", pilURL) :
                new ObjectParameter("PilURL", typeof(string));
    
            var pilXParameter = pilX.HasValue ?
                new ObjectParameter("PilX", pilX) :
                new ObjectParameter("PilX", typeof(int));
    
            var pilYParameter = pilY.HasValue ?
                new ObjectParameter("PilY", pilY) :
                new ObjectParameter("PilY", typeof(int));
    
            var pilRefBParameter = pilRefB.HasValue ?
                new ObjectParameter("PilRefB", pilRefB) :
                new ObjectParameter("PilRefB", typeof(int));
    
            var pilRefHParameter = pilRefH.HasValue ?
                new ObjectParameter("PilRefH", pilRefH) :
                new ObjectParameter("PilRefH", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterProspektPil", prospektID, pilURLParameter, pilXParameter, pilYParameter, pilRefBParameter, pilRefHParameter);
        }
    
        public virtual int sp_OppdaterStatistikk(string brukerID, Nullable<int> type, Nullable<long> prospektID, string program)
        {
            var brukerIDParameter = brukerID != null ?
                new ObjectParameter("BrukerID", brukerID) :
                new ObjectParameter("BrukerID", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var programParameter = program != null ?
                new ObjectParameter("Program", program) :
                new ObjectParameter("Program", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterStatistikk", brukerIDParameter, typeParameter, prospektIDParameter, programParameter);
        }
    
        public virtual int sp_OppdaterTegning(Nullable<long> oppdragID, string tegningnavn, string tegningtekst)
        {
            var oppdragIDParameter = oppdragID.HasValue ?
                new ObjectParameter("OppdragID", oppdragID) :
                new ObjectParameter("OppdragID", typeof(long));
    
            var tegningnavnParameter = tegningnavn != null ?
                new ObjectParameter("Tegningnavn", tegningnavn) :
                new ObjectParameter("Tegningnavn", typeof(string));
    
            var tegningtekstParameter = tegningtekst != null ?
                new ObjectParameter("Tegningtekst", tegningtekst) :
                new ObjectParameter("Tegningtekst", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterTegning", oppdragIDParameter, tegningnavnParameter, tegningtekstParameter);
        }
    
        public virtual int sp_OppdaterUtgivelse(Nullable<long> prospektID, Nullable<System.DateTime> datoUtgivelse)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var datoUtgivelseParameter = datoUtgivelse.HasValue ?
                new ObjectParameter("DatoUtgivelse", datoUtgivelse) :
                new ObjectParameter("DatoUtgivelse", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OppdaterUtgivelse", prospektIDParameter, datoUtgivelseParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_SERVHentImportEpost(ObjectParameter filnavn)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SERVHentImportEpost", filnavn);
        }
    
        public virtual int sp_SERVHentKatalogByPartnerID(Nullable<byte> partnerID, ObjectParameter katalog)
        {
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SERVHentKatalogByPartnerID", partnerIDParameter, katalog);
        }
    
        public virtual int sp_SERVHentPartnerIDByEpost(string epost, ObjectParameter partnerID)
        {
            var epostParameter = epost != null ?
                new ObjectParameter("Epost", epost) :
                new ObjectParameter("Epost", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SERVHentPartnerIDByEpost", epostParameter, partnerID);
        }
    
        public virtual int sp_SERVHentPartnerIDBySubject(string subject, ObjectParameter partnerID)
        {
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SERVHentPartnerIDBySubject", subjectParameter, partnerID);
        }
    
        public virtual int sp_SERVOppdaterImportEpost(string filnavn, ObjectParameter @return)
        {
            var filnavnParameter = filnavn != null ?
                new ObjectParameter("Filnavn", filnavn) :
                new ObjectParameter("Filnavn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SERVOppdaterImportEpost", filnavnParameter, @return);
        }
    
        public virtual int sp_SERVOppdaterImportEpostStatus(string filnavn, ObjectParameter @return)
        {
            var filnavnParameter = filnavn != null ?
                new ObjectParameter("Filnavn", filnavn) :
                new ObjectParameter("Filnavn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SERVOppdaterImportEpostStatus", filnavnParameter, @return);
        }
    
        public virtual int sp_SjekkBoligNyheter(ObjectParameter ret)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SjekkBoligNyheter", ret);
        }
    
        public virtual int sp_SlettBestillingHarBilde(Nullable<long> bestillingHarBildeId, Nullable<long> prospektID, Nullable<System.DateTime> datoBest, Nullable<int> produktID)
        {
            var bestillingHarBildeIdParameter = bestillingHarBildeId.HasValue ?
                new ObjectParameter("BestillingHarBildeId", bestillingHarBildeId) :
                new ObjectParameter("BestillingHarBildeId", typeof(long));
    
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SlettBestillingHarBilde", bestillingHarBildeIdParameter, prospektIDParameter, datoBestParameter, produktIDParameter);
        }
    
        public virtual int sp_SlettBilde(Nullable<long> bildeID)
        {
            var bildeIDParameter = bildeID.HasValue ?
                new ObjectParameter("BildeID", bildeID) :
                new ObjectParameter("BildeID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SlettBilde", bildeIDParameter);
        }
    
        public virtual int sp_SlettBildepakke(Nullable<long> fotooppdragID)
        {
            var fotooppdragIDParameter = fotooppdragID.HasValue ?
                new ObjectParameter("FotooppdragID", fotooppdragID) :
                new ObjectParameter("FotooppdragID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SlettBildepakke", fotooppdragIDParameter);
        }
    
        public virtual int sp_SlettBruker(Nullable<int> brukerID)
        {
            var brukerIDParameter = brukerID.HasValue ?
                new ObjectParameter("BrukerID", brukerID) :
                new ObjectParameter("BrukerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SlettBruker", brukerIDParameter);
        }
    
        public virtual int sp_SlettFoto(Nullable<long> fotoID)
        {
            var fotoIDParameter = fotoID.HasValue ?
                new ObjectParameter("FotoID", fotoID) :
                new ObjectParameter("FotoID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SlettFoto", fotoIDParameter);
        }
    
        public virtual int sp_SlettFotograf(Nullable<int> fotografID)
        {
            var fotografIDParameter = fotografID.HasValue ?
                new ObjectParameter("FotografID", fotografID) :
                new ObjectParameter("FotografID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SlettFotograf", fotografIDParameter);
        }
    
        public virtual int sp_SlettFotooppdragHarTjenesteType(Nullable<long> fotooppdragID)
        {
            var fotooppdragIDParameter = fotooppdragID.HasValue ?
                new ObjectParameter("FotooppdragID", fotooppdragID) :
                new ObjectParameter("FotooppdragID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SlettFotooppdragHarTjenesteType", fotooppdragIDParameter);
        }
    
        public virtual int sp_SlettFotoserie(Nullable<long> fotooppdragID)
        {
            var fotooppdragIDParameter = fotooppdragID.HasValue ?
                new ObjectParameter("FotooppdragID", fotooppdragID) :
                new ObjectParameter("FotooppdragID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SlettFotoserie", fotooppdragIDParameter);
        }
    
        public virtual int sp_SlettOppdragHarTjenesteType(Nullable<long> oppdragID)
        {
            var oppdragIDParameter = oppdragID.HasValue ?
                new ObjectParameter("OppdragID", oppdragID) :
                new ObjectParameter("OppdragID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SlettOppdragHarTjenesteType", oppdragIDParameter);
        }
    
        public virtual int sp_SlettPano(Nullable<long> panoID)
        {
            var panoIDParameter = panoID.HasValue ?
                new ObjectParameter("PanoID", panoID) :
                new ObjectParameter("PanoID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SlettPano", panoIDParameter);
        }
    
        public virtual int sp_SlettPanorama(Nullable<long> panoramaID)
        {
            var panoramaIDParameter = panoramaID.HasValue ?
                new ObjectParameter("PanoramaID", panoramaID) :
                new ObjectParameter("PanoramaID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SlettPanorama", panoramaIDParameter);
        }
    
        public virtual int sp_SlettProduktHarAnnonse(Nullable<int> annonseID)
        {
            var annonseIDParameter = annonseID.HasValue ?
                new ObjectParameter("AnnonseID", annonseID) :
                new ObjectParameter("AnnonseID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SlettProduktHarAnnonse", annonseIDParameter);
        }
    
        public virtual int sp_SlettTegning(Nullable<long> tegningID)
        {
            var tegningIDParameter = tegningID.HasValue ?
                new ObjectParameter("TegningID", tegningID) :
                new ObjectParameter("TegningID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SlettTegning", tegningIDParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<sp_WAServ_HentProspektBestillingListeOrdre_Result> sp_WAServ_HentProspektBestillingListeOrdre(Nullable<int> produktID, Nullable<int> partnerID, Nullable<int> modulID, Nullable<System.DateTime> datoBest)
        {
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(int));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(int));
    
            var modulIDParameter = modulID.HasValue ?
                new ObjectParameter("ModulID", modulID) :
                new ObjectParameter("ModulID", typeof(int));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_WAServ_HentProspektBestillingListeOrdre_Result>("sp_WAServ_HentProspektBestillingListeOrdre", produktIDParameter, partnerIDParameter, modulIDParameter, datoBestParameter);
        }
    
        public virtual int sp_WS_HentBildeProspektID(Nullable<long> prospektID, Nullable<byte> sortering)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var sorteringParameter = sortering.HasValue ?
                new ObjectParameter("Sortering", sortering) :
                new ObjectParameter("Sortering", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_WS_HentBildeProspektID", prospektIDParameter, sorteringParameter);
        }
    
        public virtual ObjectResult<sp_WS_HentBilder_Result> sp_WS_HentBilder(Nullable<long> prospektID, Nullable<byte> produktID, Nullable<System.DateTime> datoBest)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_WS_HentBilder_Result>("sp_WS_HentBilder", prospektIDParameter, produktIDParameter, datoBestParameter);
        }
    
        public virtual ObjectResult<sp_WS_HentBilderLokal_Result> sp_WS_HentBilderLokal(Nullable<long> prospektID)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_WS_HentBilderLokal_Result>("sp_WS_HentBilderLokal", prospektIDParameter);
        }
    
        public virtual ObjectResult<sp_WS_HentModulRessurs_Result> sp_WS_HentModulRessurs(Nullable<byte> produktID)
        {
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_WS_HentModulRessurs_Result>("sp_WS_HentModulRessurs", produktIDParameter);
        }
    
        public virtual ObjectResult<sp_WS_HentProspekt_Result> sp_WS_HentProspekt(Nullable<long> prospektID)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_WS_HentProspekt_Result>("sp_WS_HentProspekt", prospektIDParameter);
        }
    
        public virtual int sp_WS_HentProspektBestillingListe(Nullable<byte> produktID, Nullable<byte> partnerID, Nullable<byte> inndelingID, Nullable<int> modulID, Nullable<System.DateTime> datoBest, string ordrenr)
        {
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var partnerIDParameter = partnerID.HasValue ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(byte));
    
            var inndelingIDParameter = inndelingID.HasValue ?
                new ObjectParameter("InndelingID", inndelingID) :
                new ObjectParameter("InndelingID", typeof(byte));
    
            var modulIDParameter = modulID.HasValue ?
                new ObjectParameter("ModulID", modulID) :
                new ObjectParameter("ModulID", typeof(int));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            var ordrenrParameter = ordrenr != null ?
                new ObjectParameter("Ordrenr", ordrenr) :
                new ObjectParameter("Ordrenr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_WS_HentProspektBestillingListe", produktIDParameter, partnerIDParameter, inndelingIDParameter, modulIDParameter, datoBestParameter, ordrenrParameter);
        }
    
        public virtual ObjectResult<sp_WS_HentProspektModulInfo_Result> sp_WS_HentProspektModulInfo(Nullable<long> prospektID, Nullable<byte> produktID, Nullable<System.DateTime> datoBest)
        {
            var prospektIDParameter = prospektID.HasValue ?
                new ObjectParameter("ProspektID", prospektID) :
                new ObjectParameter("ProspektID", typeof(long));
    
            var produktIDParameter = produktID.HasValue ?
                new ObjectParameter("ProduktID", produktID) :
                new ObjectParameter("ProduktID", typeof(byte));
    
            var datoBestParameter = datoBest.HasValue ?
                new ObjectParameter("DatoBest", datoBest) :
                new ObjectParameter("DatoBest", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_WS_HentProspektModulInfo_Result>("sp_WS_HentProspektModulInfo", prospektIDParameter, produktIDParameter, datoBestParameter);
        }
    }
}
